components:
  schemas:
    CreateUserRequest1:
      example:
        email: subuser2@example.com
        permissions:
        - control.console
        - control.start
      properties:
        email:
          type: string
        permissions:
          description: ''
          items:
            type: string
          type: array
      required:
      - email
      - permissions
      title: CreateUserRequest1
      type: object
    CreateallocationsRequest:
      example:
        ip: 10.0.0.1
        ports:
        - '25565'
      properties:
        ip:
          type: string
        ports:
          description: ''
          items:
            type: string
          type: array
      required:
      - ip
      - ports
      title: CreateallocationsRequest
      type: object
    CreatedatabaseRequest:
      example:
        database: matches
        host: 4
        remote: '%'
      properties:
        database:
          type: string
        host:
          format: int32
          type: integer
        remote:
          type: string
      required:
      - database
      - remote
      - host
      title: CreatedatabaseRequest
      type: object
    CreatedatabaseRequest1:
      example:
        database: bans
        remote: '%'
      properties:
        database:
          type: string
        remote:
          type: string
      required:
      - database
      - remote
      title: CreatedatabaseRequest1
      type: object
    CreatelocationRequest:
      example:
        long: London Datacenter
        short: GB
      properties:
        long:
          type: string
        short:
          type: string
      required:
      - short
      - long
      title: CreatelocationRequest
      type: object
    CreatenodeRequest:
      example:
        daemon_listen: 8080
        daemon_sftp: 2022
        disk: 50000
        disk_overallocate: 0
        fqdn: node2.example.com
        location_id: 1
        memory: 10240
        memory_overallocate: 0
        name: New Node
        scheme: https
        upload_size: 100
      properties:
        daemon_listen:
          format: int32
          type: integer
        daemon_sftp:
          format: int32
          type: integer
        disk:
          format: int32
          type: integer
        disk_overallocate:
          format: int32
          type: integer
        fqdn:
          type: string
        location_id:
          format: int32
          type: integer
        memory:
          format: int32
          type: integer
        memory_overallocate:
          format: int32
          type: integer
        name:
          type: string
        scheme:
          type: string
        upload_size:
          format: int32
          type: integer
      required:
      - name
      - location_id
      - fqdn
      - scheme
      - memory
      - memory_overallocate
      - disk
      - disk_overallocate
      - upload_size
      - daemon_sftp
      - daemon_listen
      title: CreatenodeRequest
      type: object
    CreatescheduleRequest:
      example:
        day_of_month: '*'
        day_of_week: '*'
        hour: '*'
        is_active: true
        minute: '*'
        name: Minute Hello
      properties:
        day_of_month:
          type: string
        day_of_week:
          type: string
        hour:
          type: string
        is_active:
          type: boolean
        minute:
          type: string
        name:
          type: string
      required:
      - name
      - minute
      - hour
      - day_of_month
      - day_of_week
      - is_active
      title: CreatescheduleRequest
      type: object
    CreateserverRequest:
      example:
        allocation:
          default: 17
        docker_image: quay.io/pterodactyl/core:java
        egg: 1
        environment:
          BUNGEE_VERSION: latest
          SERVER_JARFILE: server.jar
        feature_limits:
          backups: 1
          databases: 5
        limits:
          cpu: 100
          disk: 512
          io: 500
          memory: 128
          swap: 0
        name: Building
        startup: java -Xms128M -Xmx128M -jar server.jar
        user: 1
      properties:
        allocation:
          type: object
        docker_image:
          type: string
        egg:
          format: int32
          type: integer
        environment:
          type: object
        feature_limits:
          type: object
        limits:
          type: object
        name:
          type: string
        startup:
          type: string
        user:
          format: int32
          type: integer
      required:
      - name
      - user
      - egg
      - docker_image
      - startup
      - environment
      - limits
      - feature_limits
      - allocation
      title: CreateserverRequest
      type: object
    CreateuserRequest:
      example:
        email: example10@example.com
        first_name: Example
        last_name: User
        username: exampleuser
      properties:
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
      required:
      - email
      - username
      - first_name
      - last_name
      title: CreateuserRequest
      type: object
    UpdatelocationRequest:
      example:
        long: London Datacenter
        short: GB
      properties:
        long:
          type: string
        short:
          type: string
      required:
      - short
      - long
      title: UpdatelocationRequest
      type: object
    UpdateuserRequest:
      example:
        email: example10@example.com
        first_name: Example
        language: en
        last_name: User
        password: New Password
        username: exampleuser
      properties:
        email:
          type: string
        first_name:
          type: string
        language:
          type: string
        last_name:
          type: string
        password:
          type: string
        username:
          type: string
      required:
      - email
      - username
      - first_name
      - last_name
      - language
      - password
      title: UpdateuserRequest
      type: object
    allocationsallocationSetallocationnoteRequest:
      example:
        notes: Votifier
      properties:
        notes:
          type: string
      required:
      - notes
      title: allocationsallocationSetallocationnoteRequest
      type: object
    api-keysCreateAPIkeyRequest:
      example:
        allowed_ips:
        - 127.0.0.1
        - 192.168.0.1
        description: Restricted IPs
      properties:
        allowed_ips:
          description: ''
          items:
            type: string
          type: array
        description:
          type: string
      required:
      - description
      - allowed_ips
      title: api-keysCreateAPIkeyRequest
      type: object
    commandSendcommandRequest:
      example:
        command: say CodeCo says Hi!
      properties:
        command:
          type: string
      required:
      - command
      title: commandSendcommandRequest
      type: object
    compressCompressfileRequest:
      example:
        files:
        - abc
        root: /
      properties:
        files:
          description: ''
          items:
            type: string
          type: array
        root:
          type: string
      required:
      - root
      - files
      title: compressCompressfileRequest
      type: object
    copyCopyfileRequest:
      example:
        location: /server.properties
      properties:
        location:
          type: string
      required:
      - location
      title: copyCopyfileRequest
      type: object
    create-folderCreatefolderRequest:
      example:
        name: worlds
        root: /maps
      properties:
        name:
          type: string
        root:
          type: string
      required:
      - root
      - name
      title: create-folderCreatefolderRequest
      type: object
    decompressDecompressfileRequest:
      example:
        file: archive-2020-08-23T220655Z.tar.gz
        root: /
      properties:
        file:
          type: string
        root:
          type: string
      required:
      - root
      - file
      title: decompressDecompressfileRequest
      type: object
    deleteDeletefileRequest:
      example:
        files:
        - worlds
        root: /maps
      properties:
        files:
          description: ''
          items:
            type: string
          type: array
        root:
          type: string
      required:
      - root
      - files
      title: deleteDeletefileRequest
      type: object
    emailUpdateemailRequest:
      example:
        email: example@xample.com
        password: Password
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
      title: emailUpdateemailRequest
      type: object
    nodeUpdatenodeRequest:
      example:
        behind_proxy: false
        daemon_listen: 8080
        daemon_sftp: 2022
        description: Test
        disk: 5000
        disk_overallocate: 0
        fqdn: pterodactyl.file.properties
        location_id: 1
        maintenance_mode: false
        memory: 2048
        memory_overallocate: 0
        name: Test Renamed
        scheme: https
        upload_size: 100
      properties:
        behind_proxy:
          type: boolean
        daemon_listen:
          format: int32
          type: integer
        daemon_sftp:
          format: int32
          type: integer
        description:
          type: string
        disk:
          format: int32
          type: integer
        disk_overallocate:
          format: int32
          type: integer
        fqdn:
          type: string
        location_id:
          format: int32
          type: integer
        maintenance_mode:
          type: boolean
        memory:
          format: int32
          type: integer
        memory_overallocate:
          format: int32
          type: integer
        name:
          type: string
        scheme:
          type: string
        upload_size:
          format: int32
          type: integer
      required:
      - name
      - description
      - location_id
      - fqdn
      - scheme
      - behind_proxy
      - maintenance_mode
      - memory
      - memory_overallocate
      - disk
      - disk_overallocate
      - upload_size
      - daemon_sftp
      - daemon_listen
      title: nodeUpdatenodeRequest
      type: object
    passwordUpdatepasswordRequest:
      example:
        current_password: Password
        password: password
        password_confirmation: password
      properties:
        current_password:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
      required:
      - current_password
      - password
      - password_confirmation
      title: passwordUpdatepasswordRequest
      type: object
    powerChangepowerstateRequest:
      example:
        signal: start
      properties:
        signal:
          type: string
      required:
      - signal
      title: powerChangepowerstateRequest
      type: object
    renameRenamefileRequest:
      example:
        files:
        - from: data
          to: abc
        root: /
      properties:
        files:
          description: ''
          items:
            type: object
          type: array
        root:
          type: string
      required:
      - root
      - files
      title: renameRenamefileRequest
      type: object
    renameRenameserverRequest:
      example:
        name: Gaming
      properties:
        name:
          type: string
      required:
      - name
      title: renameRenameserverRequest
      type: object
    scheduleUpdatescheduleRequest:
      example:
        day_of_month: '*'
        day_of_week: '*'
        hour: '*'
        minute: '0'
        name: Hourly Hello
      properties:
        day_of_month:
          type: string
        day_of_week:
          type: string
        hour:
          type: string
        minute:
          type: string
        name:
          type: string
      required:
      - name
      - minute
      - hour
      - day_of_month
      - day_of_week
      title: scheduleUpdatescheduleRequest
      type: object
    scheduletasksCreatetaskRequest:
      example:
        action: command
        payload: say Hello World
        time_offset: '0'
      properties:
        action:
          type: string
        payload:
          type: string
        time_offset:
          type: string
      required:
      - action
      - payload
      - time_offset
      title: scheduletasksCreatetaskRequest
      type: object
    scheduletaskstaskUpdatetaskRequest:
      example:
        action: command
        payload: say Updated Statement!?
        time_offset: '0'
      properties:
        action:
          type: string
        payload:
          type: string
        time_offset:
          type: string
      required:
      - action
      - payload
      - time_offset
      title: scheduletaskstaskUpdatetaskRequest
      type: object
    serverbuildUpdatebuildRequest:
      example:
        allocation: 1
        cpu: 0
        disk: 200
        feature_limits:
          allocations: 5
          backups: 2
          databases: 5
        io: 500
        memory: 512
        swap: 0
        threads: null
      properties:
        allocation:
          format: int32
          type: integer
        cpu:
          format: int32
          type: integer
        disk:
          format: int32
          type: integer
        feature_limits:
          type: object
        io:
          format: int32
          type: integer
        memory:
          format: int32
          type: integer
        swap:
          format: int32
          type: integer
        threads:
          nullable: true
          type: string
      required:
      - allocation
      - memory
      - swap
      - disk
      - io
      - cpu
      - threads
      - feature_limits
      title: serverbuildUpdatebuildRequest
      type: object
    serverdetailsUpdatedetailsRequest:
      example:
        description: Matt from Wii Sports
        external_id: RemoteID1
        name: Gaming
        user: 1
      properties:
        description:
          type: string
        external_id:
          type: string
        name:
          type: string
        user:
          format: int32
          type: integer
      required:
      - name
      - user
      - external_id
      - description
      title: serverdetailsUpdatedetailsRequest
      type: object
    serverstartupUpdatestartupRequest:
      example:
        egg: 5
        environment:
          SERVER_JARFILE: server.jar
          VANILLA_VERSION: latest
        image: quay.io/pterodactyl/core:java
        skip_scripts: false
        startup: java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}
      properties:
        egg:
          format: int32
          type: integer
        environment:
          type: object
        image:
          type: string
        skip_scripts:
          type: boolean
        startup:
          type: string
      required:
      - startup
      - environment
      - egg
      - image
      - skip_scripts
      title: serverstartupUpdatestartupRequest
      type: object
    subuserUpdateuserRequest:
      example:
        permissions:
        - control.console
        - control.start
      properties:
        permissions:
          description: ''
          items:
            type: string
          type: array
      required:
      - permissions
      title: subuserUpdateuserRequest
      type: object
    two-factorDisable2FARequest:
      example:
        password: password
      properties:
        password:
          type: string
      required:
      - password
      title: two-factorDisable2FARequest
      type: object
    two-factorEnable2FARequest:
      example:
        code: '505134'
      properties:
        code:
          type: string
      required:
      - code
      title: two-factorEnable2FARequest
      type: object
    variableUpdateVariableRequest:
      example:
        key: SERVER_JARFILE
        value: server.jar
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      title: variableUpdateVariableRequest
      type: object
  securitySchemes:
    bearer:
      scheme: bearer
      type: http
info:
  contact: {}
  description: "Welcome to the Pterodactyl v1 API documentation. This documentation\
    \ is unofficial and provided by Dashflo.\n\nIf you find any errors throughout\
    \ this API reference, please [let us know](https://dashflo.net/tickets/new). A\
    \ special thanks to everyone who has helped contribute!\n\n**The legacy Pterodactyl\
    \ v0.7 API documentation [can be found here](https://dashflo.net/docs/api/pterodactyl/v0.7/).**\
    \ Please remember you should not be using v0.7, and should upgrade as soon as\
    \ possible.\n\nPterodactyl Links: **[Website](https://pterodactyl.io/)** | **[GitHub](https://github.com/pterodactyl)**\
    \ | **[Discord](https://discord.gg/pterodactyl)**\n\n<!--\n# API Wrappers/SDKs\n\
    These wrappers can help save time while working with the API in your programming\
    \ language of choice.\n\n- [Ptero4J](https://github.com/stanjg/Ptero4J) (Java)\n\
    - [Pterodactyl4J](https://github.com/mattmalec/Pterodactyl4J) (Java)\n- [crocgodyl](https://github.com/parkervcp/crocgodyl)\
    \ (Golang)\n- [Nodeactyl](https://github.com/Burchard36/Nodeactyl) (Node.js)\n\
    - [pterodactyl-sdk](https://github.com/hcgcloud/pterodactyl-sdk) (PHP)\n- [Sharpdactyl](https://github.com/KadePcGames/Sharpdactyl)\
    \ (C#)\n- [Pydactyl](https://github.com/iamkubi/pydactyl) (Python)\n- [aiodactyl](https://github.com/WardPearce/aiodactyl)\
    \ (Python)\n\nIf you are a developer of a Pterodactyl API wrapper that's not listed\
    \ here, feel free to [contact us](https://dashflo.net/tickets/new) and we can\
    \ add your API wrapper/SDK to the list.\n-->\n\n# Authentication\nA user can generate\
    \ an client API key from: https://pterodactyl.app/account/api\nAn admin can generate\
    \ an application API key from: https://pterodactyl.app/admin/api\n\nAPI keys are\
    \ entered as bearer tokens with all API requests. Here is an example CURL request:\n\
    \n```\ncurl \"<endpoint>\"\n  -H \"Authorization: Bearer <API-Key>\"\n  -H \"\
    Content-Type: application/json\" \\\n  -H \"Accept: Application/vnd.pterodactyl.v1+json\"\
    \ \\\n```\n\n# Ratelimits\n240 requests can be made each minute. Headers are returned\
    \ to show thelimit, and how many are used within minute.\n```\nx-ratelimit-limit:\
    \ 240\nx-ratelimit-remaining: 237\n```\n\n# Docs Guide\nSome API routes require\
    \ data input, or have additional information that can be provided. The route will\
    \ include table(s) with the available parameters. \n\n| Name                 |\
    \ Description       |\n|----------------------|-------------------|\n| Include\
    \ parameters   | List of parameters that can be used after adding `?include=<parameters>,<more-parameters>`\
    \ to the route |\n| Available parameters | List of all the different parameters\
    \ available such as `?example=something&example2=something` |\n| Filters | Filter\
    \ the data to only include certain information `?filter[uuid]=something` |\n|\
    \ Sort by | Sort the returned results `?sort=-id`. Add a `-` before the sort type\
    \ to reverse the order |\n| Fields               | Data input fields |\n\nYou\
    \ can combine multiple filters, it'll look for all matching results. For example,\
    \ you could add &filter[uuid]=3387 and then it'll only return test@example.com.\n\
    \n** **\n[![Dashflo](https://cdn.dashflo.net/promotions/banners/service/minecraft/7u54t2qnuu8qTRv4.png?cache300620192021\
    \ =100%x100% \"Dashflo\")](https://dashflo.net/store/dedicated-servers)"
  title: Pterodactyl v1 API Reference
  version: '1.0'
openapi: 3.0.0
paths:
  /account:
    get:
      deprecated: false
      description: "Retrieves information about the account\n\n<!-- RESPONSE 200 -->\n\
        {\n  \"object\": \"user\",\n  \"attributes\": {\n    \"id\": 1,\n    \"admin\"\
        : true,\n    \"username\": \"admin\",\n    \"email\": \"example@example.com\"\
        ,\n    \"first_name\": \"Admin\",\n    \"last_name\": \"User\",\n    \"language\"\
        : \"en\"\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/]Accountdetails'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api/client
        variables: {}
      summary: '[ / ] Account details'
      tags:
      - '[ /account ] Account'
  /account/api-keys:
    get:
      deprecated: false
      description: "Retries a list of API keys\n\n<!-- RESPONSE 200 -->\n{\n  \"object\"\
        : \"list\",\n  \"data\": [\n    {\n      \"object\": \"api_key\",\n      \"\
        attributes\": {\n        \"identifier\": \"wwQ5DJ6X1XaFznQS\",\n        \"\
        description\": \"API Docs\",\n        \"allowed_ips\": [],\n        \"last_used_at\"\
        : \"2020-06-03T15:04:47+01:00\",\n        \"created_at\": \"2020-05-18T00:12:43+01:00\"\
        \n      }\n    }\n  ]\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/api-keys]ListAPIkeys'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api/client
        variables: {}
      summary: '[ /api-keys ] List API keys'
      tags:
      - '[ /account ] Account'
    post:
      deprecated: false
      description: "Generates a new API key\n\n## Fields\n| Name        | Required?\
        \ | Type   | Description          | Rules |\n|-------------|-----------|--------|----------------------|-------|\n\
        | description | required  | string | Note for the API key |       |\n| allowed_ips\
        \ |           | object | List of allowed IPs  |       |\n\n<!-- RESPONSE 201\
        \ -->\n{\n  \"object\": \"api_key\",\n  \"attributes\": {\n    \"identifier\"\
        : \"yjAZbHMyKrv9YRZ0\",\n    \"description\": \"Restricted IPs\",\n    \"\
        allowed_ips\": [\n      \"127.0.0.1\",\n      \"192.168.0.1\"\n    ],\n  \
        \  \"last_used_at\": null,\n    \"created_at\": \"2020-08-17T04:44:42+01:00\"\
        \n  },\n  \"meta\": {\n    \"secret_token\": \"wiHiMbmgjLOkA2fPzRD6KdMe7Q9Cqaka\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/api-keys]CreateAPIkey'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowed_ips:
              - 127.0.0.1
              - 192.168.0.1
              description: Restricted IPs
            schema:
              allOf:
              - $ref: '#/components/schemas/api-keysCreateAPIkeyRequest'
              - example:
                  allowed_ips:
                  - 127.0.0.1
                  - 192.168.0.1
                  description: Restricted IPs
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api/client
        variables: {}
      summary: '[ /api-keys ] Create API key'
      tags:
      - '[ /account ] Account'
  /account/api-keys/{api_key_id}:
    delete:
      deprecated: false
      description: "Deletes the specified API key\n\n<!-- RESPONSE 204 -->\n// Successful\n\
        <!-- ENDRESPONSE -->\n\n<!-- RESPONSE 404 -->\n// Non existing API key\n{\n\
        \  \"errors\": [\n    {\n      \"code\": \"NotFoundHttpException\",\n    \
        \  \"status\": \"404\",\n      \"detail\": \"An error was encountered while\
        \ processing this request.\"\n    }\n  ]\n}\n<!-- ENDRESPONSE -->\n"
      operationId: _account_api-keys_{api_key_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: api_key_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api/client
        variables: {}
      summary: '[ /api-keys/{identifier} ] Delete API key'
      tags:
      - ' Account'
  /account/email:
    put:
      deprecated: false
      description: "Updates the email address of the account\n\n## Fields\n| Name\
        \     | Required? | Type   | Description       | Rules |\n|----------|-----------|--------|-------------------|-------|\n\
        | email    | required  | string | New email         |       |\n| password\
        \ | required  | string | Existing password |       |\n\n<!-- RESPONSE 201\
        \ -->\n// Successful\n<!-- ENDRESPONSE -->\n\n<!-- RESPONSE 400 -->\n// Invalid\
        \ email format\n{\n  \"errors\": [\n    {\n      \"code\": \"email\",\n  \
        \    \"detail\": \"The email must be a valid email address.\",\n      \"source\"\
        : {\n        \"field\": \"email\"\n      }\n    }\n  ]\n}\n<!-- ENDRESPONSE\
        \ -->\n\n<!-- RESPONSE 400 -->\n// Invalid password\n{\n  \"errors\": [\n\
        \    {\n      \"code\": \"InvalidPasswordProvidedException\",\n      \"status\"\
        : \"400\",\n      \"detail\": \"The password provided was invalid for this\
        \ account.\"\n    }\n  ]\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/email]Updateemail'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: example@xample.com
              password: Password
            schema:
              allOf:
              - $ref: '#/components/schemas/emailUpdateemailRequest'
              - example:
                  email: example@xample.com
                  password: Password
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api/client
        variables: {}
      summary: '[ /email ] Update email'
      tags:
      - '[ /account ] Account'
  /account/password:
    put:
      deprecated: false
      description: 'Updates the password of the account


        ## Fields

        | Name                  | Required? | Type   | Description          | Rules
        |

        |-----------------------|-----------|--------|----------------------|-------|

        | current_password      | required  | string | Existing password    |       |

        | password              | required  | string | New password         |       |

        | password_confirmation | required  | string | Confirm new password |       |


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: '[/password]Updatepassword'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              current_password: Password
              password: password
              password_confirmation: password
            schema:
              allOf:
              - $ref: '#/components/schemas/passwordUpdatepasswordRequest'
              - example:
                  current_password: Password
                  password: password
                  password_confirmation: password
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api/client
        variables: {}
      summary: '[ /password ] Update password'
      tags:
      - '[ /account ] Account'
  /account/two-factor:
    delete:
      deprecated: false
      description: "Disables TOTP 2FA on the account\n\n## Fields\n| Name     | Required?\
        \ | Type   | Description       | Rules |\n|----------|-----------|--------|-------------------|-------|\n\
        | password | required  | string | Existing password |       |\n\n<!-- RESPONSE\
        \ 204 -->\n// Successful\n<!-- ENDRESPONSE -->\n\n<!-- RESPONSE 400 -->\n\
        // Incorrect password\n{\n  \"errors\": [\n    {\n      \"code\": \"BadRequestHttpException\"\
        ,\n      \"status\": \"400\",\n      \"detail\": \"An error was encountered\
        \ while processing this request.\"\n    }\n  ]\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/two-factor]Disable2FA'
      parameters:
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api/client
        variables: {}
      summary: '[ /two-factor ] Disable 2FA'
      tags:
      - '[ /account ] Account'
    get:
      deprecated: false
      description: "Generates a TOTP QR code image to allow the setup of 2FA\n\n<!--\
        \ RESPONSE 200 -->\n{\n  \"data\": {\n    \"image_url_data\": \"otpauth:\\\
        /\\/totp\\/Pterodactyl:example%40example.com?secret=LGYOWJEGVRPPGPWATP5ZHOYC7DHAYQ6S&issuer=Pterodactyl\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/two-factor]2FAdetails'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api/client
        variables: {}
      summary: '[ /two-factor ] 2FA details'
      tags:
      - '[ /account ] Account'
    post:
      deprecated: false
      description: "Enables TOTP 2FA using the QR code generated by the GET request\n\
        \nUses code generated from `GET /account/two-factor`\n\n## Fields\n| Name\
        \    | Required? | Type   | Description       | Rules |\n|---------|-----------|--------|-------------------|-------|\n\
        | code    | required  | string | TOTP Code         |       |\n\n<!-- RESPONSE\
        \ 200 -->\n{\n  \"object\": \"recovery_tokens\",\n  \"attributes\": {\n  \
        \  \"tokens\": [\n      \"MpBjHH8O08\",\n      \"D9H0hktN6L\",\n      \"ho8KiUpeV8\"\
        ,\n      \"06vZEfrYPf\",\n      \"nFRySZ2ryh\",\n      \"7K1cTrhGoV\",\n \
        \     \"n6xpwwlJfv\",\n      \"hAmyCsZxYO\",\n      \"5FiMKFyNpH\",\n    \
        \  \"IViSFoRFvW\"\n    ]\n  }\n}\n<!-- ENDRESPONSE -->\n\n<!-- RESPONSE 400\
        \ -->\n{\n  \"errors\": [\n    {\n      \"code\": \"TwoFactorAuthenticationTokenInvalid\"\
        ,\n      \"status\": \"400\",\n      \"detail\": \"The token provided is not\
        \ valid.\"\n    }\n  ]\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/two-factor]Enable2FA'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              code: '505134'
            schema:
              allOf:
              - $ref: '#/components/schemas/two-factorEnable2FARequest'
              - example:
                  code: '505134'
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api/client
        variables: {}
      summary: '[ /two-factor ] Enable 2FA'
      tags:
      - '[ /account ] Account'
  /application/locations:
    get:
      deprecated: false
      description: "Retrieves all locations\n\n# Available include parameters\n| Parameter\
        \ | Description                            |\n|-----------|----------------------------------------|\n\
        | nodes     | List of nodes assigned to the location |\n| servers   | List\
        \ of servers in the location        |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\"\
        : \"list\",\n  \"data\": [\n    {\n      \"object\": \"location\",\n     \
        \ \"attributes\": {\n        \"id\": 1,\n        \"short\": \"GB\",\n    \
        \    \"long\": \"London Datacenter\",\n        \"updated_at\": \"2020-06-13T21:16:58+00:00\"\
        ,\n        \"created_at\": \"2019-12-22T04:44:18+00:00\"\n      }\n    }\n\
        \  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 1,\n      \"\
        count\": 1,\n      \"per_page\": 50,\n      \"current_page\": 1,\n      \"\
        total_pages\": 1,\n      \"links\": {}\n    }\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/]Listlocations'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List locations'
      tags:
      - '[ /locations ] Locations'
    post:
      deprecated: false
      description: "Creates a new location\n\n## Fields\n| Name  | Required? | Type\
        \   | Description          | Rules |\n|-------|-----------|--------|----------------------|-------|\n\
        | short | required  | string | Location identifier  |       |\n| long  | optional\
        \  | string | Location description |       |\n\n<!-- RESPONSE 200 -->\n{\n\
        \  \"object\": \"location\",\n  \"attributes\": {\n    \"id\": 3,\n    \"\
        short\": \"G\",\n    \"long\": \"London Datacenter\",\n    \"updated_at\"\
        : \"2020-06-13T20:44:48+00:00\",\n    \"created_at\": \"2020-06-13T20:44:48+00:00\"\
        \n  },\n  \"meta\": {\n    \"resource\": \"https:\\/\\/pterodactyl.file.properties\\\
        /api\\/application\\/locations\\/3\"\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/]Createlocation'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              long: London Datacenter
              short: GB
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatelocationRequest'
              - example:
                  long: London Datacenter
                  short: GB
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Create location'
      tags:
      - '[ /locations ] Locations'
  /application/locations/{location_id}:
    delete:
      deprecated: false
      description: 'Deletes the specified location


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _application_locations_{location_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id001
        description: ''
        in: path
        name: location_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{location} ] Delete location'
      tags:
      - ' Locations'
    get:
      deprecated: false
      description: "Retrieves the specified location\n\n# Available include parameters\n\
        | Parameter | Description                            |\n|-----------|----------------------------------------|\n\
        | nodes     | List of nodes assigned to the location |\n| servers   | List\
        \ of servers in the location        |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\"\
        : \"location\",\n  \"attributes\": {\n    \"id\": 1,\n    \"short\": \"Test\"\
        ,\n    \"long\": \"Test\",\n    \"updated_at\": \"2019-12-22T04:44:18+00:00\"\
        ,\n    \"created_at\": \"2019-12-22T04:44:18+00:00\"\n  }\n}\n<!-- ENDRESPONSE\
        \ -->"
      operationId: _application_locations_{location_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id001
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{location} ] Location details'
      tags:
      - ' Locations'
    patch:
      deprecated: false
      description: "Updates the specified location\n\n<!-- RESPONSE 200 -->\n{\n \
        \ \"object\": \"location\",\n  \"attributes\": {\n    \"id\": 1,\n    \"short\"\
        : \"GB\",\n    \"long\": \"London Datacenter\",\n    \"updated_at\": \"2020-06-13T21:16:58+00:00\"\
        ,\n    \"created_at\": \"2019-12-22T04:44:18+00:00\"\n  }\n}\n<!-- ENDRESPONSE\
        \ -->"
      operationId: _application_locations_{location_id}_patch
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id001
      requestBody:
        content:
          application/json:
            example:
              long: London Datacenter
              short: GB
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatelocationRequest'
              - example:
                  long: London Datacenter
                  short: GB
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Update location'
      tags:
      - ' Locations'
  /application/nests:
    get:
      deprecated: false
      description: "Retrieves all nests\n\n# Available include parameters\n| Parameter\
        \ | Description                     |\n|-----------|---------------------------------|\n\
        | eggs      | List of eggs in the location    |\n| servers   | List of servers\
        \ in the location |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"list\",\n\
        \  \"data\": [\n    {\n      \"object\": \"nest\",\n      \"attributes\":\
        \ {\n        \"id\": 1,\n        \"uuid\": \"58bde975-ec57-4af2-b241-1426ac6d6d59\"\
        ,\n        \"author\": \"support@pterodactyl.io\",\n        \"name\": \"Minecraft\"\
        ,\n        \"description\": \"Minecraft - the classic game from Mojang. With\
        \ support for Vanilla MC, Spigot, and many others!\",\n        \"created_at\"\
        : \"2019-12-22T04:42:51+00:00\",\n        \"updated_at\": \"2019-12-22T04:42:51+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"nest\",\n      \"attributes\"\
        : {\n        \"id\": 2,\n        \"uuid\": \"5246d226-e8e8-46f5-b624-e99cf1a68c9a\"\
        ,\n        \"author\": \"support@pterodactyl.io\",\n        \"name\": \"Source\
        \ Engine\",\n        \"description\": \"Includes support for most Source Dedicated\
        \ Server games.\",\n        \"created_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n        \"updated_at\": \"2019-12-22T04:42:51+00:00\"\n      }\n    },\n\
        \    {\n      \"object\": \"nest\",\n      \"attributes\": {\n        \"id\"\
        : 3,\n        \"uuid\": \"0eb05bf7-3a00-4b1d-bef5-a6d8d7375e44\",\n      \
        \  \"author\": \"support@pterodactyl.io\",\n        \"name\": \"Voice Servers\"\
        ,\n        \"description\": \"Voice servers such as Mumble and Teamspeak 3.\"\
        ,\n        \"created_at\": \"2019-12-22T04:42:51+00:00\",\n        \"updated_at\"\
        : \"2019-12-22T04:42:51+00:00\"\n      }\n    },\n    {\n      \"object\"\
        : \"nest\",\n      \"attributes\": {\n        \"id\": 4,\n        \"uuid\"\
        : \"e2a21c82-7175-4db0-9510-8d1ed525b2bf\",\n        \"author\": \"support@pterodactyl.io\"\
        ,\n        \"name\": \"Rust\",\n        \"description\": \"Rust - A game where\
        \ you must fight to survive.\",\n        \"created_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n        \"updated_at\": \"2019-12-22T04:42:51+00:00\"\n      }\n    }\n\
        \  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 4,\n      \"\
        count\": 4,\n      \"per_page\": 50,\n      \"current_page\": 1,\n      \"\
        total_pages\": 1,\n      \"links\": {}\n    }\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/]Listnests'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List nests'
      tags:
      - '[ /nests ] Nests'
  /application/nests/{nest_id}:
    get:
      deprecated: false
      description: "Retrieves the specified nests\n\n# Available include parameters\n\
        | Parameter | Description                     |\n|-----------|---------------------------------|\n\
        | eggs      | List of eggs in the location    |\n| servers   | List of servers\
        \ in the location |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"nest\",\n\
        \  \"attributes\": {\n    \"id\": 1,\n    \"uuid\": \"58bde975-ec57-4af2-b241-1426ac6d6d59\"\
        ,\n    \"author\": \"support@pterodactyl.io\",\n    \"name\": \"Minecraft\"\
        ,\n    \"description\": \"Minecraft - the classic game from Mojang. With support\
        \ for Vanilla MC, Spigot, and many others!\",\n    \"created_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n    \"updated_at\": \"2019-12-22T04:42:51+00:00\"\n  }\n}\n<!-- ENDRESPONSE\
        \ -->"
      operationId: _application_nests_{nest_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: nest_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{nest} ] Nest details'
      tags:
      - ' Nests'
  /application/nests/{nest_id}/eggs:
    get:
      deprecated: false
      description: "Retrieves a list of eggs\n\n## Available include parameters\n\
        | Parameter | Description                                  |\n|-----------|----------------------------------------------|\n\
        | nest      | Information about the nest that owns the egg |\n| servers  \
        \ | List of servers using the egg                |\n| config    | Config options\
        \ of the egg                    |\n| script    | Egg install script      \
        \                     |\n| variables | List of egg variables             \
        \           |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"list\",\n  \"data\"\
        : [\n    {\n      \"object\": \"egg\",\n      \"attributes\": {\n        \"\
        id\": 1,\n        \"uuid\": \"695648dd-01a3-4ced-b075-d4ec4fb9fbf4\",\n  \
        \      \"name\": \"Bungeecord\",\n        \"nest\": 1,\n        \"author\"\
        : \"support@pterodactyl.io\",\n        \"description\": \"For a long time,\
        \ Minecraft server owners have had a dream that encompasses a free, easy,\
        \ and reliable way to connect multiple Minecraft servers together. BungeeCord\
        \ is the answer to said dream. Whether you are a small server wishing to string\
        \ multiple game-modes together, or the owner of the ShotBow Network, BungeeCord\
        \ is the ideal solution for you. With the help of BungeeCord, you will be\
        \ able to unlock your community's full potential.\",\n        \"docker_image\"\
        : \"quay.io\\/pterodactyl\\/core:java\",\n        \"config\": {\n        \
        \  \"files\": {\n            \"config.yml\": {\n              \"parser\":\
        \ \"yaml\",\n              \"find\": {\n                \"listeners[0].query_enabled\"\
        : true,\n                \"listeners[0].query_port\": \"{{server.build.default.port}}\"\
        ,\n                \"listeners[0].host\": \"0.0.0.0:{{server.build.default.port}}\"\
        ,\n                \"servers.*.address\": {\n                  \"127.0.0.1\"\
        : \"{{config.docker.interface}}\",\n                  \"localhost\": \"{{config.docker.interface}}\"\
        \n                }\n              }\n            }\n          },\n      \
        \    \"startup\": {\n            \"done\": \"Listening on \",\n          \
        \  \"userInteraction\": [\n              \"Listening on \\/0.0.0.0:25577\"\
        \n            ]\n          },\n          \"stop\": \"end\",\n          \"\
        logs\": {\n            \"custom\": false,\n            \"location\": \"proxy.log.0\"\
        \n          },\n          \"extends\": null\n        },\n        \"startup\"\
        : \"java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}\",\n    \
        \    \"script\": {\n          \"privileged\": true,\n          \"install\"\
        : \"#!\\/bin\\/ash\\n# Bungeecord Installation Script\\n#\\n# Server Files:\
        \ \\/mnt\\/server\\napk update\\napk add curl\\n\\ncd \\/mnt\\/server\\n\\\
        nif [ -z \\\"${BUNGEE_VERSION}\\\" ] || [ \\\"${BUNGEE_VERSION}\\\" == \\\"\
        latest\\\" ]; then\\n    BUNGEE_VERSION=\\\"lastStableBuild\\\"\\nfi\\n\\\
        ncurl -o ${SERVER_JARFILE} https:\\/\\/ci.md-5.net\\/job\\/BungeeCord\\/${BUNGEE_VERSION}\\\
        /artifact\\/bootstrap\\/target\\/BungeeCord.jar\",\n          \"entry\": \"\
        ash\",\n          \"container\": \"alpine:3.9\",\n          \"extends\": null\n\
        \        },\n        \"created_at\": \"2019-12-22T04:42:51+00:00\",\n    \
        \    \"updated_at\": \"2019-12-22T04:42:51+00:00\",\n        \"relationships\"\
        : {\n          \"nest\": {\n            \"object\": \"nest\",\n          \
        \  \"attributes\": {\n              \"id\": 1,\n              \"uuid\": \"\
        58bde975-ec57-4af2-b241-1426ac6d6d59\",\n              \"author\": \"support@pterodactyl.io\"\
        ,\n              \"name\": \"Minecraft\",\n              \"description\":\
        \ \"Minecraft - the classic game from Mojang. With support for Vanilla MC,\
        \ Spigot, and many others!\",\n              \"created_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n              \"updated_at\": \"2019-12-22T04:42:51+00:00\"\n         \
        \   }\n          },\n          \"servers\": {\n            \"object\": \"\
        list\",\n            \"data\": []\n          }\n        }\n      }\n    },\n\
        \    {\n      \"object\": \"egg\",\n      \"attributes\": {\n        \"id\"\
        : 2,\n        \"uuid\": \"7f8736d8-fd99-465f-8c3e-cb4d42c18541\",\n      \
        \  \"name\": \"Forge Minecraft\",\n        \"nest\": 1,\n        \"author\"\
        : \"support@pterodactyl.io\",\n        \"description\": \"Minecraft Forge\
        \ Server. Minecraft Forge is a modding API (Application Programming Interface),\
        \ which makes it easier to create mods, and also make sure mods are compatible\
        \ with each other.\",\n        \"docker_image\": \"quay.io\\/pterodactyl\\\
        /core:java\",\n        \"config\": {\n          \"files\": {\n           \
        \ \"server.properties\": {\n              \"parser\": \"properties\",\n  \
        \            \"find\": {\n                \"server-ip\": \"0.0.0.0\",\n  \
        \              \"enable-query\": \"true\",\n                \"server-port\"\
        : \"{{server.build.default.port}}\",\n                \"query.port\": \"{{server.build.default.port}}\"\
        \n              }\n            }\n          },\n          \"startup\": {\n\
        \            \"done\": \")! For help, type \",\n            \"userInteraction\"\
        : [\n              \"Go to eula.txt for more info.\"\n            ]\n    \
        \      },\n          \"stop\": \"stop\",\n          \"logs\": {\n        \
        \    \"custom\": false,\n            \"location\": \"logs\\/latest.log\"\n\
        \          },\n          \"extends\": null\n        },\n        \"startup\"\
        : \"java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}\",\n    \
        \    \"script\": {\n          \"privileged\": true,\n          \"install\"\
        : \"#!\\/bin\\/bash\\r\\n# Forge Installation Script\\r\\n#\\r\\n# Server\
        \ Files: \\/mnt\\/server\\r\\napt update\\r\\napt install -y curl\\r\\n\\\
        r\\n#Fetching version\\r\\nif [ -z \\\"$MC_VERSION\\\" ] || [ \\\"$MC_VERSION\\\
        \" == \\\"latest\\\" ]; then\\r\\n  echo \\\"Fetching latest\\\"\\r\\n  MC_VERSION=$(curl\
        \ -sl https:\\/\\/files.minecraftforge.net\\/maven\\/net\\/minecraftforge\\\
        /forge\\/index.html | grep -A 2 \\\"Latest\\\" | awk NF=NF RS= OFS=\\\" \\\
        \" | grep -o -e '[1].[0-9]*.[0-9]* - [0-9]*.[0-9]*.[0-9]*.[0-9]*' | sed 's\\\
        / \\/\\/g')\\r\\nelif [[ ! \\\"$MC_VERSION\\\" =~ - ]]; then\\r\\n  echo \\\
        \"Fetching latest from version $MC_VERSION\\\"\\r\\n  MC_VERSION=$(curl -sl\
        \ https:\\/\\/files.minecraftforge.net\\/maven\\/net\\/minecraftforge\\/forge\\\
        /index_$MC_VERSION.html | grep -A 2 \\\"Latest\\\" | awk NF=NF RS= OFS=\\\"\
        \ \\\" | grep -o -e '[1].[0-9]*.[0-9]* - [0-9]*.[0-9]*.[0-9]*.[0-9]*' | sed\
        \ 's\\/ \\/\\/g')\\r\\nfi\\r\\n\\r\\n#Checking if forge version valid\\r\\\
        nif [[ ! \\\"$MC_VERSION\\\" =~ [1].[0-9]*.[0-9]*-[0-9]*.[0-9]*.[0-9]*.[0-9]*\
        \ ]]; then\\r\\n    echo \\\"!!! Invalid forge version \\\\\\\"$MC_VERSION\\\
        \\\\\" !!!\\\"\\r\\n    exit\\r\\nfi\\r\\n\\r\\n#Go into main direction\\\
        r\\ncd \\/mnt\\/server\\r\\n\\r\\n#Adding .jar when not eding by SERVER_JARFILE\\\
        r\\nif [[ ! $SERVER_JARFILE = *\\\\.jar ]]; then\\r\\n  SERVER_JARFILE=\\\"\
        $SERVER_JARFILE.jar\\\"\\r\\nfi\\r\\n\\r\\n#Downloading jars\\r\\necho -e\
        \ \\\"Downloading forge version \\\\\\\"$MC_VERSION\\\\\\\"\\\"\\r\\ncurl\
        \ -o installer.jar -sS https:\\/\\/files.minecraftforge.net\\/maven\\/net\\\
        /minecraftforge\\/forge\\/$MC_VERSION\\/forge-$MC_VERSION-installer.jar\\\
        r\\ncurl -o $SERVER_JARFILE -sS https:\\/\\/files.minecraftforge.net\\/maven\\\
        /net\\/minecraftforge\\/forge\\/$MC_VERSION\\/forge-$MC_VERSION-universal.jar\\\
        r\\n\\r\\n#Checking if downloaded jars exist\\r\\nif [ ! -f .\\/installer.jar\
        \ ] || [ ! -f .\\/$SERVER_JARFILE ]; then\\r\\n    echo \\\"!!! Error by downloading\
        \ forge version \\\\\\\"$MC_VERSION\\\\\\\" !!!\\\"\\r\\n    exit\\r\\nfi\\\
        r\\n\\r\\n#Installing server\\r\\necho -e \\\"Installing forge server.\\\\\
        n\\\"\\r\\njava -jar installer.jar --installServer\\r\\n\\r\\n#Deleting installer.jar\\\
        r\\necho -e \\\"Deleting installer.jar file.\\\\n\\\"\\r\\nrm -rf installer.jar\"\
        ,\n          \"entry\": \"bash\",\n          \"container\": \"openjdk:8\"\
        ,\n          \"extends\": null\n        },\n        \"created_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n        \"updated_at\": \"2019-12-22T04:42:51+00:00\",\n        \"relationships\"\
        : {\n          \"nest\": {\n            \"object\": \"nest\",\n          \
        \  \"attributes\": {\n              \"id\": 1,\n              \"uuid\": \"\
        58bde975-ec57-4af2-b241-1426ac6d6d59\",\n              \"author\": \"support@pterodactyl.io\"\
        ,\n              \"name\": \"Minecraft\",\n              \"description\":\
        \ \"Minecraft - the classic game from Mojang. With support for Vanilla MC,\
        \ Spigot, and many others!\",\n              \"created_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n              \"updated_at\": \"2019-12-22T04:42:51+00:00\"\n         \
        \   }\n          },\n          \"servers\": {\n            \"object\": \"\
        list\",\n            \"data\": []\n          }\n        }\n      }\n    },\n\
        \    {\n      \"object\": \"egg\",\n      \"attributes\": {\n        \"id\"\
        : 3,\n        \"uuid\": \"2ad75dfd-892d-4441-a452-6d7be7cc895a\",\n      \
        \  \"name\": \"Paper\",\n        \"nest\": 1,\n        \"author\": \"parker@pterodactyl.io\"\
        ,\n        \"description\": \"High performance Spigot fork that aims to fix\
        \ gameplay and mechanics inconsistencies.\",\n        \"docker_image\": \"\
        quay.io\\/pterodactyl\\/core:java\",\n        \"config\": {\n          \"\
        files\": {\n            \"server.properties\": {\n              \"parser\"\
        : \"properties\",\n              \"find\": {\n                \"server-ip\"\
        : \"0.0.0.0\",\n                \"server-port\": \"{{server.build.default.port}}\"\
        \n              }\n            }\n          },\n          \"startup\": {\n\
        \            \"done\": \")! For help, type \",\n            \"userInteraction\"\
        : [\n              \"Go to eula.txt for more info.\"\n            ]\n    \
        \      },\n          \"stop\": \"stop\",\n          \"logs\": [],\n      \
        \    \"extends\": null\n        },\n        \"startup\": \"java -Xms128M -Xmx{{SERVER_MEMORY}}M\
        \ -Dterminal.jline=false -Dterminal.ansi=true -jar {{SERVER_JARFILE}}\",\n\
        \        \"script\": {\n          \"privileged\": true,\n          \"install\"\
        : \"#!\\/bin\\/ash\\r\\n# Paper Installation Script\\r\\n#\\r\\n# Server Files:\
        \ \\/mnt\\/server\\r\\napk add --no-cache --update curl jq\\r\\n\\r\\nif [\
        \ -n \\\"${DL_PATH}\\\" ]; then\\r\\n    echo -e \\\"using supplied download\
        \ url\\\"\\r\\n    DOWNLOAD_URL=`eval echo $(echo ${DL_PATH} | sed -e 's\\\
        /{{\\/${\\/g' -e 's\\/}}\\/}\\/g')`\\r\\nelse\\r\\n    VER_EXISTS=`curl -s\
        \ https:\\/\\/papermc.io\\/api\\/v1\\/paper | jq -r --arg VERSION $MINECRAFT_VERSION\
        \ '.versions[] | IN($VERSION)' | grep true`\\r\\n    LATEST_PAPER_VERSION=`curl\
        \ -s https:\\/\\/papermc.io\\/api\\/v1\\/paper | jq -r '.versions' | jq -r\
        \ '.[0]'`\\r\\n    \\r\\n    if [ \\\"${VER_EXISTS}\\\" == \\\"true\\\" ];\
        \ then\\r\\n        echo -e \\\"Version is valid. Using version ${MINECRAFT_VERSION}\\\
        \"\\r\\n    else\\r\\n        echo -e \\\"Using the latest paper version\\\
        \"\\r\\n        MINECRAFT_VERSION=${LATEST_PAPER_VERSION}\\r\\n    fi\\r\\\
        n    \\r\\n    BUILD_EXISTS=`curl -s https:\\/\\/papermc.io\\/api\\/v1\\/paper\\\
        /${MINECRAFT_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds.all[] |\
        \ IN($BUILD)' | grep true`\\r\\n    LATEST_PAPER_BUILD=`curl -s https:\\/\\\
        /papermc.io\\/api\\/v1\\/paper\\/${MINECRAFT_VERSION} | jq -r '.builds.latest'`\\\
        r\\n    \\r\\n    if [ \\\"${BUILD_EXISTS}\\\" == \\\"true\\\" ] || [ ${BUILD_NUMBER}\
        \ == \\\"latest\\\" ]; then\\r\\n        echo -e \\\"Build is valid. Using\
        \ version ${BUILD_NUMBER}\\\"\\r\\n    else\\r\\n        echo -e \\\"Using\
        \ the latest paper build\\\"\\r\\n        BUILD_NUMBER=${LATEST_PAPER_BUILD}\\\
        r\\n    fi\\r\\n    \\r\\n    echo \\\"Version being downloaded\\\"\\r\\n\
        \    echo -e \\\"MC Version: ${MINECRAFT_VERSION}\\\"\\r\\n    echo -e \\\"\
        Build: ${BUILD_NUMBER}\\\"\\r\\n    DOWNLOAD_URL=https:\\/\\/papermc.io\\\
        /api\\/v1\\/paper\\/${MINECRAFT_VERSION}\\/${BUILD_NUMBER}\\/download \\r\\\
        nfi\\r\\n\\r\\ncd \\/mnt\\/server\\r\\n\\r\\necho -e \\\"running curl -o ${SERVER_JARFILE}\
        \ ${DOWNLOAD_URL}\\\"\\r\\n\\r\\nif [ -f ${SERVER_JARFILE} ]; then\\r\\n \
        \   mv ${SERVER_JARFILE} ${SERVER_JARFILE}.old\\r\\nfi\\r\\n\\r\\ncurl -o\
        \ ${SERVER_JARFILE} ${DOWNLOAD_URL}\\r\\n\\r\\nif [ ! -f server.properties\
        \ ]; then\\r\\n    echo -e \\\"Downloading MC server.properties\\\"\\r\\n\
        \    curl -o server.properties https:\\/\\/raw.githubusercontent.com\\/parkervcp\\\
        /eggs\\/master\\/minecraft_java\\/server.properties\\r\\nfi\",\n         \
        \ \"entry\": \"ash\",\n          \"container\": \"alpine:3.9\",\n        \
        \  \"extends\": null\n        },\n        \"created_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n        \"updated_at\": \"2019-12-22T04:42:51+00:00\",\n        \"relationships\"\
        : {\n          \"nest\": {\n            \"object\": \"nest\",\n          \
        \  \"attributes\": {\n              \"id\": 1,\n              \"uuid\": \"\
        58bde975-ec57-4af2-b241-1426ac6d6d59\",\n              \"author\": \"support@pterodactyl.io\"\
        ,\n              \"name\": \"Minecraft\",\n              \"description\":\
        \ \"Minecraft - the classic game from Mojang. With support for Vanilla MC,\
        \ Spigot, and many others!\",\n              \"created_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n              \"updated_at\": \"2019-12-22T04:42:51+00:00\"\n         \
        \   }\n          },\n          \"servers\": {\n            \"object\": \"\
        list\",\n            \"data\": []\n          }\n        }\n      }\n    },\n\
        \    {\n      \"object\": \"egg\",\n      \"attributes\": {\n        \"id\"\
        : 4,\n        \"uuid\": \"00274063-5d21-439f-80b9-c4cc0dba8188\",\n      \
        \  \"name\": \"Sponge (SpongeVanilla)\",\n        \"nest\": 1,\n        \"\
        author\": \"support@pterodactyl.io\",\n        \"description\": \"SpongeVanilla\
        \ is the SpongeAPI implementation for Vanilla Minecraft.\",\n        \"docker_image\"\
        : \"quay.io\\/pterodactyl\\/core:java-glibc\",\n        \"config\": {\n  \
        \        \"files\": {\n            \"server.properties\": {\n            \
        \  \"parser\": \"properties\",\n              \"find\": {\n              \
        \  \"server-ip\": \"0.0.0.0\",\n                \"enable-query\": \"true\"\
        ,\n                \"server-port\": \"{{server.build.default.port}}\",\n \
        \               \"query.port\": \"{{server.build.default.port}}\"\n      \
        \        }\n            }\n          },\n          \"startup\": {\n      \
        \      \"done\": \")! For help, type \",\n            \"userInteraction\"\
        : [\n              \"Go to eula.txt for more info.\"\n            ]\n    \
        \      },\n          \"stop\": \"stop\",\n          \"logs\": {\n        \
        \    \"custom\": false,\n            \"location\": \"logs\\/latest.log\"\n\
        \          },\n          \"extends\": null\n        },\n        \"startup\"\
        : \"java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}\",\n    \
        \    \"script\": {\n          \"privileged\": true,\n          \"install\"\
        : \"#!\\/bin\\/ash\\n# Sponge Installation Script\\n#\\n# Server Files: \\\
        /mnt\\/server\\n\\napk update\\napk add curl\\n\\ncd \\/mnt\\/server\\n\\\
        ncurl -sSL \\\"https:\\/\\/repo.spongepowered.org\\/maven\\/org\\/spongepowered\\\
        /spongevanilla\\/${SPONGE_VERSION}\\/spongevanilla-${SPONGE_VERSION}.jar\\\
        \" -o ${SERVER_JARFILE}\",\n          \"entry\": \"ash\",\n          \"container\"\
        : \"alpine:3.9\",\n          \"extends\": null\n        },\n        \"created_at\"\
        : \"2019-12-22T04:42:51+00:00\",\n        \"updated_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n        \"relationships\": {\n          \"nest\": {\n            \"object\"\
        : \"nest\",\n            \"attributes\": {\n              \"id\": 1,\n   \
        \           \"uuid\": \"58bde975-ec57-4af2-b241-1426ac6d6d59\",\n        \
        \      \"author\": \"support@pterodactyl.io\",\n              \"name\": \"\
        Minecraft\",\n              \"description\": \"Minecraft - the classic game\
        \ from Mojang. With support for Vanilla MC, Spigot, and many others!\",\n\
        \              \"created_at\": \"2019-12-22T04:42:51+00:00\",\n          \
        \    \"updated_at\": \"2019-12-22T04:42:51+00:00\"\n            }\n      \
        \    },\n          \"servers\": {\n            \"object\": \"list\",\n   \
        \         \"data\": []\n          }\n        }\n      }\n    },\n    {\n \
        \     \"object\": \"egg\",\n      \"attributes\": {\n        \"id\": 5,\n\
        \        \"uuid\": \"cd4cc5cf-de80-4a50-b458-dbd7d3193175\",\n        \"name\"\
        : \"Vanilla Minecraft\",\n        \"nest\": 1,\n        \"author\": \"support@pterodactyl.io\"\
        ,\n        \"description\": \"Minecraft is a game about placing blocks and\
        \ going on adventures. Explore randomly generated worlds and build amazing\
        \ things from the simplest of homes to the grandest of castles. Play in Creative\
        \ Mode with unlimited resources or mine deep in Survival Mode, crafting weapons\
        \ and armor to fend off dangerous mobs. Do all this alone or with friends.\"\
        ,\n        \"docker_image\": \"quay.io\\/pterodactyl\\/core:java\",\n    \
        \    \"config\": {\n          \"files\": {\n            \"server.properties\"\
        : {\n              \"parser\": \"properties\",\n              \"find\": {\n\
        \                \"server-ip\": \"0.0.0.0\",\n                \"enable-query\"\
        : \"true\",\n                \"server-port\": \"{{server.build.default.port}}\"\
        ,\n                \"query.port\": \"{{server.build.default.port}}\"\n   \
        \           }\n            }\n          },\n          \"startup\": {\n   \
        \         \"done\": \")! For help, type \",\n            \"userInteraction\"\
        : [\n              \"Go to eula.txt for more info.\"\n            ]\n    \
        \      },\n          \"stop\": \"stop\",\n          \"logs\": {\n        \
        \    \"custom\": false,\n            \"location\": \"logs\\/latest.log\"\n\
        \          },\n          \"extends\": null\n        },\n        \"startup\"\
        : \"java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}\",\n    \
        \    \"script\": {\n          \"privileged\": true,\n          \"install\"\
        : \"#!\\/bin\\/ash\\r\\n# Vanilla MC Installation Script\\r\\n#\\r\\n# Server\
        \ Files: \\/mnt\\/server\\r\\napk update\\r\\napk add curl jq\\r\\n\\r\\ncd\
        \ \\/mnt\\/server\\r\\n\\r\\nLATEST_VERSION=`curl https:\\/\\/launchermeta.mojang.com\\\
        /mc\\/game\\/version_manifest.json | jq -r '.latest.release'`\\r\\n\\r\\nif\
        \ [ -z \\\"$VANILLA_VERSION\\\" ] || [ \\\"$VANILLA_VERSION\\\" == \\\"latest\\\
        \" ]; then\\r\\n  MANIFEST_URL=$(curl https:\\/\\/launchermeta.mojang.com\\\
        /mc\\/game\\/version_manifest.json | jq .versions | jq -r '.[] | select(.id\
        \ == \\\"'$LATEST_VERSION'\\\") | .url')\\r\\nelse\\r\\n  MANIFEST_URL=$(curl\
        \ https:\\/\\/launchermeta.mojang.com\\/mc\\/game\\/version_manifest.json\
        \ | jq .versions | jq -r '.[] | select(.id == \\\"'$VANILLA_VERSION'\\\")\
        \ | .url')\\r\\nfi\\r\\n\\r\\nDOWNLOAD_URL=`curl $MANIFEST_URL | jq .downloads.server\
        \ | jq -r '. | .url'`\\r\\n\\r\\ncurl -o ${SERVER_JARFILE} $DOWNLOAD_URL\"\
        ,\n          \"entry\": \"ash\",\n          \"container\": \"alpine:3.9\"\
        ,\n          \"extends\": null\n        },\n        \"created_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n        \"updated_at\": \"2019-12-22T04:42:51+00:00\",\n        \"relationships\"\
        : {\n          \"nest\": {\n            \"object\": \"nest\",\n          \
        \  \"attributes\": {\n              \"id\": 1,\n              \"uuid\": \"\
        58bde975-ec57-4af2-b241-1426ac6d6d59\",\n              \"author\": \"support@pterodactyl.io\"\
        ,\n              \"name\": \"Minecraft\",\n              \"description\":\
        \ \"Minecraft - the classic game from Mojang. With support for Vanilla MC,\
        \ Spigot, and many others!\",\n              \"created_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n              \"updated_at\": \"2019-12-22T04:42:51+00:00\"\n         \
        \   }\n          },\n          \"servers\": {\n            \"object\": \"\
        list\",\n            \"data\": [\n              {\n                \"object\"\
        : \"server\",\n                \"attributes\": {\n                  \"id\"\
        : 5,\n                  \"external_id\": \"RemoteId1\",\n                \
        \  \"uuid\": \"{server_id}-259b-452e-8b4e-cecc464142ca\",\n              \
        \    \"identifier\": \"{server_id}\",\n                  \"name\": \"Wuhu\
        \ Island\",\n                  \"description\": \"Matt from Wii Sports\",\n\
        \                  \"suspended\": false,\n                  \"limits\": {\n\
        \                    \"memory\": 512,\n                    \"swap\": 0,\n\
        \                    \"disk\": 200,\n                    \"io\": 500,\n  \
        \                  \"cpu\": 0,\n                    \"threads\": null\n  \
        \                },\n                  \"feature_limits\": {\n           \
        \         \"databases\": 5,\n                    \"allocations\": 5,\n   \
        \                 \"backups\": 2\n                  },\n                 \
        \ \"user\": 1,\n                  \"node\": 1,\n                  \"allocation\"\
        : 1,\n                  \"nest\": 1,\n                  \"egg\": 5,\n    \
        \              \"pack\": null,\n                  \"container\": {\n     \
        \               \"startup_command\": \"java -Xms128M -Xmx{{SERVER_MEMORY}}M\
        \ -jar {{SERVER_JARFILE}}\",\n                    \"image\": \"quay.io\\/pterodactyl\\\
        /core:java\",\n                    \"installed\": true,\n                \
        \    \"environment\": {\n                      \"SERVER_JARFILE\": \"server.jar\"\
        ,\n                      \"VANILLA_VERSION\": \"latest\",\n              \
        \        \"STARTUP\": \"java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}\"\
        ,\n                      \"P_SERVER_LOCATION\": \"Test\",\n              \
        \        \"P_SERVER_UUID\": \"{server_id}-259b-452e-8b4e-cecc464142ca\"\n\
        \                    }\n                  },\n                  \"updated_at\"\
        : \"2020-06-13T04:20:53+00:00\",\n                  \"created_at\": \"2019-12-23T06:46:27+00:00\"\
        \n                }\n              }\n            ]\n          }\n       \
        \ }\n      }\n    }\n  ]\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_nests_{nest_id}_eggs_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - in: query
        name: include
        schema:
          example: nest,servers
          type: string
      - description: ''
        in: path
        name: nest_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List eggs'
      tags:
      - ' Eggs Management'
  /application/nests/{nest_id}/eggs/{egg_id}:
    get:
      deprecated: false
      description: "Retrieves the specified egg\n\n## Available include parameters\n\
        | Parameter | Description                                  |\n|-----------|----------------------------------------------|\n\
        | nest      | Information about the nest that owns the egg |\n| servers  \
        \ | List of servers using the egg                |\n| config    | Config options\
        \ of the egg                    |\n| script    | Egg install script      \
        \                     |\n| variables | List of egg variables             \
        \           |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"egg\",\n  \"attributes\"\
        : {\n    \"id\": 1,\n    \"uuid\": \"695648dd-01a3-4ced-b075-d4ec4fb9fbf4\"\
        ,\n    \"name\": \"Bungeecord\",\n    \"nest\": 1,\n    \"author\": \"support@pterodactyl.io\"\
        ,\n    \"description\": \"For a long time, Minecraft server owners have had\
        \ a dream that encompasses a free, easy, and reliable way to connect multiple\
        \ Minecraft servers together. BungeeCord is the answer to said dream. Whether\
        \ you are a small server wishing to string multiple game-modes together, or\
        \ the owner of the ShotBow Network, BungeeCord is the ideal solution for you.\
        \ With the help of BungeeCord, you will be able to unlock your community's\
        \ full potential.\",\n    \"docker_image\": \"quay.io\\/pterodactyl\\/core:java\"\
        ,\n    \"config\": {\n      \"files\": {\n        \"config.yml\": {\n    \
        \      \"parser\": \"yaml\",\n          \"find\": {\n            \"listeners[0].query_enabled\"\
        : true,\n            \"listeners[0].query_port\": \"{{server.build.default.port}}\"\
        ,\n            \"listeners[0].host\": \"0.0.0.0:{{server.build.default.port}}\"\
        ,\n            \"servers.*.address\": {\n              \"127.0.0.1\": \"{{config.docker.interface}}\"\
        ,\n              \"localhost\": \"{{config.docker.interface}}\"\n        \
        \    }\n          }\n        }\n      },\n      \"startup\": {\n        \"\
        done\": \"Listening on \",\n        \"userInteraction\": [\n          \"Listening\
        \ on \\/0.0.0.0:25577\"\n        ]\n      },\n      \"stop\": \"end\",\n \
        \     \"logs\": {\n        \"custom\": false,\n        \"location\": \"proxy.log.0\"\
        \n      },\n      \"extends\": null\n    },\n    \"startup\": \"java -Xms128M\
        \ -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}\",\n    \"script\": {\n \
        \     \"privileged\": true,\n      \"install\": \"#!\\/bin\\/ash\\n# Bungeecord\
        \ Installation Script\\n#\\n# Server Files: \\/mnt\\/server\\napk update\\\
        napk add curl\\n\\ncd \\/mnt\\/server\\n\\nif [ -z \\\"${BUNGEE_VERSION}\\\
        \" ] || [ \\\"${BUNGEE_VERSION}\\\" == \\\"latest\\\" ]; then\\n    BUNGEE_VERSION=\\\
        \"lastStableBuild\\\"\\nfi\\n\\ncurl -o ${SERVER_JARFILE} https:\\/\\/ci.md-5.net\\\
        /job\\/BungeeCord\\/${BUNGEE_VERSION}\\/artifact\\/bootstrap\\/target\\/BungeeCord.jar\"\
        ,\n      \"entry\": \"ash\",\n      \"container\": \"alpine:3.9\",\n     \
        \ \"extends\": null\n    },\n    \"created_at\": \"2019-12-22T04:42:51+00:00\"\
        ,\n    \"updated_at\": \"2019-12-22T04:42:51+00:00\"\n  }\n}\n<!-- ENDRESPONSE\
        \ -->"
      operationId: _application_nests_{nest_id}_eggs_{egg_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: nest_id
        required: true
        schema:
          type: int
      - description: ''
        in: path
        name: egg_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{egg} ] Egg details'
      tags:
      - ' Eggs Management'
  /application/nodes:
    get:
      deprecated: false
      description: "Retrieves a list of nodes\n\n## Available include parameters\n\
        | Parameter   | Description                                            |\n\
        |-------------|--------------------------------------------------------|\n\
        | allocations | List of allocations added to the node                  |\n\
        | location    | Information about the location the node is assigned to |\n\
        | servers     | List of servers on the node                            |\n\
        \n<!-- RESPONSE 200 -->\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n\
        \      \"object\": \"node\",\n      \"attributes\": {\n        \"id\": 1,\n\
        \        \"uuid\": \"1046d1d1-b8ef-4771-82b1-2b5946d33397\",\n        \"public\"\
        : true,\n        \"name\": \"Test\",\n        \"description\": \"Test\",\n\
        \        \"location_id\": 1,\n        \"fqdn\": \"pterodactyl.file.properties\"\
        ,\n        \"scheme\": \"https\",\n        \"behind_proxy\": false,\n    \
        \    \"maintenance_mode\": false,\n        \"memory\": 2048,\n        \"memory_overallocate\"\
        : 0,\n        \"disk\": 5000,\n        \"disk_overallocate\": 0,\n       \
        \ \"upload_size\": 100,\n        \"daemon_listen\": 8080,\n        \"daemon_sftp\"\
        : 2022,\n        \"daemon_base\": \"\\/srv\\/daemon-data\",\n        \"created_at\"\
        : \"2019-12-22T04:44:51+00:00\",\n        \"updated_at\": \"2019-12-22T04:44:51+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"node\",\n      \"attributes\"\
        : {\n        \"id\": 3,\n        \"uuid\": \"71b15cf6-909a-4b60-aa04-abb4c8f98f61\"\
        ,\n        \"public\": true,\n        \"name\": \"2\",\n        \"description\"\
        : \"e\",\n        \"location_id\": 1,\n        \"fqdn\": \"pterodactyl.file.properties\"\
        ,\n        \"scheme\": \"https\",\n        \"behind_proxy\": false,\n    \
        \    \"maintenance_mode\": false,\n        \"memory\": 100,\n        \"memory_overallocate\"\
        : 0,\n        \"disk\": 100,\n        \"disk_overallocate\": 0,\n        \"\
        upload_size\": 100,\n        \"daemon_listen\": 8080,\n        \"daemon_sftp\"\
        : 2022,\n        \"daemon_base\": \"\\/var\\/lib\\/pterodactyl\\/volumes\"\
        ,\n        \"created_at\": \"2020-06-23T04:50:37+00:00\",\n        \"updated_at\"\
        : \"2020-06-23T04:50:37+00:00\"\n      }\n    }\n  ],\n  \"meta\": {\n   \
        \ \"pagination\": {\n      \"total\": 2,\n      \"count\": 2,\n      \"per_page\"\
        : 50,\n      \"current_page\": 1,\n      \"total_pages\": 1,\n      \"links\"\
        : {}\n    }\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/]Listnodes'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List nodes'
      tags:
      - '[ /nodes ] Nodes'
    post:
      deprecated: false
      description: "Creates a new node\n\n<!-- RESPONSE 201 -->\n{\n  \"object\":\
        \ \"node\",\n  \"attributes\": {\n    \"id\": 4,\n    \"uuid\": \"4158cfe9-2aa8-4812-bf6e-d88beeb08e98\"\
        ,\n    \"public\": true,\n    \"name\": \"New Node\",\n    \"description\"\
        : null,\n    \"location_id\": 1,\n    \"fqdn\": \"node2.example.com\",\n \
        \   \"scheme\": \"https\",\n    \"behind_proxy\": false,\n    \"maintenance_mode\"\
        : false,\n    \"memory\": 10240,\n    \"memory_overallocate\": 0,\n    \"\
        disk\": 50000,\n    \"disk_overallocate\": 0,\n    \"upload_size\": 100,\n\
        \    \"daemon_listen\": 8080,\n    \"daemon_sftp\": 2022,\n    \"daemon_base\"\
        : \"\\/var\\/lib\\/pterodactyl\\/volumes\",\n    \"created_at\": \"2020-10-29T01:17:38+00:00\"\
        ,\n    \"updated_at\": \"2020-10-29T01:17:38+00:00\",\n    \"allocated_resources\"\
        : {\n      \"memory\": 0,\n      \"disk\": 0\n    }\n  },\n  \"meta\": {\n\
        \    \"resource\": \"https:\\/\\/pterodactyl.file.properties\\/api\\/application\\\
        /nodes\\/4\"\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/]Createnode'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              daemon_listen: 8080
              daemon_sftp: 2022
              disk: 50000
              disk_overallocate: 0
              fqdn: node2.example.com
              location_id: 1
              memory: 10240
              memory_overallocate: 0
              name: New Node
              scheme: https
              upload_size: 100
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatenodeRequest'
              - example:
                  daemon_listen: 8080
                  daemon_sftp: 2022
                  disk: 50000
                  disk_overallocate: 0
                  fqdn: node2.example.com
                  location_id: 1
                  memory: 10240
                  memory_overallocate: 0
                  name: New Node
                  scheme: https
                  upload_size: 100
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Create node'
      tags:
      - '[ /nodes ] Nodes'
  /application/nodes/{node_id}:
    delete:
      deprecated: false
      description: 'Deletes the specified node


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _application_nodes_{node_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id002
        description: ''
        in: path
        name: node_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{node} ] Delete node'
      tags:
      - ' Nodes'
    get:
      deprecated: false
      description: "Retrieves the specified node\n\n## Available include parameters\n\
        | Parameter   | Description                                            |\n\
        |-------------|--------------------------------------------------------|\n\
        | allocations | List of allocations added to the node                  |\n\
        | location    | Information about the location the node is assigned to |\n\
        | servers     | List of servers on the node                            |\n\
        \n<!-- RESPONSE 200 -->\n{\n  \"object\": \"node\",\n  \"attributes\": {\n\
        \    \"id\": 1,\n    \"uuid\": \"1046d1d1-b8ef-4771-82b1-2b5946d33397\",\n\
        \    \"public\": true,\n    \"name\": \"Test\",\n    \"description\": \"Test\"\
        ,\n    \"location_id\": 1,\n    \"fqdn\": \"pterodactyl.file.properties\"\
        ,\n    \"scheme\": \"https\",\n    \"behind_proxy\": false,\n    \"maintenance_mode\"\
        : false,\n    \"memory\": 2048,\n    \"memory_overallocate\": 0,\n    \"disk\"\
        : 5000,\n    \"disk_overallocate\": 0,\n    \"upload_size\": 100,\n    \"\
        daemon_listen\": 8080,\n    \"daemon_sftp\": 2022,\n    \"daemon_base\": \"\
        \\/srv\\/daemon-data\",\n    \"created_at\": \"2019-12-22T04:44:51+00:00\"\
        ,\n    \"updated_at\": \"2019-12-22T04:44:51+00:00\"\n  }\n}\n<!-- ENDRESPONSE\
        \ -->"
      operationId: _application_nodes_{node_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id002
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{node} ] Node details'
      tags:
      - ' Nodes'
    patch:
      deprecated: false
      description: "Updates the node details\n\n<!-- RESPONSE 200 -->\n{\n  \"object\"\
        : \"node\",\n  \"attributes\": {\n    \"id\": 1,\n    \"uuid\": \"1046d1d1-b8ef-4771-82b1-2b5946d33397\"\
        ,\n    \"public\": true,\n    \"name\": \"Test Renamed\",\n    \"description\"\
        : \"Test\",\n    \"location_id\": 1,\n    \"fqdn\": \"pterodactyl.file.properties\"\
        ,\n    \"scheme\": \"https\",\n    \"behind_proxy\": false,\n    \"maintenance_mode\"\
        : false,\n    \"memory\": 2048,\n    \"memory_overallocate\": 0,\n    \"disk\"\
        : 5000,\n    \"disk_overallocate\": 0,\n    \"upload_size\": 100,\n    \"\
        daemon_listen\": 8080,\n    \"daemon_sftp\": 2022,\n    \"daemon_base\": \"\
        \\/var\\/lib\\/pterodactyl\\/volumes\",\n    \"created_at\": \"2019-12-22T04:44:51+00:00\"\
        ,\n    \"updated_at\": \"2020-10-29T01:20:23+00:00\",\n    \"mounts\": [],\n\
        \    \"allocated_resources\": {\n      \"memory\": 640,\n      \"disk\": 700\n\
        \    }\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_nodes_{node_id}_patch
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id002
      requestBody:
        content:
          application/json:
            example:
              behind_proxy: false
              daemon_listen: 8080
              daemon_sftp: 2022
              description: Test
              disk: 5000
              disk_overallocate: 0
              fqdn: pterodactyl.file.properties
              location_id: 1
              maintenance_mode: false
              memory: 2048
              memory_overallocate: 0
              name: Test Renamed
              scheme: https
              upload_size: 100
            schema:
              allOf:
              - $ref: '#/components/schemas/nodeUpdatenodeRequest'
              - example:
                  behind_proxy: false
                  daemon_listen: 8080
                  daemon_sftp: 2022
                  description: Test
                  disk: 5000
                  disk_overallocate: 0
                  fqdn: pterodactyl.file.properties
                  location_id: 1
                  maintenance_mode: false
                  memory: 2048
                  memory_overallocate: 0
                  name: Test Renamed
                  scheme: https
                  upload_size: 100
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{node} ] Update node'
      tags:
      - ' Nodes'
  /application/nodes/{node_id}/allocations:
    get:
      deprecated: false
      description: "Lists allocations added to the node\n\n## Available include parameters\n\
        | Parameter | Description                                            |\n|-----------|--------------------------------------------------------|\n\
        | node      | Information about the node the allocation belongs to   |\n|\
        \ server    | Information about the server the allocation belongs to |\n\n\
        <!-- RESPONSE 200 -->\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n\
        \      \"object\": \"allocation\",\n      \"attributes\": {\n        \"id\"\
        : 1,\n        \"ip\": \"45.86.168.218\",\n        \"alias\": null,\n     \
        \   \"port\": 25565,\n        \"notes\": null,\n        \"assigned\": true\n\
        \      }\n    },\n    {\n      \"object\": \"allocation\",\n      \"attributes\"\
        : {\n        \"id\": 2,\n        \"ip\": \"45.86.168.218\",\n        \"alias\"\
        : null,\n        \"port\": 25566,\n        \"notes\": \"Votifier\",\n    \
        \    \"assigned\": true\n      }\n    },\n    {\n      \"object\": \"allocation\"\
        ,\n      \"attributes\": {\n        \"id\": 3,\n        \"ip\": \"45.86.168.218\"\
        ,\n        \"alias\": null,\n        \"port\": 25567,\n        \"notes\":\
        \ null,\n        \"assigned\": false\n      }\n    },\n    {\n      \"object\"\
        : \"allocation\",\n      \"attributes\": {\n        \"id\": 4,\n        \"\
        ip\": \"45.86.168.218\",\n        \"alias\": null,\n        \"port\": 25568,\n\
        \        \"notes\": null,\n        \"assigned\": false\n      }\n    },\n\
        \    {\n      \"object\": \"allocation\",\n      \"attributes\": {\n     \
        \   \"id\": 5,\n        \"ip\": \"45.86.168.218\",\n        \"alias\": null,\n\
        \        \"port\": 25569,\n        \"notes\": null,\n        \"assigned\"\
        : false\n      }\n    },\n    {\n      \"object\": \"allocation\",\n     \
        \ \"attributes\": {\n        \"id\": 6,\n        \"ip\": \"45.86.168.218\"\
        ,\n        \"alias\": null,\n        \"port\": 25570,\n        \"notes\":\
        \ null,\n        \"assigned\": false\n      }\n    },\n    {\n      \"object\"\
        : \"allocation\",\n      \"attributes\": {\n        \"id\": 8,\n        \"\
        ip\": \"10.0.0.1\",\n        \"alias\": null,\n        \"port\": 25565,\n\
        \        \"notes\": null,\n        \"assigned\": false\n      }\n    },\n\
        \    {\n      \"object\": \"allocation\",\n      \"attributes\": {\n     \
        \   \"id\": 9,\n        \"ip\": \"45.86.168.218\",\n        \"alias\": null,\n\
        \        \"port\": 25571,\n        \"notes\": null,\n        \"assigned\"\
        : false\n      }\n    },\n    {\n      \"object\": \"allocation\",\n     \
        \ \"attributes\": {\n        \"id\": 10,\n        \"ip\": \"45.86.168.218\"\
        ,\n        \"alias\": null,\n        \"port\": 25572,\n        \"notes\":\
        \ null,\n        \"assigned\": false\n      }\n    },\n    {\n      \"object\"\
        : \"allocation\",\n      \"attributes\": {\n        \"id\": 11,\n        \"\
        ip\": \"45.86.168.218\",\n        \"alias\": null,\n        \"port\": 25573,\n\
        \        \"notes\": null,\n        \"assigned\": false\n      }\n    },\n\
        \    {\n      \"object\": \"allocation\",\n      \"attributes\": {\n     \
        \   \"id\": 12,\n        \"ip\": \"45.86.168.218\",\n        \"alias\": null,\n\
        \        \"port\": 25574,\n        \"notes\": null,\n        \"assigned\"\
        : false\n      }\n    },\n    {\n      \"object\": \"allocation\",\n     \
        \ \"attributes\": {\n        \"id\": 13,\n        \"ip\": \"45.86.168.218\"\
        ,\n        \"alias\": null,\n        \"port\": 25575,\n        \"notes\":\
        \ null,\n        \"assigned\": false\n      }\n    },\n    {\n      \"object\"\
        : \"allocation\",\n      \"attributes\": {\n        \"id\": 14,\n        \"\
        ip\": \"45.86.168.218\",\n        \"alias\": null,\n        \"port\": 25576,\n\
        \        \"notes\": null,\n        \"assigned\": false\n      }\n    },\n\
        \    {\n      \"object\": \"allocation\",\n      \"attributes\": {\n     \
        \   \"id\": 15,\n        \"ip\": \"45.86.168.218\",\n        \"alias\": null,\n\
        \        \"port\": 25577,\n        \"notes\": null,\n        \"assigned\"\
        : false\n      }\n    },\n    {\n      \"object\": \"allocation\",\n     \
        \ \"attributes\": {\n        \"id\": 16,\n        \"ip\": \"45.86.168.218\"\
        ,\n        \"alias\": null,\n        \"port\": 25578,\n        \"notes\":\
        \ null,\n        \"assigned\": false\n      }\n    },\n    {\n      \"object\"\
        : \"allocation\",\n      \"attributes\": {\n        \"id\": 17,\n        \"\
        ip\": \"45.86.168.218\",\n        \"alias\": null,\n        \"port\": 25579,\n\
        \        \"notes\": null,\n        \"assigned\": false\n      }\n    },\n\
        \    {\n      \"object\": \"allocation\",\n      \"attributes\": {\n     \
        \   \"id\": 18,\n        \"ip\": \"45.86.168.218\",\n        \"alias\": null,\n\
        \        \"port\": 25580,\n        \"notes\": null,\n        \"assigned\"\
        : false\n      }\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n    \
        \  \"total\": 17,\n      \"count\": 17,\n      \"per_page\": 50,\n      \"\
        current_page\": 1,\n      \"total_pages\": 1,\n      \"links\": {}\n    }\n\
        \  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_nodes_{node_id}_allocations_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id003
        description: ''
        in: path
        name: node_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List allocations'
      tags:
      - ' Allocations'
    post:
      deprecated: false
      description: 'Adds an allocation to the node


        ## Fields

        | Name  | Required? | Type   | Description                        | Rules
        |

        |-------|-----------|--------|------------------------------------|-------|

        | ip    | required  | string | IP address for the allocations     |       |

        | ports | required  | object | Object containing the ports to add |       |


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _application_nodes_{node_id}_allocations_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id003
      requestBody:
        content:
          application/json:
            example:
              ip: 10.0.0.1
              ports:
              - '25565'
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateallocationsRequest'
              - example:
                  ip: 10.0.0.1
                  ports:
                  - '25565'
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Create allocations'
      tags:
      - ' Allocations'
  /application/nodes/{node_id}/allocations/{allocation_id}:
    delete:
      deprecated: false
      description: 'Deletes the specified allocation


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _application_nodes_{node_id}_allocations_{allocation_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: node_id
        required: true
        schema:
          type: int
      - description: ''
        in: path
        name: allocation_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{allocation} ] Delete allocation'
      tags:
      - ' Allocations'
  /application/nodes/{node_id}/configuration:
    get:
      deprecated: false
      description: "Displays the Wings configuration \n\n<!-- RESPONSE 200 -->\n{\n\
        \  \"debug\": false,\n  \"uuid\": \"1046d1d1-b8ef-4771-82b1-2b5946d33397\"\
        ,\n  \"token_id\": \"iAcosCn1KCAgVjVO\",\n  \"token\": \"FanPzLCptUxkGow3vi7Z\"\
        ,\n  \"api\": {\n    \"host\": \"0.0.0.0\",\n    \"port\": 8080,\n    \"ssl\"\
        : {\n      \"enabled\": true,\n      \"cert\": \"\\/etc\\/letsencrypt\\/live\\\
        /pterodactyl.file.properties\\/fullchain.pem\",\n      \"key\": \"\\/etc\\\
        /letsencrypt\\/live\\/pterodactyl.file.properties\\/privkey.pem\"\n    },\n\
        \    \"upload_limit\": 100\n  },\n  \"system\": {\n    \"data\": \"\\/srv\\\
        /daemon-data\",\n    \"sftp\": {\n      \"bind_port\": 2022\n    }\n  },\n\
        \  \"remote\": \"https:\\/\\/pterodactyl.file.properties\"\n}\n<!-- ENDRESPONSE\
        \ -->"
      operationId: _application_nodes_{node_id}_configuration_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: node_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{node}/configuration ] Node configuration'
      tags:
      - ' Nodes'
  /application/servers:
    get:
      deprecated: false
      description: "Retrieves all servers\n\n<!-- RESPONSE 200 -->\n{\n  \"object\"\
        : \"list\",\n  \"data\": [\n    {\n      \"object\": \"server\",\n      \"\
        attributes\": {\n        \"id\": 5,\n        \"external_id\": \"RemoteId1\"\
        ,\n        \"uuid\": \"{server_id}-259b-452e-8b4e-cecc464142ca\",\n      \
        \  \"identifier\": \"{server_id}\",\n        \"name\": \"Wuhu Island\",\n\
        \        \"description\": \"Matt from Wii Sports\",\n        \"suspended\"\
        : false,\n        \"limits\": {\n          \"memory\": 512,\n          \"\
        swap\": 0,\n          \"disk\": 200,\n          \"io\": 500,\n          \"\
        cpu\": 0,\n          \"threads\": null\n        },\n        \"feature_limits\"\
        : {\n          \"databases\": 5,\n          \"allocations\": 5,\n        \
        \  \"backups\": 2\n        },\n        \"user\": 1,\n        \"node\": 1,\n\
        \        \"allocation\": 1,\n        \"nest\": 1,\n        \"egg\": 5,\n \
        \       \"pack\": null,\n        \"container\": {\n          \"startup_command\"\
        : \"java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}\",\n    \
        \      \"image\": \"quay.io\\/pterodactyl\\/core:java\",\n          \"installed\"\
        : true,\n          \"environment\": {\n            \"SERVER_JARFILE\": \"\
        server.jar\",\n            \"VANILLA_VERSION\": \"latest\",\n            \"\
        STARTUP\": \"java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}\"\
        ,\n            \"P_SERVER_LOCATION\": \"Test\",\n            \"P_SERVER_UUID\"\
        : \"{server_id}-259b-452e-8b4e-cecc464142ca\"\n          }\n        },\n \
        \       \"updated_at\": \"2020-06-13T04:20:53+00:00\",\n        \"created_at\"\
        : \"2019-12-23T06:46:27+00:00\",\n        \"relationships\": {\n         \
        \ \"databases\": {\n            \"object\": \"list\",\n            \"data\"\
        : [\n              {\n                \"object\": \"databases\",\n       \
        \         \"attributes\": {\n                  \"id\": 1,\n              \
        \    \"server\": 5,\n                  \"host\": 4,\n                  \"\
        database\": \"s5_perms\",\n                  \"username\": \"u5_QsIAp1jhvS\"\
        ,\n                  \"remote\": \"%\",\n                  \"max_connections\"\
        : 0,\n                  \"created_at\": \"2020-06-12T23:00:13+01:00\",\n \
        \                 \"updated_at\": \"2020-06-12T23:00:13+01:00\"\n        \
        \        }\n              },\n              {\n                \"object\"\
        : \"databases\",\n                \"attributes\": {\n                  \"\
        id\": 2,\n                  \"server\": 5,\n                  \"host\": 4,\n\
        \                  \"database\": \"s5_coreprotect\",\n                  \"\
        username\": \"u5_2jtJx1nO1d\",\n                  \"remote\": \"%\",\n   \
        \               \"max_connections\": 0,\n                  \"created_at\"\
        : \"2020-06-12T23:00:20+01:00\",\n                  \"updated_at\": \"2020-06-12T23:00:20+01:00\"\
        \n                }\n              }\n            ]\n          }\n       \
        \ }\n      }\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"\
        total\": 1,\n      \"count\": 1,\n      \"per_page\": 50,\n      \"current_page\"\
        : 1,\n      \"total_pages\": 1,\n      \"links\": {}\n    }\n  }\n}\n<!--\
        \ ENDRESPONSE -->"
      operationId: '[/]Listservers'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List servers'
      tags:
      - '[ /servers ] Servers'
    post:
      deprecated: false
      description: "Creates a new server\n\n<!-- RESPONSE 201 -->\n{\n  \"object\"\
        : \"server\",\n  \"attributes\": {\n    \"id\": 7,\n    \"external_id\": null,\n\
        \    \"uuid\": \"d557c19c-8b21-4456-a9e5-181beda429f4\",\n    \"identifier\"\
        : \"d557c19c\",\n    \"name\": \"Building\",\n    \"description\": \"\",\n\
        \    \"suspended\": false,\n    \"limits\": {\n      \"memory\": 128,\n  \
        \    \"swap\": 0,\n      \"disk\": 512,\n      \"io\": 500,\n      \"cpu\"\
        : 100,\n      \"threads\": null\n    },\n    \"feature_limits\": {\n     \
        \ \"databases\": 5,\n      \"allocations\": 0,\n      \"backups\": 1\n   \
        \ },\n    \"user\": 1,\n    \"node\": 1,\n    \"allocation\": 17,\n    \"\
        nest\": 1,\n    \"egg\": 1,\n    \"container\": {\n      \"startup_command\"\
        : \"java -Xms128M -Xmx128M -jar server.jar\",\n      \"image\": \"quay.io\\\
        /pterodactyl\\/core:java\",\n      \"installed\": false,\n      \"environment\"\
        : {\n        \"BUNGEE_VERSION\": \"latest\",\n        \"SERVER_JARFILE\":\
        \ \"server.jar\",\n        \"STARTUP\": \"java -Xms128M -Xmx128M -jar server.jar\"\
        ,\n        \"P_SERVER_LOCATION\": \"GB\",\n        \"P_SERVER_UUID\": \"d557c19c-8b21-4456-a9e5-181beda429f4\"\
        ,\n        \"P_SERVER_ALLOCATION_LIMIT\": 0\n      }\n    },\n    \"updated_at\"\
        : \"2020-10-29T01:38:59+00:00\",\n    \"created_at\": \"2020-10-29T01:38:59+00:00\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/]Createserver'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allocation:
                default: 17
              docker_image: quay.io/pterodactyl/core:java
              egg: 1
              environment:
                BUNGEE_VERSION: latest
                SERVER_JARFILE: server.jar
              feature_limits:
                backups: 1
                databases: 5
              limits:
                cpu: 100
                disk: 512
                io: 500
                memory: 128
                swap: 0
              name: Building
              startup: java -Xms128M -Xmx128M -jar server.jar
              user: 1
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateserverRequest'
              - example:
                  allocation:
                    default: 17
                  docker_image: quay.io/pterodactyl/core:java
                  egg: 1
                  environment:
                    BUNGEE_VERSION: latest
                    SERVER_JARFILE: server.jar
                  feature_limits:
                    backups: 1
                    databases: 5
                  limits:
                    cpu: 100
                    disk: 512
                    io: 500
                    memory: 128
                    swap: 0
                  name: Building
                  startup: java -Xms128M -Xmx128M -jar server.jar
                  user: 1
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Create server'
      tags:
      - '[ /servers ] Servers'
  /application/servers/external/{server_id}:
    get:
      deprecated: false
      description: "Retrieves a server by its external ID\n\n## Available include\
        \ parameters\n| Parameter   | Description                                |\n\
        |-------------|--------------------------------------------|\n| allocations\
        \ | List of allocations assigned to the server |\n| user        | Information\
        \ about the server owner         |\n| subusers    | List of users added to\
        \ the server          |\n| pack        | Information about the server pack\
        \          |\n| nest        | Information about the server's egg nest    |\n\
        | egg         | Information about the server's egg         |\n| variables\
        \   | List of server variables                   |\n| location    | Information\
        \ about server's node location   |\n| node        | Information about the\
        \ server's node        |\n| databases   | List of databases on the server\
        \            |\n\n<!-- RESPONSE -->\n{\n  \"object\": \"server\",\n  \"attributes\"\
        : {\n    \"id\": 5,\n    \"external_id\": \"RemoteId1\",\n    \"uuid\": \"\
        {server_id}-259b-452e-8b4e-cecc464142ca\",\n    \"identifier\": \"{server_id}\"\
        ,\n    \"name\": \"Gaming\",\n    \"description\": \"Matt from Wii Sports\"\
        ,\n    \"suspended\": false,\n    \"limits\": {\n      \"memory\": 512,\n\
        \      \"swap\": 0,\n      \"disk\": 200,\n      \"io\": 500,\n      \"cpu\"\
        : 0,\n      \"threads\": null\n    },\n    \"feature_limits\": {\n      \"\
        databases\": 5,\n      \"allocations\": 5,\n      \"backups\": 2\n    },\n\
        \    \"user\": 1,\n    \"node\": 1,\n    \"allocation\": 1,\n    \"nest\"\
        : 1,\n    \"egg\": 5,\n    \"pack\": null,\n    \"container\": {\n      \"\
        startup_command\": \"java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}\"\
        ,\n      \"image\": \"quay.io\\/pterodactyl\\/core:java\",\n      \"installed\"\
        : true,\n      \"environment\": {\n        \"SERVER_JARFILE\": \"server.jar\"\
        ,\n        \"VANILLA_VERSION\": \"latest\",\n        \"STARTUP\": \"java -Xms128M\
        \ -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}\",\n        \"P_SERVER_LOCATION\"\
        : \"GB\",\n        \"P_SERVER_UUID\": \"{server_id}-259b-452e-8b4e-cecc464142ca\"\
        ,\n        \"P_SERVER_ALLOCATION_LIMIT\": 5\n      }\n    },\n    \"updated_at\"\
        : \"2020-07-19T15:22:39+00:00\",\n    \"created_at\": \"2019-12-23T06:46:27+00:00\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_servers_external_{server_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /external/{external_id} ] Server details'
      tags:
      - ' Servers'
  /application/servers/{server_id}:
    delete:
      deprecated: false
      description: 'Deletes the specified server


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _application_servers_{server_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id004
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{server} ] Delete server'
      tags:
      - ' Servers'
    get:
      deprecated: false
      description: "Retrieves the specified server\n\n## Available include parameters\n\
        | Parameter   | Description                                |\n|-------------|--------------------------------------------|\n\
        | allocations | List of allocations assigned to the server |\n| user     \
        \   | Information about the server owner         |\n| subusers    | List of\
        \ users added to the server          |\n| pack        | Information about\
        \ the server pack          |\n| nest        | Information about the server's\
        \ egg nest    |\n| egg         | Information about the server's egg      \
        \   |\n| variables   | List of server variables                   |\n| location\
        \    | Information about server's node location   |\n| node        | Information\
        \ about the server's node        |\n| databases   | List of databases on the\
        \ server            |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"server\"\
        ,\n  \"attributes\": {\n    \"id\": 5,\n    \"external_id\": \"RemoteId1\"\
        ,\n    \"uuid\": \"{server_id}-259b-452e-8b4e-cecc464142ca\",\n    \"identifier\"\
        : \"{server_id}\",\n    \"name\": \"Gaming\",\n    \"description\": \"Matt\
        \ from Wii Sports\",\n    \"suspended\": false,\n    \"limits\": {\n     \
        \ \"memory\": 512,\n      \"swap\": 0,\n      \"disk\": 200,\n      \"io\"\
        : 500,\n      \"cpu\": 0,\n      \"threads\": null\n    },\n    \"feature_limits\"\
        : {\n      \"databases\": 5,\n      \"allocations\": 5,\n      \"backups\"\
        : 2\n    },\n    \"user\": 1,\n    \"node\": 1,\n    \"allocation\": 1,\n\
        \    \"nest\": 1,\n    \"egg\": 5,\n    \"pack\": null,\n    \"container\"\
        : {\n      \"startup_command\": \"java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar\
        \ {{SERVER_JARFILE}}\",\n      \"image\": \"quay.io\\/pterodactyl\\/core:java\"\
        ,\n      \"installed\": true,\n      \"environment\": {\n        \"SERVER_JARFILE\"\
        : \"server.jar\",\n        \"VANILLA_VERSION\": \"latest\",\n        \"STARTUP\"\
        : \"java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}\",\n    \
        \    \"P_SERVER_LOCATION\": \"GB\",\n        \"P_SERVER_UUID\": \"{server_id}-259b-452e-8b4e-cecc464142ca\"\
        ,\n        \"P_SERVER_ALLOCATION_LIMIT\": 5\n      }\n    },\n    \"updated_at\"\
        : \"2020-07-19T15:22:39+00:00\",\n    \"created_at\": \"2019-12-23T06:46:27+00:00\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_servers_{server_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id004
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{server} ] Server details'
      tags:
      - ' Servers'
  /application/servers/{server_id}/build:
    patch:
      deprecated: false
      description: "Updates the server build information\n\n## Fields\n| Name    \
        \                   | Required?        | Type   | Description            \
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \     | Rules |\n|----------------------------|------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------|\n\
        | allocation                 | required         | number | ID of primary allocation\
        \                                                                        \
        \                                                                        \
        \                                                                        \
        \    |       |\n| memory                     | required_without | number |\
        \ The maximum amount of memory allowed for this container. Setting this to\
        \ 0 will allow unlimited memory in a container.                          \
        \                                                                        \
        \                            |       |\n| swap                       | required_without\
        \ | number | Setting this to 0 will disable swap space on this server. Setting\
        \ to -1 will allow unlimited swap.                                       \
        \                                                                        \
        \                                   |       |\n| io                      \
        \   | required_without | number | IO performance of this server relative to\
        \ other running containers                                               \
        \                                                                        \
        \                                                           |       |\n| cpu\
        \                        | required_without | number | Each physical core\
        \ on the system is considered to be 100%. Setting this value to 0 will allow\
        \ a server to use CPU time without restrictions.                         \
        \                                                                        \
        \       |       |\n| disk                       | required_without | number\
        \ | This server will not be allowed to boot if it is using more than this\
        \ amount of space. If a server goes over this limit while running it will\
        \ be safely stopped and locked until enough space is available. Set to 0 to\
        \ allow unlimited disk usage. |       |\n| threads                    |  \
        \                | number | Enter the specific CPU cores that this process\
        \ can run on, or leave blank to allow all cores. This can be a single number,\
        \ or a comma seperated list. Example: 0, 0-1,3, or 0,1,3,4.              \
        \                                                  |       |\n| feature_limits\
        \             | required         | object |                              \
        \                                                                        \
        \                                                                        \
        \                                                                       |\
        \       |\n| feature_limits.databases   | present          | number | The\
        \ total number of databases a user is allowed to create for this server. \
        \                                                                        \
        \                                                                        \
        \                         |       |\n| feature_limits.backups     | present\
        \          | number | The total number of allocations a user is allowed to\
        \ create for this server.                                                \
        \                                                                        \
        \                                                |       |\n| feature_limits.allocations\
        \ |                  | number | The total number of allocations a user is\
        \ allowed to create for this server.                                     \
        \                                                                        \
        \                                                           |       |\n\n\
        <!-- RESPONSE -->\n{\n  \"object\": \"server\",\n  \"attributes\": {\n   \
        \ \"id\": 5,\n    \"external_id\": \"RemoteID1\",\n    \"uuid\": \"{server_id}-259b-452e-8b4e-cecc464142ca\"\
        ,\n    \"identifier\": \"{server_id}\",\n    \"name\": \"Gaming\",\n    \"\
        description\": \"Matt from Wii Sports\",\n    \"suspended\": false,\n    \"\
        limits\": {\n      \"memory\": 512,\n      \"swap\": 0,\n      \"disk\": 200,\n\
        \      \"io\": 500,\n      \"cpu\": 0,\n      \"threads\": null\n    },\n\
        \    \"feature_limits\": {\n      \"databases\": 5,\n      \"allocations\"\
        : 5,\n      \"backups\": 2\n    },\n    \"user\": 1,\n    \"node\": 1,\n \
        \   \"allocation\": 1,\n    \"nest\": 1,\n    \"egg\": 5,\n    \"container\"\
        : {\n      \"startup_command\": \"java -Xms128M -Xmx2014M -jar server.jar\"\
        ,\n      \"image\": \"quay.io\\/pterodactyl\\/core:java\",\n      \"installed\"\
        : true,\n      \"environment\": {\n        \"SERVER_JARFILE\": \"server.jar\"\
        ,\n        \"VANILLA_VERSION\": \"latest\",\n        \"STARTUP\": \"java -Xms128M\
        \ -Xmx2048M -jar server.jar\",\n        \"P_SERVER_LOCATION\": \"GB\",\n \
        \       \"P_SERVER_UUID\": \"{server_id}-259b-452e-8b4e-cecc464142ca\",\n\
        \        \"P_SERVER_ALLOCATION_LIMIT\": 5\n      }\n    },\n    \"updated_at\"\
        : \"2020-11-04T21:11:26+00:00\",\n    \"created_at\": \"2019-12-23T06:46:27+00:00\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_servers_{server_id}_build_patch
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              allocation: 1
              cpu: 0
              disk: 200
              feature_limits:
                allocations: 5
                backups: 2
                databases: 5
              io: 500
              memory: 512
              swap: 0
              threads: null
            schema:
              allOf:
              - $ref: '#/components/schemas/serverbuildUpdatebuildRequest'
              - example:
                  allocation: 1
                  cpu: 0
                  disk: 200
                  feature_limits:
                    allocations: 5
                    backups: 2
                    databases: 5
                  io: 500
                  memory: 512
                  swap: 0
                  threads: null
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{server}/build ] Update build'
      tags:
      - ' Servers'
  /application/servers/{server_id}/databases:
    get:
      deprecated: false
      description: "Retrieves all databases on a server\n\n## Available include parameters\n\
        | Parameter | Description                         |\n|-----------|-------------------------------------|\n\
        | password  | Includes the database user password |\n| host      | Information\
        \ about the database host |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"\
        list\",\n  \"data\": [\n    {\n      \"object\": \"server_database\",\n  \
        \    \"attributes\": {\n        \"id\": 1,\n        \"server\": 5,\n     \
        \   \"host\": 4,\n        \"database\": \"s5_perms\",\n        \"username\"\
        : \"u5_QsIAp1jhvS\",\n        \"remote\": \"%\",\n        \"max_connections\"\
        : 0,\n        \"created_at\": \"2020-06-12T23:00:13+01:00\",\n        \"updated_at\"\
        : \"2020-06-12T23:00:13+01:00\",\n        \"relationships\": {\n         \
        \ \"password\": {\n            \"object\": \"database_password\",\n      \
        \      \"attributes\": {\n              \"password\": \".FjJ!5w945L3tuG4DrSxF+T@\"\
        \n            }\n          },\n          \"host\": {\n            \"object\"\
        : \"database_host\",\n            \"attributes\": {\n              \"id\"\
        : 4,\n              \"name\": \"MariaDB\",\n              \"host\": \"127.0.0.1\"\
        ,\n              \"port\": 3306,\n              \"username\": \"pterodactyluser\"\
        ,\n              \"node\": 1,\n              \"created_at\": \"2020-06-12T22:59:25+01:00\"\
        ,\n              \"updated_at\": \"2020-06-12T22:59:25+01:00\"\n         \
        \   }\n          }\n        }\n      }\n    },\n    {\n      \"object\": \"\
        server_database\",\n      \"attributes\": {\n        \"id\": 2,\n        \"\
        server\": 5,\n        \"host\": 4,\n        \"database\": \"s5_coreprotect\"\
        ,\n        \"username\": \"u5_2jtJx1nO1d\",\n        \"remote\": \"%\",\n\
        \        \"max_connections\": 0,\n        \"created_at\": \"2020-06-12T23:00:20+01:00\"\
        ,\n        \"updated_at\": \"2020-06-12T23:00:20+01:00\",\n        \"relationships\"\
        : {\n          \"password\": {\n            \"object\": \"database_password\"\
        ,\n            \"attributes\": {\n              \"password\": \"4=rv^0vHuOPSHCfj!tM1OlMC\"\
        \n            }\n          },\n          \"host\": {\n            \"object\"\
        : \"database_host\",\n            \"attributes\": {\n              \"id\"\
        : 4,\n              \"name\": \"MariaDB\",\n              \"host\": \"127.0.0.1\"\
        ,\n              \"port\": 3306,\n              \"username\": \"pterodactyluser\"\
        ,\n              \"node\": 1,\n              \"created_at\": \"2020-06-12T22:59:25+01:00\"\
        ,\n              \"updated_at\": \"2020-06-12T22:59:25+01:00\"\n         \
        \   }\n          }\n        }\n      }\n    }\n  ]\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_servers_{server_id}_databases_get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - description: ''
        in: header
        name: id
        required: true
        schema:
          type: string
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - in: query
        name: include
        schema:
          example: password,host
          type: string
      - &id005
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List databases'
      tags:
      - ' Database Management'
    post:
      deprecated: false
      description: "Creates a new database on the specified server\n\n## Fields\n\
        | Name     | Required? | Type   | Description                            \
        \        | Rules |\n|----------|-----------|--------|------------------------------------------------|-------|\n\
        | database | required  | string | Name for database                      \
        \        |       |\n| remote   | database  | string | Permitted remotes that\
        \ can access the database |       |\n| host     | database  | number | ID\
        \ of the database host to use                 |       |\n\n<!-- RESPONSE 200\
        \ -->\n{\n  \"object\": \"server_database\",\n  \"attributes\": {\n    \"\
        id\": 6,\n    \"server\": 5,\n    \"host\": 4,\n    \"database\": \"s5_matches\"\
        ,\n    \"username\": \"u5_LhG3aGWBtk\",\n    \"remote\": \"%\",\n    \"max_connections\"\
        : null,\n    \"created_at\": \"2020-11-04T21:00:42+00:00\",\n    \"updated_at\"\
        : \"2020-11-04T21:00:42+00:00\"\n  },\n  \"meta\": {\n    \"resource\": \"\
        https:\\/\\/pterodactyl.file.properties\\/api\\/application\\/servers\\/5\\\
        /databases\\/6\"\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_servers_{server_id}_databases_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id005
      requestBody:
        content:
          application/json:
            example:
              database: matches
              host: 4
              remote: '%'
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatedatabaseRequest'
              - example:
                  database: matches
                  host: 4
                  remote: '%'
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Create database'
      tags:
      - ' Database Management'
  /application/servers/{server_id}/databases/{database_id}:
    delete:
      deprecated: false
      description: 'Deletes the specified database


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _application_servers_{server_id}_databases_{database_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id006
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - &id007
        description: ''
        in: path
        name: database_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{database} ] Delete database'
      tags:
      - ' Database Management'
    get:
      deprecated: false
      description: "Retrieves the specified database\n\n## Available include parameters\n\
        | Parameter | Description                         |\n|-----------|-------------------------------------|\n\
        | password  | Includes the database user password |\n| host      | Information\
        \ about the database host |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"\
        server_database\",\n  \"attributes\": {\n    \"id\": 1,\n    \"server\": 5,\n\
        \    \"host\": 4,\n    \"database\": \"s5_perms\",\n    \"username\": \"u5_QsIAp1jhvS\"\
        ,\n    \"remote\": \"%\",\n    \"max_connections\": 0,\n    \"created_at\"\
        : \"2020-06-12T23:00:13+01:00\",\n    \"updated_at\": \"2020-06-12T23:00:13+01:00\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_servers_{server_id}_databases_{database_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id006
      - *id007
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{database} ] Database details'
      tags:
      - ' Database Management'
  /application/servers/{server_id}/databases/{database_id}/reset-password:
    post:
      deprecated: false
      description: 'Rotates the password of the database


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _application_servers_{server_id}_databases_{database_id}_reset-password_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - description: ''
        in: path
        name: database_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{database}/reset-password ] Reset password'
      tags:
      - ' Database Management'
  /application/servers/{server_id}/details:
    patch:
      deprecated: false
      description: "Updates the server details\n\n## Fields\n| Name        | Required?\
        \ | Type        | Description                                | Rules |\n|-------------|-----------|-------------|--------------------------------------------|-------|\n\
        | name        | required  | string | Name for the server                 \
        \       |       |\n| user        | required  | number      | ID of the user\
        \ which the server belongs to |       |\n| external_id |           | string\
        \      | External ID of the server                  |       |\n| description\
        \ |           | string | Description of the server                  |    \
        \   |\n\n<!-- RESPONSE -->\n{\n  \"object\": \"server\",\n  \"attributes\"\
        : {\n    \"id\": 5,\n    \"external_id\": \"RemoteID1\",\n    \"uuid\": \"\
        {server_id}-259b-452e-8b4e-cecc464142ca\",\n    \"identifier\": \"{server_id}\"\
        ,\n    \"name\": \"Gaming\",\n    \"description\": \"Matt from Wii Sports\"\
        ,\n    \"suspended\": false,\n    \"limits\": {\n      \"memory\": 512,\n\
        \      \"swap\": 0,\n      \"disk\": 200,\n      \"io\": 500,\n      \"cpu\"\
        : 0,\n      \"threads\": null\n    },\n    \"feature_limits\": {\n      \"\
        databases\": 5,\n      \"allocations\": 5,\n      \"backups\": 2\n    },\n\
        \    \"user\": 1,\n    \"node\": 1,\n    \"allocation\": 1,\n    \"nest\"\
        : 1,\n    \"egg\": 5,\n    \"container\": {\n      \"startup_command\": \"\
        java -Xms128M -Xmx2014M -jar server.jar\",\n      \"image\": \"quay.io\\/pterodactyl\\\
        /core:java\",\n      \"installed\": true,\n      \"environment\": {\n    \
        \    \"SERVER_JARFILE\": \"server.jar\",\n        \"VANILLA_VERSION\": \"\
        latest\",\n        \"STARTUP\": \"java -Xms128M -Xmx2048M -jar server.jar\"\
        ,\n        \"P_SERVER_LOCATION\": \"GB\",\n        \"P_SERVER_UUID\": \"{server_id}-259b-452e-8b4e-cecc464142ca\"\
        ,\n        \"P_SERVER_ALLOCATION_LIMIT\": 5\n      }\n    },\n    \"updated_at\"\
        : \"2020-11-04T21:11:26+00:00\",\n    \"created_at\": \"2019-12-23T06:46:27+00:00\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_servers_{server_id}_details_patch
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              description: Matt from Wii Sports
              external_id: RemoteID1
              name: Gaming
              user: 1
            schema:
              allOf:
              - $ref: '#/components/schemas/serverdetailsUpdatedetailsRequest'
              - example:
                  description: Matt from Wii Sports
                  external_id: RemoteID1
                  name: Gaming
                  user: 1
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{server}/details ] Update details'
      tags:
      - ' Servers'
  /application/servers/{server_id}/force:
    delete:
      deprecated: false
      description: 'Forcefully deletes the specified server


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _application_servers_{server_id}_force_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{server}/{force?} ] Force delete server'
      tags:
      - ' Servers'
  /application/servers/{server_id}/reinstall:
    post:
      deprecated: false
      description: 'Reinstalls the specified server


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _application_servers_{server_id}_reinstall_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{server}/reinstall ] Reinstall server'
      tags:
      - ' Servers'
  /application/servers/{server_id}/startup:
    patch:
      deprecated: false
      description: "Updates the server startup information\n\n## Fields\n| Name  \
        \       | Required? | Type     | Description                             \
        \                                                                        \
        \                                  | Rules |\n|--------------|-----------|----------|---------------------------------------------------------------------------------------------------------------------------------------------------|-------|\n\
        | startup      | required  | string   | Edit your server's startup command\
        \ here. |       |\n| environment  | present   | object   | Environment variables\
        \ that the egg requires/supports                                         \
        \                                                     |       |\n| egg   \
        \       | required  | string   | ID of the egg to use                    \
        \                                                                        \
        \                                  |       |\n| image        | required  |\
        \ required | The Docker image to use for this server                     \
        \                                                                        \
        \              |       |\n| skip_scripts | present   | required | If enabled,\
        \ if the Egg has an install script, it will NOT be ran during install.   \
        \                                                               |       |\n\
        \n<!-- RESPONSE -->\n{\n  \"object\": \"server\",\n  \"attributes\": {\n \
        \   \"id\": 5,\n    \"external_id\": \"RemoteID1\",\n    \"uuid\": \"{server_id}-259b-452e-8b4e-cecc464142ca\"\
        ,\n    \"identifier\": \"{server_id}\",\n    \"name\": \"Gaming\",\n    \"\
        description\": \"Matt from Wii Sports\",\n    \"suspended\": false,\n    \"\
        limits\": {\n      \"memory\": 512,\n      \"swap\": 0,\n      \"disk\": 200,\n\
        \      \"io\": 500,\n      \"cpu\": 0,\n      \"threads\": null\n    },\n\
        \    \"feature_limits\": {\n      \"databases\": 5,\n      \"allocations\"\
        : 5,\n      \"backups\": 2\n    },\n    \"user\": 1,\n    \"node\": 1,\n \
        \   \"allocation\": 1,\n    \"nest\": 1,\n    \"egg\": 5,\n    \"container\"\
        : {\n      \"startup_command\": \"java -Xms128M -Xmx2014M -jar server.jar\"\
        ,\n      \"image\": \"quay.io\\/pterodactyl\\/core:java\",\n      \"installed\"\
        : true,\n      \"environment\": {\n        \"SERVER_JARFILE\": \"server.jar\"\
        ,\n        \"VANILLA_VERSION\": \"latest\",\n        \"STARTUP\": \"java -Xms128M\
        \ -Xmx2048M -jar server.jar\",\n        \"P_SERVER_LOCATION\": \"GB\",\n \
        \       \"P_SERVER_UUID\": \"{server_id}-259b-452e-8b4e-cecc464142ca\",\n\
        \        \"P_SERVER_ALLOCATION_LIMIT\": 5\n      }\n    },\n    \"updated_at\"\
        : \"2020-11-04T21:11:26+00:00\",\n    \"created_at\": \"2019-12-23T06:46:27+00:00\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_servers_{server_id}_startup_patch
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              egg: 5
              environment:
                SERVER_JARFILE: server.jar
                VANILLA_VERSION: latest
              image: quay.io/pterodactyl/core:java
              skip_scripts: false
              startup: java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}
            schema:
              allOf:
              - $ref: '#/components/schemas/serverstartupUpdatestartupRequest'
              - example:
                  egg: 5
                  environment:
                    SERVER_JARFILE: server.jar
                    VANILLA_VERSION: latest
                  image: quay.io/pterodactyl/core:java
                  skip_scripts: false
                  startup: java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{server}/startup ] Update startup'
      tags:
      - ' Servers'
  /application/servers/{server_id}/suspend:
    post:
      deprecated: false
      description: 'Suspends the specified server


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _application_servers_{server_id}_suspend_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{server}/suspend ] Suspend server'
      tags:
      - ' Servers'
  /application/servers/{server_id}/unsuspend:
    post:
      deprecated: false
      description: "Unuspends the specified \n\n<!-- RESPONSE 204 -->\n// Successful\n\
        <!-- ENDRESPONSE -->"
      operationId: _application_servers_{server_id}_unsuspend_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{server}/unsuspend ] Unsuspend server'
      tags:
      - ' Servers'
  /application/users:
    get:
      deprecated: false
      description: "Retrieves all users\n\n## Available Include parameters\n| Parameter\
        \ | Description                            |\n|-----------|----------------------------------------|\n\
        | servers   | List of servers the user has access to |\n\n## Filters\n| Parameter\
        \   |\n|-------------|\n| email       |\n| uuid        |\n| username    |\n\
        | external_id |\n\n## Sort by\n| Parameter   |\n|-------------|\n| id    \
        \      |\n| uuid        |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"list\"\
        ,\n  \"data\": [\n    {\n      \"object\": \"user\",\n      \"attributes\"\
        : {\n        \"id\": 1,\n        \"external_id\": \"RemoteId1\",\n       \
        \ \"uuid\": \"4de5a357-ed95-426b-aec1-8c328cfe9751\",\n        \"username\"\
        : \"admin\",\n        \"email\": \"example@example.com\",\n        \"first_name\"\
        : \"Admin\",\n        \"last_name\": \"User\",\n        \"language\": \"en\"\
        ,\n        \"root_admin\": true,\n        \"2fa\": false,\n        \"created_at\"\
        : \"2019-12-22T04:43:29+00:00\",\n        \"updated_at\": \"2020-07-13T13:10:23+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"user\",\n      \"attributes\"\
        : {\n        \"id\": 2,\n        \"external_id\": null,\n        \"uuid\"\
        : \"73f233ca-99e0-47a9-bd46-efd3296d7ad9\",\n        \"username\": \"subuser1uxk\"\
        ,\n        \"email\": \"subuser1@example.com\",\n        \"first_name\": \"\
        Server\",\n        \"last_name\": \"Subuser\",\n        \"language\": \"en\"\
        ,\n        \"root_admin\": false,\n        \"2fa\": false,\n        \"created_at\"\
        : \"2020-06-12T22:18:43+00:00\",\n        \"updated_at\": \"2020-06-12T22:18:43+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"user\",\n      \"attributes\"\
        : {\n        \"id\": 3,\n        \"external_id\": null,\n        \"uuid\"\
        : \"60a7aec3-e17d-4aa9-abb3-56d944d204b4\",\n        \"username\": \"subuser2jvc\"\
        ,\n        \"email\": \"subuser2@example.com\",\n        \"first_name\": \"\
        Server\",\n        \"last_name\": \"Subuser\",\n        \"language\": \"en\"\
        ,\n        \"root_admin\": false,\n        \"2fa\": false,\n        \"created_at\"\
        : \"2020-06-12T22:31:41+00:00\",\n        \"updated_at\": \"2020-06-12T22:31:41+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"user\",\n      \"attributes\"\
        : {\n        \"id\": 4,\n        \"external_id\": null,\n        \"uuid\"\
        : \"a14e9c5f-9c7a-448f-9106-58e2b5286de6\",\n        \"username\": \"test\"\
        ,\n        \"email\": \"example2@example.com\",\n        \"first_name\": \"\
        Test\",\n        \"last_name\": \"Admin\",\n        \"language\": \"en\",\n\
        \        \"root_admin\": true,\n        \"2fa\": false,\n        \"created_at\"\
        : \"2020-06-14T00:34:50+00:00\",\n        \"updated_at\": \"2020-06-14T00:34:50+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"user\",\n      \"attributes\"\
        : {\n        \"id\": 5,\n        \"external_id\": null,\n        \"uuid\"\
        : \"1287632d-9224-40c0-906e-f543423400bc\",\n        \"username\": \"subuser3bvo\"\
        ,\n        \"email\": \"subuser3@example.com\",\n        \"first_name\": \"\
        Server\",\n        \"last_name\": \"Subuser\",\n        \"language\": \"en\"\
        ,\n        \"root_admin\": false,\n        \"2fa\": false,\n        \"created_at\"\
        : \"2020-07-13T13:27:46+00:00\",\n        \"updated_at\": \"2020-07-13T13:27:46+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"user\",\n      \"attributes\"\
        : {\n        \"id\": 6,\n        \"external_id\": null,\n        \"uuid\"\
        : \"2fcb6f7e-342a-423a-93a4-6111a237c0c7\",\n        \"username\": \"geboc70057d6r\"\
        ,\n        \"email\": \"geboc70057@djemail.net\",\n        \"first_name\"\
        : \"Server\",\n        \"last_name\": \"Subuser\",\n        \"language\":\
        \ \"en\",\n        \"root_admin\": false,\n        \"2fa\": false,\n     \
        \   \"created_at\": \"2020-07-13T13:36:44+00:00\",\n        \"updated_at\"\
        : \"2020-07-13T13:36:44+00:00\"\n      }\n    },\n    {\n      \"object\"\
        : \"user\",\n      \"attributes\": {\n        \"id\": 7,\n        \"external_id\"\
        : null,\n        \"uuid\": \"b20e4e11-550f-4c52-893d-94fc8bc46a06\",\n   \
        \     \"username\": \"testidq\",\n        \"email\": \"test@example.com\"\
        ,\n        \"first_name\": \"Server\",\n        \"last_name\": \"Subuser\"\
        ,\n        \"language\": \"en\",\n        \"root_admin\": false,\n       \
        \ \"2fa\": false,\n        \"created_at\": \"2020-07-19T12:48:38+00:00\",\n\
        \        \"updated_at\": \"2020-07-19T12:48:38+00:00\"\n      }\n    }\n \
        \ ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 7,\n      \"\
        count\": 7,\n      \"per_page\": 50,\n      \"current_page\": 1,\n      \"\
        total_pages\": 1,\n      \"links\": {}\n    }\n  }\n}\n<!-- ENDRESPONSE -->\n\
        \n<!-- RESPONSE 200 -->\n// GET /api/application/users?filter%5Bemail%5D=dane%40daneeveritt.com\n\
        {\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\": \"user\"\
        ,\n      \"attributes\": {\n        \"id\": 27,\n        \"external_id\":\
        \ null,\n        \"uuid\": \"18528bb9-8f60-45e2-adc6-f72611559fd7\",\n   \
        \     \"username\": \"hodor7wm\",\n        \"email\": \"hodor@example.com\"\
        ,\n        \"first_name\": \"Server\",\n        \"last_name\": \"Subuser\"\
        ,\n        \"language\": \"en\",\n        \"root_admin\": false,\n       \
        \ \"2fa\": false,\n        \"created_at\": \"2020-08-19T03:23:35+00:00\",\n\
        \        \"updated_at\": \"2020-08-19T03:23:35+00:00\"\n      }\n    },\n\
        \    {\n      \"object\": \"user\",\n      \"attributes\": {\n        \"id\"\
        : 26,\n        \"external_id\": null,\n        \"uuid\": \"b83673f6-3387-4a37-97cd-dd3a4f508343\"\
        ,\n        \"username\": \"testfz0\",\n        \"email\": \"test@example.com\"\
        ,\n        \"first_name\": \"Server\",\n        \"last_name\": \"Subuser\"\
        ,\n        \"language\": \"en\",\n        \"root_admin\": false,\n       \
        \ \"2fa\": false,\n        \"created_at\": \"2020-08-19T03:15:51+00:00\",\n\
        \        \"updated_at\": \"2020-08-19T03:15:51+00:00\"\n      }\n    }\n \
        \ ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 2,\n      \"\
        count\": 2,\n      \"per_page\": 100,\n      \"current_page\": 1,\n      \"\
        total_pages\": 1,\n      \"links\": {}\n    }\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/]Listusers'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List users'
      tags:
      - '[ /users ] Users'
    post:
      deprecated: false
      description: "Creates a new user\n\n<!-- RESPONSE 201 -->\n{\n  \"object\":\
        \ \"user\",\n  \"attributes\": {\n    \"id\": 9,\n    \"external_id\": null,\n\
        \    \"uuid\": \"dac03ece-fd51-4e4b-bd4f-a79e3b2794f9\",\n    \"username\"\
        : \"exampleuser\",\n    \"email\": \"example10@example.com\",\n    \"first_name\"\
        : \"Example\",\n    \"last_name\": \"User\",\n    \"language\": \"en\",\n\
        \    \"root_admin\": false,\n    \"2fa\": false,\n    \"created_at\": \"2020-10-29T01:25:12+00:00\"\
        ,\n    \"updated_at\": \"2020-10-29T01:25:12+00:00\"\n  },\n  \"meta\": {\n\
        \    \"resource\": \"https:\\/\\/pterodactyl.file.properties\\/api\\/application\\\
        /users\\/9\"\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/]Createuser'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: example10@example.com
              first_name: Example
              last_name: User
              username: exampleuser
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateuserRequest'
              - example:
                  email: example10@example.com
                  first_name: Example
                  last_name: User
                  username: exampleuser
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Create user'
      tags:
      - '[ /users ] Users'
  /application/users/external/{user_id}:
    get:
      deprecated: false
      description: "Retrieves the specified user by its external ID\n\n## Available\
        \ include parameters\n| Parameter | Description                          \
        \  |\n|-----------|----------------------------------------|\n| servers  \
        \ | List of servers the user has access to |\n\n<!-- RESPONSE 200 -->\n{\n\
        \  \"object\": \"user\",\n  \"attributes\": {\n    \"id\": 1,\n    \"external_id\"\
        : \"RemoteId1\",\n    \"uuid\": \"4de5a357-ed95-426b-aec1-8c328cfe9751\",\n\
        \    \"username\": \"admin\",\n    \"email\": \"example@example.com\",\n \
        \   \"first_name\": \"Admin\",\n    \"last_name\": \"User\",\n    \"language\"\
        : \"en\",\n    \"root_admin\": true,\n    \"2fa\": false,\n    \"created_at\"\
        : \"2019-12-22T04:43:29+00:00\",\n    \"updated_at\": \"2020-07-13T13:10:23+00:00\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_users_external_{user_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: user_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /external/{external_id} ] User details'
      tags:
      - ' Users'
  /application/users/{user_id}:
    delete:
      deprecated: false
      description: 'Deletes the specified user


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _application_users_{user_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id008
        description: ''
        in: path
        name: user_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{user} ] Delete user'
      tags:
      - ' Users'
    get:
      deprecated: false
      description: "Retrieves the specified user\n\n## Available include parameters\n\
        | Parameter | Description                            |\n|-----------|----------------------------------------|\n\
        | servers   | List of servers the user has access to |\n\n<!-- RESPONSE 200\
        \ -->\n{\n  \"object\": \"user\",\n  \"attributes\": {\n    \"id\": 1,\n \
        \   \"external_id\": \"RemoteId1\",\n    \"uuid\": \"4de5a357-ed95-426b-aec1-8c328cfe9751\"\
        ,\n    \"username\": \"admin\",\n    \"email\": \"example@example.com\",\n\
        \    \"first_name\": \"Admin\",\n    \"last_name\": \"User\",\n    \"language\"\
        : \"en\",\n    \"root_admin\": true,\n    \"2fa\": false,\n    \"created_at\"\
        : \"2019-12-22T04:43:29+00:00\",\n    \"updated_at\": \"2020-07-13T13:10:23+00:00\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _application_users_{user_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id008
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{user} ] User details'
      tags:
      - ' Users'
    patch:
      deprecated: false
      description: "Updates the user information\n\n<!-- RESPONSE 200 -->\n{\n  \"\
        object\": \"user\",\n  \"attributes\": {\n    \"id\": 9,\n    \"external_id\"\
        : null,\n    \"uuid\": \"dac03ece-fd51-4e4b-bd4f-a79e3b2794f9\",\n    \"username\"\
        : \"exampleuser\",\n    \"email\": \"example10@example.com\",\n    \"first_name\"\
        : \"Example\",\n    \"last_name\": \"User\",\n    \"language\": \"en\",\n\
        \    \"root_admin\": false,\n    \"2fa\": false,\n    \"created_at\": \"2020-10-29T01:25:12+00:00\"\
        ,\n    \"updated_at\": \"2020-10-29T01:28:29+00:00\"\n  }\n}\n<!-- ENDRESPONSE\
        \ -->"
      operationId: _application_users_{user_id}_patch
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id008
      requestBody:
        content:
          application/json:
            example:
              email: example10@example.com
              first_name: Example
              language: en
              last_name: User
              password: New Password
              username: exampleuser
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateuserRequest'
              - example:
                  email: example10@example.com
                  first_name: Example
                  language: en
                  last_name: User
                  password: New Password
                  username: exampleuser
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Update user'
      tags:
      - ' Users'
  /client:
    get:
      deprecated: false
      description: "Lists all servers\n\n## Include parameters\n| Parameter | Description\
        \                               |\n|-----------|-------------------------------------------|\n\
        | egg       | Information about the egg the server uses |\n| subusers  | List\
        \ of subusers on the server            |\n\n<!-- RESPONSE 200 -->\n{\n  \"\
        object\": \"list\",\n  \"data\": [\n    {\n      \"object\": \"server\",\n\
        \      \"attributes\": {\n        \"server_owner\": true,\n        \"identifier\"\
        : \"{server_id}\",\n        \"uuid\": \"{server_id}-259b-452e-8b4e-cecc464142ca\"\
        ,\n        \"name\": \"Gaming\",\n        \"node\": \"Test\",\n        \"\
        sftp_details\": {\n          \"ip\": \"pterodactyl.file.properties\",\n  \
        \        \"port\": 2022\n        },\n        \"description\": \"Matt from\
        \ Wii Sports\",\n        \"limits\": {\n          \"memory\": 512,\n     \
        \     \"swap\": 0,\n          \"disk\": 200,\n          \"io\": 500,\n   \
        \       \"cpu\": 0\n        },\n        \"feature_limits\": {\n          \"\
        databases\": 5,\n          \"allocations\": 5,\n          \"backups\": 2\n\
        \        },\n        \"is_suspended\": false,\n        \"is_installing\":\
        \ false,\n        \"relationships\": {\n          \"allocations\": {\n   \
        \         \"object\": \"list\",\n            \"data\": [\n              {\n\
        \                \"object\": \"allocation\",\n                \"attributes\"\
        : {\n                  \"id\": 1,\n                  \"ip\": \"45.86.168.218\"\
        ,\n                  \"ip_alias\": null,\n                  \"port\": 25565,\n\
        \                  \"notes\": null,\n                  \"is_default\": true\n\
        \                }\n              },\n              {\n                \"\
        object\": \"allocation\",\n                \"attributes\": {\n           \
        \       \"id\": 2,\n                  \"ip\": \"45.86.168.218\",\n       \
        \           \"ip_alias\": null,\n                  \"port\": 25566,\n    \
        \              \"notes\": \"Votifier\",\n                  \"is_default\"\
        : false\n                }\n              }\n            ]\n          }\n\
        \        }\n      }\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n \
        \     \"total\": 1,\n      \"count\": 1,\n      \"per_page\": 50,\n      \"\
        current_page\": 1,\n      \"total_pages\": 1,\n      \"links\": {}\n    }\n\
        \  }\n}\n<!-- ENDRESPONSE -->"
      operationId: Get[/]Listservers
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List servers'
      tags:
      - '[ /api/client ] Client'
  /client/permissions:
    get:
      deprecated: false
      description: "Retries all available permissions\n\nThis is used for the frontend\n\
        \n<!-- RESPONSE 200 -->\n{\n  \"object\": \"system_permissions\",\n  \"attributes\"\
        : {\n    \"permissions\": {\n      \"websocket\": {\n        \"description\"\
        : \"Allows the user to connect to the server websocket, giving them access\
        \ to view console output and realtime server stats.\",\n        \"keys\":\
        \ {\n          \"connect\": \"Allows a user to connect to the websocket instance\
        \ for a server to stream the console.\"\n        }\n      },\n      \"control\"\
        : {\n        \"description\": \"Permissions that control a user's ability\
        \ to control the power state of a server, or send commands.\",\n        \"\
        keys\": {\n          \"console\": \"Allows a user to send commands to the\
        \ server instance via the console.\",\n          \"start\": \"Allows a user\
        \ to start the server if it is stopped.\",\n          \"stop\": \"Allows a\
        \ user to stop a server if it is running.\",\n          \"restart\": \"Allows\
        \ a user to perform a server restart. This allows them to start the server\
        \ if it is offline, but not put the server in a completely stopped state.\"\
        \n        }\n      },\n      \"user\": {\n        \"description\": \"Permissions\
        \ that allow a user to manage other subusers on a server. They will never\
        \ be able to edit their own account, or assign permissions they do not have\
        \ themselves.\",\n        \"keys\": {\n          \"create\": \"Allows a user\
        \ to create new subusers for the server.\",\n          \"read\": \"Allows\
        \ the user to view subusers and their permissions for the server.\",\n   \
        \       \"update\": \"Allows a user to modify other subusers.\",\n       \
        \   \"delete\": \"Allows a user to delete a subuser from the server.\"\n \
        \       }\n      },\n      \"file\": {\n        \"description\": \"Permissions\
        \ that control a user's ability to modify the filesystem for this server.\"\
        ,\n        \"keys\": {\n          \"create\": \"Allows a user to create additional\
        \ files and folders via the Panel or direct upload.\",\n          \"read\"\
        : \"Allows a user to view the contents of a directory and read the contents\
        \ of a file. Users with this permission can also download files.\",\n    \
        \      \"update\": \"Allows a user to update the contents of an existing file\
        \ or directory.\",\n          \"delete\": \"Allows a user to delete files\
        \ or directories.\",\n          \"archive\": \"Allows a user to archive the\
        \ contents of a directory as well as decompress existing archives on the system.\"\
        ,\n          \"sftp\": \"Allows a user to connect to SFTP and manage server\
        \ files using the other assigned file permissions.\"\n        }\n      },\n\
        \      \"backup\": {\n        \"description\": \"Permissions that control\
        \ a user's ability to generate and manage server backups.\",\n        \"keys\"\
        : {\n          \"create\": \"Allows a user to create new backups for this\
        \ server.\",\n          \"read\": \"Allows a user to view all backups that\
        \ exist for this server.\",\n          \"update\": \"\",\n          \"delete\"\
        : \"Allows a user to remove backups from the system.\",\n          \"download\"\
        : \"Allows a user to download backups.\"\n        }\n      },\n      \"allocation\"\
        : {\n        \"description\": \"Permissions that control a user's ability\
        \ to modify the port allocations for this server.\",\n        \"keys\": {\n\
        \          \"read\": \"Allows a user to view the allocations assigned to this\
        \ server.\",\n          \"create\": \"Allows a user to assign additional allocations\
        \ to the server.\",\n          \"update\": \"Allows a user to change the primary\
        \ server allocation and attach notes to each allocation.\",\n          \"\
        delete\": \"Allows a user to delete an allocation from the server.\"\n   \
        \     }\n      },\n      \"startup\": {\n        \"description\": \"Permissions\
        \ that control a user's ability to view this server's startup parameters.\"\
        ,\n        \"keys\": {\n          \"read\": \"\",\n          \"update\": \"\
        \"\n        }\n      },\n      \"database\": {\n        \"description\": \"\
        Permissions that control a user's access to the database management for this\
        \ server.\",\n        \"keys\": {\n          \"create\": \"Allows a user to\
        \ create a new database for this server.\",\n          \"read\": \"Allows\
        \ a user to view the database associated with this server.\",\n          \"\
        update\": \"Allows a user to rotate the password on a database instance. If\
        \ the user does not have the view_password permission they will not see the\
        \ updated password.\",\n          \"delete\": \"Allows a user to remove a\
        \ database instance from this server.\",\n          \"view_password\": \"\
        Allows a user to view the password associated with a database instance for\
        \ this server.\"\n        }\n      },\n      \"schedule\": {\n        \"description\"\
        : \"Permissions that control a user's access to the schedule management for\
        \ this server.\",\n        \"keys\": {\n          \"create\": \"\",\n    \
        \      \"read\": \"\",\n          \"update\": \"\",\n          \"delete\"\
        : \"\"\n        }\n      },\n      \"settings\": {\n        \"description\"\
        : \"Permissions that control a user's access to the settings for this server.\"\
        ,\n        \"keys\": {\n          \"rename\": \"\",\n          \"reinstall\"\
        : \"\"\n        }\n      }\n    }\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: '[/permissions]Showpermissions'
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /permissions ] Show permissions'
      tags:
      - '[ /api/client ] Client'
  /client/servers/{server_id}:
    get:
      deprecated: false
      description: "Retrieves information about the specified server\n\n## Include\
        \ parameters\n| Parameter | Description                               |\n\
        |-----------|-------------------------------------------|\n| egg       | Information\
        \ about the egg the server uses |\n| subusers  | List of subusers on the server\
        \            |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"server\",\n  \"\
        attributes\": {\n    \"server_owner\": true,\n    \"identifier\": \"{server_id}\"\
        ,\n    \"uuid\": \"{server_id}-259b-452e-8b4e-cecc464142ca\",\n    \"name\"\
        : \"Wuhu Island\",\n    \"node\": \"Test\",\n    \"sftp_details\": {\n   \
        \   \"ip\": \"pterodactyl.file.properties\",\n      \"port\": 2022\n    },\n\
        \    \"description\": \"Matt from Wii Sports\",\n    \"limits\": {\n     \
        \ \"memory\": 512,\n      \"swap\": 0,\n      \"disk\": 200,\n      \"io\"\
        : 500,\n      \"cpu\": 0\n    },\n    \"feature_limits\": {\n      \"databases\"\
        : 5,\n      \"allocations\": 5,\n      \"backups\": 2\n    },\n    \"is_suspended\"\
        : false,\n    \"is_installing\": false,\n    \"relationships\": {\n      \"\
        allocations\": {\n        \"object\": \"list\",\n        \"data\": [\n   \
        \       {\n            \"object\": \"allocation\",\n            \"attributes\"\
        : {\n              \"id\": 1,\n              \"ip\": \"45.86.168.218\",\n\
        \              \"ip_alias\": null,\n              \"port\": 25565,\n     \
        \         \"notes\": null,\n              \"is_default\": true\n         \
        \   }\n          },\n          {\n            \"object\": \"allocation\",\n\
        \            \"attributes\": {\n              \"id\": 2,\n              \"\
        ip\": \"45.86.168.218\",\n              \"ip_alias\": null,\n            \
        \  \"port\": 25566,\n              \"notes\": \"Votifier\",\n            \
        \  \"is_default\": false\n            }\n          }\n        ]\n      }\n\
        \    }\n  },\n  \"meta\": {\n    \"is_server_owner\": true,\n    \"user_permissions\"\
        : [\n      \"*\",\n      \"admin.websocket.errors\",\n      \"admin.websocket.install\"\
        \n    ]\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Server details'
      tags:
      - ' Server'
  /client/servers/{server_id}/backups:
    get:
      deprecated: false
      description: "Retrieves a list of backups\n\n<!-- RESPONSE 200 -->\n{\n  \"\
        object\": \"list\",\n  \"data\": [\n    {\n      \"object\": \"backup\",\n\
        \      \"attributes\": {\n        \"uuid\": \"904df120-a66f-4375-a4ae-40eedbeae630\"\
        ,\n        \"name\": \"Quick Backup\",\n        \"ignored_files\": [],\n \
        \       \"sha256_hash\": \"7c20d6a269b441a9dfd044e3f8ad13d77c09c83af8832d29ad603084a9a63726\"\
        ,\n        \"bytes\": 114402862,\n        \"created_at\": \"2020-06-13T05:21:01+01:00\"\
        ,\n        \"completed_at\": \"2020-06-13T05:21:04+01:00\"\n      }\n    },\n\
        \    {\n      \"object\": \"backup\",\n      \"attributes\": {\n        \"\
        uuid\": \"63087048-eada-419c-ad72-803c1c949cac\",\n        \"name\": \"Backup\
        \ at 2020-07-19 16:21:34\",\n        \"ignored_files\": [],\n        \"sha256_hash\"\
        : \"39bf93b9d8aee45316fa7ec8bbed0530904558851fa8e712452845c969873b16\",\n\
        \        \"bytes\": 114567250,\n        \"created_at\": \"2020-07-19T16:21:34+01:00\"\
        ,\n        \"completed_at\": \"2020-07-19T16:21:35+01:00\"\n      }\n    }\n\
        \  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 2,\n      \"\
        count\": 2,\n      \"per_page\": 20,\n      \"current_page\": 1,\n      \"\
        total_pages\": 1,\n      \"links\": {}\n    }\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_backups_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id009
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List backups'
      tags:
      - ' Backups'
    post:
      deprecated: false
      description: "Creates a new backup\n\n<!-- RESPONSE 200 -->\n{\n  \"object\"\
        : \"backup\",\n  \"attributes\": {\n    \"uuid\": \"63087048-eada-419c-ad72-803c1c949cac\"\
        ,\n    \"name\": \"Backup at 2020-07-19 16:21:34\",\n    \"ignored_files\"\
        : [],\n    \"sha256_hash\": null,\n    \"bytes\": 0,\n    \"created_at\":\
        \ \"2020-07-19T16:21:34+01:00\",\n    \"completed_at\": null\n  }\n}\n<!--\
        \ ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_backups_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id009
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Create backup'
      tags:
      - ' Backups'
  /client/servers/{server_id}/backups/{backup_id}:
    delete:
      deprecated: false
      description: 'Deletes the specified backup


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_backups_{backup_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id010
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - &id011
        description: ''
        in: path
        name: backup_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{backup} ] Delete backup'
      tags:
      - ' Backups'
    get:
      deprecated: false
      description: "Retrieves information about the specified backup\n\n<!-- RESPONSE\
        \ 200 -->\n{\n  \"object\": \"backup\",\n  \"attributes\": {\n    \"uuid\"\
        : \"904df120-a66f-4375-a4ae-40eedbeae630\",\n    \"name\": \"Quick Backup\"\
        ,\n    \"ignored_files\": [],\n    \"sha256_hash\": \"7c20d6a269b441a9dfd044e3f8ad13d77c09c83af8832d29ad603084a9a63726\"\
        ,\n    \"bytes\": 114402862,\n    \"created_at\": \"2020-06-13T05:21:01+01:00\"\
        ,\n    \"completed_at\": \"2020-06-13T05:21:04+01:00\"\n  }\n}\n<!-- ENDRESPONSE\
        \ -->"
      operationId: _client_servers_{server_id}_backups_{backup_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id010
      - *id011
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{backup} ] Backup details'
      tags:
      - ' Backups'
  /client/servers/{server_id}/backups/{backup_id}/download:
    get:
      deprecated: false
      description: "Generates a download link for a backup\n\n<!-- RESPONSE 200 -->\n\
        {\n  \"object\": \"signed_url\",\n  \"attributes\": {\n    \"url\": \"https:\\\
        /\\/pterodactyl.file.properties:8080\\/download\\/backup?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImp0aSI6IjdkYzAxNzVjODU4MTE5MDRlMjJjNTcxNjBhMjkwMjgwZGFjMDMzM2I2ZmJhMTE3YTI4YjdhMDM5Y2U1OTg0YzcifQ.eyJpc3MiOiJodHRwczpcL1wvcHRlcm9kYWN0eWwuZmlsZS5wcm9wZXJ0aWVzIiwiYXVkIjoiaHR0cHM6XC9cL3B0ZXJvZGFjdHlsLmZpbGUucHJvcGVydGllczo4MDgwIiwianRpIjoiN2RjMDE3NWM4NTgxMTkwNGUyMmM1NzE2MGEyOTAyODBkYWMwMzMzYjZmYmExMTdhMjhiN2EwMzljZTU5ODRjNyIsImlhdCI6MTU5NTE3MjEyNSwibmJmIjoxNTk1MTcxODI1LCJleHAiOjE1OTUxNzMwMjUsImJhY2t1cF91dWlkIjoiOTA0ZGYxMjAtYTY2Zi00Mzc1LWE0YWUtNDBlZWRiZWFlNjMwIiwic2VydmVyX3V1aWQiOiIxYTdjZTk5Ny0yNTliLTQ1MmUtOGI0ZS1jZWNjNDY0MTQyY2EiLCJ1bmlxdWVfaWQiOiJKN1lIQUFUZzVoYVg4M1VOIn0.0zSozCFyjsYjGjUiPS76wM1WXX09FecNxdSZnj6rNt4\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_backups_{backup_id}_download_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - description: ''
        in: path
        name: backup_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{backup}/download ] Download backup'
      tags:
      - ' Backups'
  /client/servers/{server_id}/command:
    post:
      deprecated: false
      description: "Sends a command to the server\n\nThe server must be online to\
        \ send a command to it. You will get HTTP 502 is the server if not online.\n\
        \n## Fields\n| Name    | Required? | Type   | Description     | Rules |\n\
        |---------|-----------|--------|-----------------|-------|\n| command | required\
        \  | string | Command to send |       |\n\n<!-- RESPONSE 204 -->\n// Successful\n\
        <!-- ENDRESPONSE -->\n\n<!-- RESPONSE 502 -->\n// Server offline\n{\n  \"\
        errors\": [\n    {\n      \"code\": \"HttpException\",\n      \"status\":\
        \ \"502\",\n      \"detail\": \"An error was encountered while processing\
        \ this request.\"\n    }\n  ]\n}"
      operationId: _client_servers_{server_id}_command_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              command: say CodeCo says Hi!
            schema:
              allOf:
              - $ref: '#/components/schemas/commandSendcommandRequest'
              - example:
                  command: say CodeCo says Hi!
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /command ] Send command'
      tags:
      - ' Server'
  /client/servers/{server_id}/databases:
    get:
      deprecated: false
      description: "Lists all databases on a server\n\n## Include parameters\n| Parameter\
        \ | Description                         |\n|-----------|-------------------------------------|\n\
        | password  | Includes the database user password |\n\n<!-- RESPONSE 200 -->\n\
        {\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\": \"server_database\"\
        ,\n      \"attributes\": {\n        \"id\": \"bEY4yAD5\",\n        \"host\"\
        : {\n          \"address\": \"127.0.0.1\",\n          \"port\": 3306\n   \
        \     },\n        \"name\": \"s5_perms\",\n        \"username\": \"u5_QsIAp1jhvS\"\
        ,\n        \"connections_from\": \"%\",\n        \"max_connections\": 0\n\
        \      }\n    },\n    {\n      \"object\": \"server_database\",\n      \"\
        attributes\": {\n        \"id\": \"E0A0Rw42\",\n        \"host\": {\n    \
        \      \"address\": \"127.0.0.1\",\n          \"port\": 3306\n        },\n\
        \        \"name\": \"s5_coreprotect\",\n        \"username\": \"u5_2jtJx1nO1d\"\
        ,\n        \"connections_from\": \"%\",\n        \"max_connections\": 0\n\
        \      }\n    }\n  ]\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_databases_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id012
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List databases'
      tags:
      - ' Databases'
    post:
      deprecated: false
      description: "Creates a new database\n\n<!-- RESPONSE 200 -->\n{\n  \"object\"\
        : \"server_database\",\n  \"attributes\": {\n    \"id\": \"y9YVxO4V\",\n \
        \   \"host\": {\n      \"address\": \"127.0.0.1\",\n      \"port\": 3306\n\
        \    },\n    \"name\": \"s5_punishments\",\n    \"username\": \"u5_aeZqbGdCM9\"\
        ,\n    \"connections_from\": \"%\",\n    \"max_connections\": 0,\n    \"relationships\"\
        : {\n      \"password\": {\n        \"object\": \"database_password\",\n \
        \       \"attributes\": {\n          \"password\": \"=lR2orDOcwfKkM=BXb.BVF.C\"\
        \n        }\n      }\n    }\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_databases_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id012
      requestBody:
        content:
          application/json:
            example:
              database: bans
              remote: '%'
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatedatabaseRequest1'
              - example:
                  database: bans
                  remote: '%'
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Create database'
      tags:
      - ' Databases'
  /client/servers/{server_id}/databases/{database_id}:
    delete:
      deprecated: false
      description: 'Deletes the specified database


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_databases_{database_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - description: ''
        in: path
        name: database_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{database} ] Delete database'
      tags:
      - ' Databases'
  /client/servers/{server_id}/databases/{database_id}/rotate-password:
    post:
      deprecated: false
      description: "Changes the password of a specified database\n\n<!-- RESPONSE\
        \ 200 -->\n{\n  \"object\": \"server_database\",\n  \"attributes\": {\n  \
        \  \"id\": \"y9YVxO4V\",\n    \"host\": {\n      \"address\": \"127.0.0.1\"\
        ,\n      \"port\": 3306\n    },\n    \"name\": \"s5_punishments\",\n    \"\
        username\": \"u5_aeZqbGdCM9\",\n    \"connections_from\": \"%\",\n    \"max_connections\"\
        : 0,\n    \"relationships\": {\n      \"password\": {\n        \"object\"\
        : \"database_password\",\n        \"attributes\": {\n          \"password\"\
        : \"vnFKXlJ.p77!EiGR+Kd3muB.\"\n        }\n      }\n    }\n  }\n}\n<!-- ENDRESPONSE\
        \ -->"
      operationId: _client_servers_{server_id}_databases_{database_id}_rotate-password_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - description: ''
        in: path
        name: database_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{database}/rotate-password ] Rotate password'
      tags:
      - ' Databases'
  /client/servers/{server_id}/files/compress:
    post:
      deprecated: false
      description: "Compresses the specified file\n\n<!-- RESPONSE 200 -->\n{\n  \"\
        object\": \"file_object\",\n  \"attributes\": {\n    \"name\": \"archive-2020-08-23T220805Z.tar.gz\"\
        ,\n    \"mode\": \"-rw-------\",\n    \"size\": 0,\n    \"is_file\": true,\n\
        \    \"is_symlink\": false,\n    \"is_editable\": false,\n    \"mimetype\"\
        : \"application\\/tar+gzip\",\n    \"created_at\": \"2020-08-23T22:08:05+00:00\"\
        ,\n    \"modified_at\": \"2020-08-23T22:08:05+00:00\"\n  }\n}\n<!-- ENDRESPONSE\
        \ -->"
      operationId: _client_servers_{server_id}_files_compress_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              files:
              - abc
              root: /
            schema:
              allOf:
              - $ref: '#/components/schemas/compressCompressfileRequest'
              - example:
                  files:
                  - abc
                  root: /
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /compress ] Compress file'
      tags:
      - ' File Manager'
  /client/servers/{server_id}/files/contents:
    get:
      deprecated: false
      description: "Displays the contents of the specified file\n\n## Available parameters\n\
        | Parameter | Description                          |\n|-----------|--------------------------------------|\n\
        | file      | URL encoded path to the desired file |\n\n<!-- RESPONSE 200\
        \ -->\n# This is the main configuration file for Paper.\n# As you can see,\
        \ there's tons to configure. Some options may impact gameplay, so use\n# with\
        \ caution, and make sure you know what each option does before configuring.\n\
        # \n# If you need help with the configuration or have any questions related\
        \ to Paper,\n# join us in our Discord or IRC channel.\n# \n# Discord: https://paperdiscord.emc.gs\n\
        # IRC: #paper @ irc.spi.gt ( http://irc.spi.gt/iris/?channels=paper )\n# Website:\
        \ https://papermc.io/ \n# Docs: https://paper.readthedocs.org/ \n\nverbose:\
        \ false\nconfig-version: 20\nsettings:\n  load-permissions-yml-before-plugins:\
        \ true\n  bungee-online-mode: true\n  region-file-cache-size: 256\n  incoming-packet-spam-threshold:\
        \ 300\n  save-player-data: true\n  use-alternative-luck-formula: false\n \
        \ suggest-player-names-when-null-tab-completions: true\n  enable-player-collisions:\
        \ true\n  save-empty-scoreboard-teams: false\n  velocity-support:\n    enabled:\
        \ false\n    online-mode: false\n    secret: ''\n  async-chunks:\n    enable:\
        \ true\n    load-threads: -1\n  watchdog:\n    early-warning-every: 5000\n\
        \    early-warning-delay: 10000\n  spam-limiter:\n    tab-spam-increment:\
        \ 1\n    tab-spam-limit: 500\n  book-size:\n    page-max: 2560\n    total-multiplier:\
        \ 0.98\nmessages:\n  no-permission: '&cI''m sorry, but you do not have permission\
        \ to perform this command.\n    Please contact the server administrators if\
        \ you believe that this is in error.'\n  kick:\n    authentication-servers-down:\
        \ ''\n    connection-throttle: Connection throttled! Please wait before reconnecting.\n\
        \    flying-player: Flying is not enabled on this server\n    flying-vehicle:\
        \ Flying is not enabled on this server\ntimings:\n  enabled: true\n  verbose:\
        \ true\n  server-name-privacy: false\n  hidden-config-entries:\n  - database\n\
        \  - settings.bungeecord-addresses\n  history-interval: 300\n  history-length:\
        \ 3600\n  server-name: Unknown Server\nworld-settings:\n  default:\n    per-player-mob-spawns:\
        \ false\n    optimize-explosions: false\n    portal-search-radius: 128\n \
        \   disable-teleportation-suffocation-check: false\n    fixed-chunk-inhabited-time:\
        \ -1\n    use-vanilla-world-scoreboard-name-coloring: false\n    remove-corrupt-tile-entities:\
        \ false\n    enable-treasure-maps: true\n    treasure-maps-return-already-discovered:\
        \ false\n    experience-merge-max-value: -1\n    prevent-moving-into-unloaded-chunks:\
        \ false\n    max-auto-save-chunks-per-tick: 24\n    falling-block-height-nerf:\
        \ 0\n    tnt-entity-height-nerf: 0\n    filter-nbt-data-from-spawn-eggs-and-related:\
        \ true\n    max-entity-collisions: 8\n    disable-creeper-lingering-effect:\
        \ false\n    duplicate-uuid-resolver: saferegen\n    duplicate-uuid-saferegen-delete-range:\
        \ 32\n    prevent-tnt-from-moving-in-water: false\n    disable-thunder: false\n\
        \    skeleton-horse-thunder-spawn-chance: 0.01\n    disable-ice-and-snow:\
        \ false\n    count-all-mobs-for-spawning: false\n    keep-spawn-loaded-range:\
        \ 10\n    keep-spawn-loaded: true\n    auto-save-interval: -1\n    armor-stands-do-collision-entity-lookups:\
        \ true\n    non-player-arrow-despawn-rate: -1\n    creative-arrow-despawn-rate:\
        \ -1\n    nether-ceiling-void-damage-height: 0\n    grass-spread-tick-rate:\
        \ 1\n    water-over-lava-flow-speed: 5\n    bed-search-radius: 1\n    fix-zero-tick-instant-grow-farms:\
        \ true\n    use-faster-eigencraft-redstone: false\n    allow-non-player-entities-on-scoreboards:\
        \ false\n    disable-explosion-knockback: false\n    container-update-tick-rate:\
        \ 1\n    parrots-are-unaffected-by-player-movement: false\n    armor-stands-tick:\
        \ true\n    spawner-nerfed-mobs-should-jump: false\n    entities-target-with-follow-range:\
        \ false\n    allow-leashing-undead-horse: false\n    baby-zombie-movement-modifier:\
        \ 0.5\n    mob-spawner-tick-rate: 1\n    all-chunks-are-slime-chunks: false\n\
        \    game-mechanics:\n      scan-for-legacy-ender-dragon: true\n      disable-pillager-patrols:\
        \ false\n      disable-relative-projectile-velocity: false\n      disable-chest-cat-detection:\
        \ false\n      shield-blocking-delay: 5\n      disable-end-credits: false\n\
        \      disable-player-crits: false\n      disable-sprint-interruption-on-attack:\
        \ false\n      disable-unloaded-chunk-enderpearl-exploit: true\n    max-growth-height:\n\
        \      cactus: 3\n      reeds: 3\n    fishing-time-range:\n      MinimumTicks:\
        \ 100\n      MaximumTicks: 600\n    despawn-ranges:\n      soft: 32\n    \
        \  hard: 128\n    lightning-strike-distance-limit:\n      sound: -1\n    \
        \  impact-sound: -1\n      flash: -1\n    frosted-ice:\n      enabled: true\n\
        \      delay:\n        min: 20\n        max: 40\n    lootables:\n      auto-replenish:\
        \ false\n      restrict-player-reloot: true\n      reset-seed-on-fill: true\n\
        \      max-refills: -1\n      refresh-min: 12h\n      refresh-max: 2d\n  \
        \  alt-item-despawn-rate:\n      enabled: false\n      items:\n        COBBLESTONE:\
        \ 300\n    hopper:\n      cooldown-when-full: true\n      disable-move-event:\
        \ false\n    anti-xray:\n      enabled: false\n      engine-mode: 1\n    \
        \  chunk-edge-mode: 2\n      max-chunk-section-index: 3\n      update-radius:\
        \ 2\n      hidden-blocks:\n      - gold_ore\n      - iron_ore\n      - coal_ore\n\
        \      - lapis_ore\n      - mossy_cobblestone\n      - obsidian\n      - chest\n\
        \      - diamond_ore\n      - redstone_ore\n      - clay\n      - emerald_ore\n\
        \      - ender_chest\n      replacement-blocks:\n      - stone\n      - oak_planks\n\
        \    generator-settings:\n      flat-bedrock: false\n    squid-spawn-height:\n\
        \      maximum: 0.0\n<!-- ENDRESPONSE -->\n"
      operationId: _client_servers_{server_id}_files_contents_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - in: query
        name: file
        schema:
          example: /paper.yml
          type: string
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /contents ] Get file contents'
      tags:
      - ' File Manager'
  /client/servers/{server_id}/files/copy:
    post:
      deprecated: false
      description: 'Copies the specified file


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_files_copy_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              location: /server.properties
            schema:
              allOf:
              - $ref: '#/components/schemas/copyCopyfileRequest'
              - example:
                  location: /server.properties
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /copy ] Copy file'
      tags:
      - ' File Manager'
  /client/servers/{server_id}/files/create-folder:
    post:
      deprecated: false
      description: 'Creates the specified folder in the specified directory


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_files_create-folder_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              name: worlds
              root: /maps
            schema:
              allOf:
              - $ref: '#/components/schemas/create-folderCreatefolderRequest'
              - example:
                  name: worlds
                  root: /maps
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /create-folder ] Create folder'
      tags:
      - ' File Manager'
  /client/servers/{server_id}/files/decompress:
    post:
      deprecated: false
      description: 'Decompresses the selected file


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_files_decompress_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              file: archive-2020-08-23T220655Z.tar.gz
              root: /
            schema:
              allOf:
              - $ref: '#/components/schemas/decompressDecompressfileRequest'
              - example:
                  file: archive-2020-08-23T220655Z.tar.gz
                  root: /
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /decompress ] Decompress file'
      tags:
      - ' File Manager'
  /client/servers/{server_id}/files/delete:
    post:
      deprecated: false
      description: 'Deletes the specified file(s) or folder(s)


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_files_delete_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              files:
              - worlds
              root: /maps
            schema:
              allOf:
              - $ref: '#/components/schemas/deleteDeletefileRequest'
              - example:
                  files:
                  - worlds
                  root: /maps
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /delete] Delete file'
      tags:
      - ' File Manager'
  /client/servers/{server_id}/files/download:
    get:
      deprecated: false
      description: "Generates a one-time link to download the specified file\n\n##\
        \ Available parameters\n| Parameter | Description                  |\n|-----------|------------------------------|\n\
        | file      | URL encoded path to the desired file |\n\n<!-- RESPONSE 200\
        \ -->\n{\n  \"object\": \"signed_url\",\n  \"attributes\": {\n    \"url\"\
        : \"https:\\/\\/pterodactyl.file.properties:8080\\/download\\/file?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImp0aSI6IjdkYzAxNzVjODU4MTE5MDRlMjJjNTcxNjBhMjkwMjgwZGFjMDMzM2I2ZmJhMTE3YTI4YjdhMDM5Y2U1OTg0YzcifQ.eyJpc3MiOiJodHRwczpcL1wvcHRlcm9kYWN0eWwuZmlsZS5wcm9wZXJ0aWVzIiwiYXVkIjoiaHR0cHM6XC9cL3B0ZXJvZGFjdHlsLmZpbGUucHJvcGVydGllczo4MDgwIiwianRpIjoiN2RjMDE3NWM4NTgxMTkwNGUyMmM1NzE2MGEyOTAyODBkYWMwMzMzYjZmYmExMTdhMjhiN2EwMzljZTU5ODRjNyIsImlhdCI6MTU5NDY0ODEwMCwibmJmIjoxNTk0NjQ3ODAwLCJleHAiOjE1OTQ2NDkwMDAsImZpbGVfcGF0aCI6IlwvZXVsYS50eHQiLCJzZXJ2ZXJfdXVpZCI6IjFhN2NlOTk3LTI1OWItNDUyZS04YjRlLWNlY2M0NjQxNDJjYSIsInVuaXF1ZV9pZCI6IlNvWUdIamNaNmhKUVlieHUifQ.h4eBmxDXf-4GAwVuAWZFU5QTqd62jw7HTre4aKQGpvw\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_files_download_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - in: query
        name: file
        schema:
          example: /eula.txt
          type: string
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /download ] Download file'
      tags:
      - ' File Manager'
  /client/servers/{server_id}/files/list:
    get:
      deprecated: false
      description: "Lists all files of the server\n\n## Available parameters\n| Parameter\
        \ | Description                         |\n|-----------|-------------------------------------|\n\
        | directory | URL encoded path to list files from |\n\n<!-- RESPONSE 200 -->\n\
        {\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\": \"file_object\"\
        ,\n      \"attributes\": {\n        \"name\": \"cache\",\n        \"mode\"\
        : \"drwxr-xr-x\",\n        \"size\": 4096,\n        \"is_file\": false,\n\
        \        \"is_symlink\": false,\n        \"is_editable\": false,\n       \
        \ \"mimetype\": \"inode\\/directory\",\n        \"created_at\": \"2020-07-13T12:41:55+00:00\"\
        ,\n        \"modified_at\": \"2019-12-25T05:20:36+00:00\"\n      }\n    },\n\
        \    {\n      \"object\": \"file_object\",\n      \"attributes\": {\n    \
        \    \"name\": \"logs\",\n        \"mode\": \"drwxr-xr-x\",\n        \"size\"\
        : 4096,\n        \"is_file\": false,\n        \"is_symlink\": false,\n   \
        \     \"is_editable\": false,\n        \"mimetype\": \"inode\\/directory\"\
        ,\n        \"created_at\": \"2020-07-13T12:42:02+00:00\",\n        \"modified_at\"\
        : \"2020-07-13T12:42:02+00:00\"\n      }\n    },\n    {\n      \"object\"\
        : \"file_object\",\n      \"attributes\": {\n        \"name\": \"plugins\"\
        ,\n        \"mode\": \"drwxr-xr-x\",\n        \"size\": 4096,\n        \"\
        is_file\": false,\n        \"is_symlink\": false,\n        \"is_editable\"\
        : false,\n        \"mimetype\": \"inode\\/directory\",\n        \"created_at\"\
        : \"2020-07-13T12:41:55+00:00\",\n        \"modified_at\": \"2019-12-25T05:21:07+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"file_object\",\n      \"attributes\"\
        : {\n        \"name\": \"world\",\n        \"mode\": \"drwxr-xr-x\",\n   \
        \     \"size\": 4096,\n        \"is_file\": false,\n        \"is_symlink\"\
        : false,\n        \"is_editable\": false,\n        \"mimetype\": \"inode\\\
        /directory\",\n        \"created_at\": \"2020-07-13T13:26:22+00:00\",\n  \
        \      \"modified_at\": \"2020-07-13T13:26:22+00:00\"\n      }\n    },\n \
        \   {\n      \"object\": \"file_object\",\n      \"attributes\": {\n     \
        \   \"name\": \"world_nether\",\n        \"mode\": \"drwxr-xr-x\",\n     \
        \   \"size\": 4096,\n        \"is_file\": false,\n        \"is_symlink\":\
        \ false,\n        \"is_editable\": false,\n        \"mimetype\": \"inode\\\
        /directory\",\n        \"created_at\": \"2020-07-13T12:41:55+00:00\",\n  \
        \      \"modified_at\": \"2019-12-25T05:21:15+00:00\"\n      }\n    },\n \
        \   {\n      \"object\": \"file_object\",\n      \"attributes\": {\n     \
        \   \"name\": \"world_the_end\",\n        \"mode\": \"drwxr-xr-x\",\n    \
        \    \"size\": 4096,\n        \"is_file\": false,\n        \"is_symlink\"\
        : false,\n        \"is_editable\": false,\n        \"mimetype\": \"inode\\\
        /directory\",\n        \"created_at\": \"2020-07-13T12:41:55+00:00\",\n  \
        \      \"modified_at\": \"2019-12-25T05:21:15+00:00\"\n      }\n    },\n \
        \   {\n      \"object\": \"file_object\",\n      \"attributes\": {\n     \
        \   \"name\": \"whitelist.json\",\n        \"mode\": \"-rw-r--r--\",\n   \
        \     \"size\": 2,\n        \"is_file\": true,\n        \"is_symlink\": false,\n\
        \        \"is_editable\": true,\n        \"mimetype\": \"application\\/json\"\
        ,\n        \"created_at\": \"2020-07-13T12:41:55+00:00\",\n        \"modified_at\"\
        : \"2019-12-25T05:21:07+00:00\"\n      }\n    },\n    {\n      \"object\"\
        : \"file_object\",\n      \"attributes\": {\n        \"name\": \"version_history.json\"\
        ,\n        \"mode\": \"-rw-r--r--\",\n        \"size\": 46,\n        \"is_file\"\
        : true,\n        \"is_symlink\": false,\n        \"is_editable\": true,\n\
        \        \"mimetype\": \"application\\/json\",\n        \"created_at\": \"\
        2020-07-13T12:41:55+00:00\",\n        \"modified_at\": \"2019-12-25T05:21:08+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"file_object\",\n      \"attributes\"\
        : {\n        \"name\": \"usercache.json\",\n        \"mode\": \"-rw-r--r--\"\
        ,\n        \"size\": 2,\n        \"is_file\": true,\n        \"is_symlink\"\
        : false,\n        \"is_editable\": true,\n        \"mimetype\": \"application\\\
        /json\",\n        \"created_at\": \"2020-07-13T12:42:03+00:00\",\n       \
        \ \"modified_at\": \"2020-07-13T12:42:03+00:00\"\n      }\n    },\n    {\n\
        \      \"object\": \"file_object\",\n      \"attributes\": {\n        \"name\"\
        : \"spigot.yml\",\n        \"mode\": \"-rw-r--r--\",\n        \"size\": 3567,\n\
        \        \"is_file\": true,\n        \"is_symlink\": false,\n        \"is_editable\"\
        : true,\n        \"mimetype\": \"text\\/plain\",\n        \"created_at\":\
        \ \"2020-07-13T12:41:55+00:00\",\n        \"modified_at\": \"2020-06-12T21:44:42+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"file_object\",\n      \"attributes\"\
        : {\n        \"name\": \"server.properties\",\n        \"mode\": \"-rw-r--r--\"\
        ,\n        \"size\": 955,\n        \"is_file\": true,\n        \"is_symlink\"\
        : false,\n        \"is_editable\": true,\n        \"mimetype\": \"text\\/plain\"\
        ,\n        \"created_at\": \"2020-07-13T12:41:59+00:00\",\n        \"modified_at\"\
        : \"2020-07-13T12:41:59+00:00\"\n      }\n    },\n    {\n      \"object\"\
        : \"file_object\",\n      \"attributes\": {\n        \"name\": \"server.jar\"\
        ,\n        \"mode\": \"-rw-r--r--\",\n        \"size\": 36175593,\n      \
        \  \"is_file\": true,\n        \"is_symlink\": false,\n        \"is_editable\"\
        : false,\n        \"mimetype\": \"application\\/jar\",\n        \"created_at\"\
        : \"2020-07-13T12:41:55+00:00\",\n        \"modified_at\": \"2020-06-12T22:38:46+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"file_object\",\n      \"attributes\"\
        : {\n        \"name\": \"permissions.yml\",\n        \"mode\": \"-rw-r--r--\"\
        ,\n        \"size\": 0,\n        \"is_file\": true,\n        \"is_symlink\"\
        : false,\n        \"is_editable\": true,\n        \"mimetype\": \"inode\\\
        /x-empty\",\n        \"created_at\": \"2020-07-13T12:41:55+00:00\",\n    \
        \    \"modified_at\": \"2019-12-25T05:21:08+00:00\"\n      }\n    },\n   \
        \ {\n      \"object\": \"file_object\",\n      \"attributes\": {\n       \
        \ \"name\": \"paper.yml\",\n        \"mode\": \"-rw-r--r--\",\n        \"\
        size\": 5310,\n        \"is_file\": true,\n        \"is_symlink\": false,\n\
        \        \"is_editable\": true,\n        \"mimetype\": \"text\\/plain\",\n\
        \        \"created_at\": \"2020-07-13T12:41:55+00:00\",\n        \"modified_at\"\
        : \"2020-06-12T21:44:42+00:00\"\n      }\n    },\n    {\n      \"object\"\
        : \"file_object\",\n      \"attributes\": {\n        \"name\": \"ops.json\"\
        ,\n        \"mode\": \"-rw-r--r--\",\n        \"size\": 2,\n        \"is_file\"\
        : true,\n        \"is_symlink\": false,\n        \"is_editable\": true,\n\
        \        \"mimetype\": \"application\\/json\",\n        \"created_at\": \"\
        2020-07-13T12:42:03+00:00\",\n        \"modified_at\": \"2020-07-13T12:42:03+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"file_object\",\n      \"attributes\"\
        : {\n        \"name\": \"hs_err_pid25.log\",\n        \"mode\": \"-rw-r--r--\"\
        ,\n        \"size\": 57099,\n        \"is_file\": true,\n        \"is_symlink\"\
        : false,\n        \"is_editable\": true,\n        \"mimetype\": \"text\\/plain\"\
        ,\n        \"created_at\": \"2020-07-13T12:41:55+00:00\",\n        \"modified_at\"\
        : \"2020-06-12T20:36:55+00:00\"\n      }\n    },\n    {\n      \"object\"\
        : \"file_object\",\n      \"attributes\": {\n        \"name\": \"help.yml\"\
        ,\n        \"mode\": \"-rw-r--r--\",\n        \"size\": 2576,\n        \"\
        is_file\": true,\n        \"is_symlink\": false,\n        \"is_editable\"\
        : true,\n        \"mimetype\": \"text\\/plain\",\n        \"created_at\":\
        \ \"2020-07-13T12:41:55+00:00\",\n        \"modified_at\": \"2019-12-25T05:21:07+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"file_object\",\n      \"attributes\"\
        : {\n        \"name\": \"eula.txt\",\n        \"mode\": \"-rw-r--r--\",\n\
        \        \"size\": 250,\n        \"is_file\": true,\n        \"is_symlink\"\
        : false,\n        \"is_editable\": true,\n        \"mimetype\": \"text\\/plain\"\
        ,\n        \"created_at\": \"2020-07-13T12:41:55+00:00\",\n        \"modified_at\"\
        : \"2019-12-25T05:20:57+00:00\"\n      }\n    },\n    {\n      \"object\"\
        : \"file_object\",\n      \"attributes\": {\n        \"name\": \"commands.yml\"\
        ,\n        \"mode\": \"-rw-r--r--\",\n        \"size\": 598,\n        \"is_file\"\
        : true,\n        \"is_symlink\": false,\n        \"is_editable\": true,\n\
        \        \"mimetype\": \"text\\/plain\",\n        \"created_at\": \"2020-07-13T12:41:55+00:00\"\
        ,\n        \"modified_at\": \"2020-06-12T21:44:36+00:00\"\n      }\n    },\n\
        \    {\n      \"object\": \"file_object\",\n      \"attributes\": {\n    \
        \    \"name\": \"bukkit.yml\",\n        \"mode\": \"-rw-r--r--\",\n      \
        \  \"size\": 1053,\n        \"is_file\": true,\n        \"is_symlink\": false,\n\
        \        \"is_editable\": true,\n        \"mimetype\": \"text\\/plain\",\n\
        \        \"created_at\": \"2020-07-13T12:41:55+00:00\",\n        \"modified_at\"\
        : \"2020-06-12T21:44:36+00:00\"\n      }\n    },\n    {\n      \"object\"\
        : \"file_object\",\n      \"attributes\": {\n        \"name\": \"banned-players.json\"\
        ,\n        \"mode\": \"-rw-r--r--\",\n        \"size\": 2,\n        \"is_file\"\
        : true,\n        \"is_symlink\": false,\n        \"is_editable\": true,\n\
        \        \"mimetype\": \"application\\/json\",\n        \"created_at\": \"\
        2020-07-13T12:42:03+00:00\",\n        \"modified_at\": \"2020-07-13T12:42:03+00:00\"\
        \n      }\n    },\n    {\n      \"object\": \"file_object\",\n      \"attributes\"\
        : {\n        \"name\": \"banned-ips.json\",\n        \"mode\": \"-rw-r--r--\"\
        ,\n        \"size\": 2,\n        \"is_file\": true,\n        \"is_symlink\"\
        : false,\n        \"is_editable\": true,\n        \"mimetype\": \"application\\\
        /json\",\n        \"created_at\": \"2020-07-13T12:42:03+00:00\",\n       \
        \ \"modified_at\": \"2020-07-13T12:42:03+00:00\"\n      }\n    }\n  ]\n}\n\
        <!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_files_list_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - in: query
        name: directory
        schema:
          example: /cache
          type: string
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /list ] List files'
      tags:
      - ' File Manager'
  /client/servers/{server_id}/files/rename:
    put:
      deprecated: false
      description: 'Renames the specified file(s) or folder(s)


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_files_rename_put
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              files:
              - from: data
                to: abc
              root: /
            schema:
              allOf:
              - $ref: '#/components/schemas/renameRenamefileRequest'
              - example:
                  files:
                  - from: data
                    to: abc
                  root: /
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /rename ] Rename file'
      tags:
      - ' File Manager'
  /client/servers/{server_id}/files/upload:
    get:
      deprecated: false
      description: "Returns a signed URL used to upload files to the server using\
        \ POST\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"signed_url\",\n  \"attributes\"\
        : {\n    \"url\": \"https:\\/\\/pterodactyl.file.properties:8080\\/upload\\\
        /file?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImp0aSI6IjdkYzAxNzVjODU4MTE5MDRlMjJjNTcxNjBhMjkwMjgwZGFjMDMzM2I2ZmJhMTE3YTI4YjdhMDM5Y2U1OTg0YzcifQ.eyJpc3MiOiJodHRwczpcL1wvcHRlcm9kYWN0eWwuZmlsZS5wcm9wZXJ0aWVzIiwiYXVkIjoiaHR0cHM6XC9cL3B0ZXJvZGFjdHlsLmZpbGUucHJvcGVydGllczo4MDgwIiwianRpIjoiN2RjMDE3NWM4NTgxMTkwNGUyMmM1NzE2MGEyOTAyODBkYWMwMzMzYjZmYmExMTdhMjhiN2EwMzljZTU5ODRjNyIsImlhdCI6MTU5ODIyMTMyMSwibmJmIjoxNTk4MjIxMDIxLCJleHAiOjE1OTgyMjIyMjEsInNlcnZlcl91dWlkIjoiMWE3Y2U5OTctMjU5Yi00NTJlLThiNGUtY2VjYzQ2NDE0MmNhIiwidW5pcXVlX2lkIjoiNmM2OFdkSkJTVzg0RlBsUiJ9.GJ5681K9ehhPCcXevyxw-RO1jhv4UWg5T8b_P7r6s8Q\"\
        \n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_files_upload_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /upload ] Upload file'
      tags:
      - ' File Manager'
  /client/servers/{server_id}/files/write:
    post:
      deprecated: false
      description: 'Writes data to the specified file


        ## Available parameters

        | Parameter | Description                          |

        |-----------|--------------------------------------|

        | file      | URL encoded path to the desired file |


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_files_write_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - in: query
        name: file
        schema:
          example: /eula.txt
          type: string
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            example: '#By changing the setting below to TRUE you are indicating your
              agreement to our EULA (https://account.mojang.com/documents/minecraft_eula).

              #You also agree that tacos are tasty, and the best food in the world.

              #Wed Dec 25 05:20:41 UTC 2019

              eula=true

              '
            schema:
              example: '#By changing the setting below to TRUE you are indicating
                your agreement to our EULA (https://account.mojang.com/documents/minecraft_eula).

                #You also agree that tacos are tasty, and the best food in the world.

                #Wed Dec 25 05:20:41 UTC 2019

                eula=true

                '
              type: string
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /write ] Write file'
      tags:
      - ' File Manager'
  /client/servers/{server_id}/network/allocations:
    get:
      deprecated: false
      description: "Retrieves the network information for the specified server\n\n\
        <!-- RESPONSE 200 -->\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n\
        \      \"object\": \"allocation\",\n      \"attributes\": {\n        \"id\"\
        : 1,\n        \"ip\": \"45.86.168.218\",\n        \"ip_alias\": null,\n  \
        \      \"port\": 25565,\n        \"notes\": null,\n        \"is_default\"\
        : true\n      }\n    },\n    {\n      \"object\": \"allocation\",\n      \"\
        attributes\": {\n        \"id\": 2,\n        \"ip\": \"45.86.168.218\",\n\
        \        \"ip_alias\": null,\n        \"port\": 25566,\n        \"notes\"\
        : \"Votifier\",\n        \"is_default\": false\n      }\n    }\n  ]\n}\n<!--\
        \ ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_network_allocations_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id013
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /allocations ] List allocations'
      tags:
      - ' Network'
    post:
      deprecated: false
      description: "Automatically assigns a new allocation if auto-assign is enabled\
        \ on the instance\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"allocation\"\
        ,\n  \"attributes\": {\n    \"id\": 6,\n    \"ip\": \"45.86.168.218\",\n \
        \   \"ip_alias\": null,\n    \"port\": 25570,\n    \"notes\": null,\n    \"\
        is_default\": false\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_network_allocations_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id013
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /allocations ] Assign allocation'
      tags:
      - ' Network'
  /client/servers/{server_id}/network/allocations/{allocation_id}:
    delete:
      deprecated: false
      description: "Deletes the specified non-primary allocation\n\n<!-- RESPONSE\
        \ 204 -->\n// Successful\n<!-- ENDRESPONSE -->\n\n<!-- RESPONSE 400 -->\n\
        {\n  \"errors\": [\n    {\n      \"code\": \"DisplayException\",\n      \"\
        status\": \"400\",\n      \"detail\": \"Cannot delete the primary allocation\
        \ for a server.\"\n    }\n  ]\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_network_allocations_{allocation_id}_delete
      parameters:
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id014
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - &id015
        description: ''
        in: path
        name: allocation_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /allocations/{allocation} ] Unassign allocation'
      tags:
      - ' Network'
    post:
      deprecated: false
      description: "Sets a note for the allocation\n\n# Fields\n| Name  | Required?\
        \ | Type   | Description         | Rules |\n|-------|-----------|--------|---------------------|-------|\n\
        | notes | required  | string | Note for allocation |       |\n\n<!-- RESPONSE\
        \ 200 -->\n{\n  \"object\": \"allocation\",\n  \"attributes\": {\n    \"id\"\
        : 2,\n    \"ip\": \"45.86.168.218\",\n    \"ip_alias\": null,\n    \"port\"\
        : 25566,\n    \"notes\": \"Votifier\",\n    \"is_default\": false\n  }\n}\n\
        <!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_network_allocations_{allocation_id}_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id014
      - *id015
      requestBody:
        content:
          application/json:
            example:
              notes: Votifier
            schema:
              allOf:
              - $ref: '#/components/schemas/allocationsallocationSetallocationnoteRequest'
              - example:
                  notes: Votifier
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /allocations/{allocation} ] Set allocation note'
      tags:
      - ' Network'
  /client/servers/{server_id}/network/allocations/{allocation_id}/primary:
    post:
      deprecated: false
      description: "Sets the primary allocation\n\n<!-- RESPONSE 200 -->\n{\n  \"\
        object\": \"allocation\",\n  \"attributes\": {\n    \"id\": 2,\n    \"ip\"\
        : \"45.86.168.218\",\n    \"ip_alias\": null,\n    \"port\": 25566,\n    \"\
        notes\": \"Votifier\",\n    \"is_default\": true\n  }\n}\n<!-- ENDRESPONSE\
        \ -->"
      operationId: _client_servers_{server_id}_network_allocations_{allocation_id}_primary_post
      parameters:
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - description: ''
        in: path
        name: allocation_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /allocations/{allocation}/primary ] Set primary allocation'
      tags:
      - ' Network'
  /client/servers/{server_id}/power:
    post:
      deprecated: false
      description: 'Sends a power signal to the server


        ## Fields

        | Name   | Required? | Type   | Description          | Rules |

        |--------|-----------|--------|----------------------|-------|

        | signal | required  | string | Power signal to send |       |


        ## Signals

        | Signal  | Description                      |

        |---------|----------------------------------|

        | start   | Starts the server                |

        | stop    | Gracefully stops the server      |

        | restart | Stops then starts the server     |

        | kill    | Instantly end the server process |



        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_power_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              signal: start
            schema:
              allOf:
              - $ref: '#/components/schemas/powerChangepowerstateRequest'
              - example:
                  signal: start
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /power ] Change power state'
      tags:
      - ' Server'
  /client/servers/{server_id}/resources:
    get:
      deprecated: false
      description: "Retrieves resource utilization of the specified server\n\n<!--\
        \ RESPONSE 200 -->\n{\n  \"object\": \"stats\",\n  \"attributes\": {\n   \
        \ \"current_state\": \"starting\",\n    \"is_suspended\": false,\n    \"resources\"\
        : {\n      \"memory_bytes\": 588701696,\n      \"cpu_absolute\": 0,\n    \
        \  \"disk_bytes\": 130156361,\n      \"network_rx_bytes\": 694220,\n     \
        \ \"network_tx_bytes\": 337090\n    }\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_resources_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /resources ] Resource usage'
      tags:
      - ' Server'
  /client/servers/{server_id}/schedules:
    get:
      deprecated: false
      description: "Lists all schedules added to the server\n\n<!-- RESPONSE 200 -->\n\
        {\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\": \"server_schedule\"\
        ,\n      \"attributes\": {\n        \"id\": 1,\n        \"name\": \"Daily\
        \ Reboot\",\n        \"cron\": {\n          \"day_of_week\": \"*\",\n    \
        \      \"day_of_month\": \"*\",\n          \"hour\": \"0\",\n          \"\
        minute\": \"0\"\n        },\n        \"is_active\": true,\n        \"is_processing\"\
        : false,\n        \"last_run_at\": null,\n        \"next_run_at\": \"2020-06-13T00:00:00+01:00\"\
        ,\n        \"created_at\": \"2020-06-12T23:50:14+01:00\",\n        \"updated_at\"\
        : \"2020-06-12T23:53:07+01:00\",\n        \"relationships\": {\n         \
        \ \"tasks\": {\n            \"object\": \"list\",\n            \"data\": [\n\
        \              {\n                \"object\": \"schedule_task\",\n       \
        \         \"attributes\": {\n                  \"id\": 1,\n              \
        \    \"sequence_id\": 1,\n                  \"action\": \"command\",\n   \
        \               \"payload\": \"say Rebooting...\",\n                  \"time_offset\"\
        : 0,\n                  \"is_queued\": false,\n                  \"created_at\"\
        : \"2020-06-12T23:50:46+01:00\",\n                  \"updated_at\": \"2020-06-12T23:52:54+01:00\"\
        \n                }\n              },\n              {\n                \"\
        object\": \"schedule_task\",\n                \"attributes\": {\n        \
        \          \"id\": 2,\n                  \"sequence_id\": 2,\n           \
        \       \"action\": \"power\",\n                  \"payload\": \"restart\"\
        ,\n                  \"time_offset\": 5,\n                  \"is_queued\"\
        : false,\n                  \"created_at\": \"2020-06-12T23:53:07+01:00\"\
        ,\n                  \"updated_at\": \"2020-06-12T23:53:07+01:00\"\n     \
        \           }\n              }\n            ]\n          }\n        }\n  \
        \    }\n    }\n  ]\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_schedules_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id016
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List schedules'
      tags:
      - ' Schedules'
    post:
      deprecated: false
      description: "Creates a new schedule\n\n## Fields\n| Name         | Required?\
        \ | Type    | Description                              | Rules |\n|--------------|-----------|---------|------------------------------------------|-------|\n\
        | name         | required  | string  | Friendly name for the schedule    \
        \       | min:1 |\n| is_active    | optional  | boolean | Specifies whether\
        \ the schedule is active |       |\n| minute       | required  | string  |\
        \ Cron minute syntax                       |       |\n| hour         | required\
        \  | string  | Cron hour syntax                         |       |\n| day\\\
        _of\\_week  | required  | string  | Cron day-of-month syntax             \
        \    |       |\n| day\\_of\\_month | required  | string  | Cron day-of-month\
        \ syntax                 |       |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\"\
        : \"server_schedule\",\n  \"attributes\": {\n    \"id\": 4,\n    \"name\"\
        : \"Minute Hello\",\n    \"cron\": {\n      \"day_of_week\": \"*\",\n    \
        \  \"day_of_month\": \"*\",\n      \"hour\": \"*\",\n      \"minute\": \"\
        *\"\n    },\n    \"is_active\": true,\n    \"is_processing\": false,\n   \
        \ \"last_run_at\": null,\n    \"next_run_at\": \"2020-06-13T15:17:00+01:00\"\
        ,\n    \"created_at\": \"2020-06-13T15:16:45+01:00\",\n    \"updated_at\"\
        : \"2020-06-13T15:16:45+01:00\",\n    \"relationships\": {\n      \"tasks\"\
        : {\n        \"object\": \"list\",\n        \"data\": []\n      }\n    }\n\
        \  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_schedules_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id016
      requestBody:
        content:
          application/json:
            example:
              day_of_month: '*'
              day_of_week: '*'
              hour: '*'
              is_active: true
              minute: '*'
              name: Minute Hello
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatescheduleRequest'
              - example:
                  day_of_month: '*'
                  day_of_week: '*'
                  hour: '*'
                  is_active: true
                  minute: '*'
                  name: Minute Hello
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Create schedule'
      tags:
      - ' Schedules'
  /client/servers/{server_id}/schedules/{schedule_id}:
    delete:
      deprecated: false
      description: 'Deletes the specified schedule


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_schedules_{schedule_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id017
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - &id018
        description: ''
        in: path
        name: schedule_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{schedule} ] Delete schedule'
      tags:
      - ' Schedules'
    get:
      deprecated: false
      description: "Retrieves specific schedule\n\n<!-- RESPONSE 200 -->\n{\n  \"\
        object\": \"server_schedule\",\n  \"attributes\": {\n    \"id\": 1,\n    \"\
        name\": \"Daily Reboot\",\n    \"cron\": {\n      \"day_of_week\": \"*\",\n\
        \      \"day_of_month\": \"*\",\n      \"hour\": \"0\",\n      \"minute\"\
        : \"0\"\n    },\n    \"is_active\": true,\n    \"is_processing\": false,\n\
        \    \"last_run_at\": null,\n    \"next_run_at\": \"2020-06-13T00:00:00+01:00\"\
        ,\n    \"created_at\": \"2020-06-12T23:50:14+01:00\",\n    \"updated_at\"\
        : \"2020-06-12T23:53:07+01:00\",\n    \"relationships\": {\n      \"tasks\"\
        : {\n        \"object\": \"list\",\n        \"data\": [\n          {\n   \
        \         \"object\": \"schedule_task\",\n            \"attributes\": {\n\
        \              \"id\": 1,\n              \"sequence_id\": 1,\n           \
        \   \"action\": \"command\",\n              \"payload\": \"say Rebooting...\"\
        ,\n              \"time_offset\": 0,\n              \"is_queued\": false,\n\
        \              \"created_at\": \"2020-06-12T23:50:46+01:00\",\n          \
        \    \"updated_at\": \"2020-06-12T23:52:54+01:00\"\n            }\n      \
        \    },\n          {\n            \"object\": \"schedule_task\",\n       \
        \     \"attributes\": {\n              \"id\": 2,\n              \"sequence_id\"\
        : 2,\n              \"action\": \"power\",\n              \"payload\": \"\
        restart\",\n              \"time_offset\": 5,\n              \"is_queued\"\
        : false,\n              \"created_at\": \"2020-06-12T23:53:07+01:00\",\n \
        \             \"updated_at\": \"2020-06-12T23:53:07+01:00\"\n            }\n\
        \          }\n        ]\n      }\n    }\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_schedules_{schedule_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id017
      - *id018
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{schedule} ] Schedule details'
      tags:
      - ' Schedules'
    post:
      deprecated: false
      description: "Updates the specified schedule\n\n## Fields\n| Name         |\
        \ Required? | Type    | Description                              | Rules |\n\
        |--------------|-----------|---------|------------------------------------------|-------|\n\
        | name         | required  | string  | Friendly name for the schedule    \
        \       | min:1 |\n| is_active    | optional  | boolean | Specifies whether\
        \ the schedule is active |       |\n| minute       | required  | string  |\
        \ Cron minute syntax                       |       |\n| hour         | required\
        \  | string  | Cron hour syntax                         |       |\n| day_of_week\
        \  | required  | string  | Cron day-of-month syntax                 |    \
        \   |\n| day_of_month | required  | string  | Cron day-of-month syntax   \
        \              |       |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"server_schedule\"\
        ,\n  \"attributes\": {\n    \"id\": 2,\n    \"name\": \"Hourly Hello\",\n\
        \    \"cron\": {\n      \"day_of_week\": \"*\",\n      \"day_of_month\": \"\
        *\",\n      \"hour\": \"*\",\n      \"minute\": \"0\"\n    },\n    \"is_active\"\
        : false,\n    \"is_processing\": false,\n    \"last_run_at\": null,\n    \"\
        next_run_at\": \"2020-06-13T16:00:00+01:00\",\n    \"created_at\": \"2020-06-13T15:05:25+01:00\"\
        ,\n    \"updated_at\": \"2020-06-13T15:14:07+01:00\",\n    \"relationships\"\
        : {\n      \"tasks\": {\n        \"object\": \"list\",\n        \"data\":\
        \ []\n      }\n    }\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_schedules_{schedule_id}_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id017
      - *id018
      requestBody:
        content:
          application/json:
            example:
              day_of_month: '*'
              day_of_week: '*'
              hour: '*'
              minute: '0'
              name: Hourly Hello
            schema:
              allOf:
              - $ref: '#/components/schemas/scheduleUpdatescheduleRequest'
              - example:
                  day_of_month: '*'
                  day_of_week: '*'
                  hour: '*'
                  minute: '0'
                  name: Hourly Hello
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{schedule} ] Update schedule'
      tags:
      - ' Schedules'
  /client/servers/{server_id}/schedules/{schedule_id}/tasks:
    post:
      deprecated: false
      description: "Creates a new task on the specified schedule\n\n## Fields\n| Name\
        \        | Required? | Type   | Description           | Rules |\n|-------------|-----------|--------|-----------------------|-------|\n\
        | action      | required  | string | Type of action to use |       |\n| payload\
        \     | required  | string | Payload to send       |       |\n| time_offset\
        \ | required  | string | Offset in seconds     |       |\n\n# Actions\n| Action\
        \  | Description                                           |\n|---------|-------------------------------------------------------|\n\
        | command | Sends power action                                    |\n| power\
        \   | Changes power signal - Check power route for payloads |\n| backup  |\
        \ Creates a backup                                      |\n\n<!-- RESPONSE\
        \ 200 -->\n{\n  \"object\": \"schedule_task\",\n  \"attributes\": {\n    \"\
        id\": 6,\n    \"sequence_id\": 1,\n    \"action\": \"command\",\n    \"payload\"\
        : \"say Hello World\",\n    \"time_offset\": 0,\n    \"is_queued\": false,\n\
        \    \"created_at\": \"2020-10-29T01:09:03+00:00\",\n    \"updated_at\": \"\
        2020-10-29T01:09:03+00:00\"\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_schedules_{schedule_id}_tasks_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - description: ''
        in: path
        name: schedule_id
        required: true
        schema:
          type: int
      requestBody:
        content:
          application/json:
            example:
              action: command
              payload: say Hello World
              time_offset: '0'
            schema:
              allOf:
              - $ref: '#/components/schemas/scheduletasksCreatetaskRequest'
              - example:
                  action: command
                  payload: say Hello World
                  time_offset: '0'
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{schedule}/tasks ] Create task'
      tags:
      - ' Schedules'
  /client/servers/{server_id}/schedules/{schedule_id}/tasks/{task_id}:
    delete:
      deprecated: false
      description: 'Deletes the specified task


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_schedules_{schedule_id}_tasks_{task_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id019
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - &id020
        description: ''
        in: path
        name: schedule_id
        required: true
        schema:
          type: int
      - &id021
        description: ''
        in: path
        name: task_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{schedule}/tasks/{task} ] Delete  task'
      tags:
      - ' Schedules'
    post:
      deprecated: false
      description: "Updates the specified task\n\n## Fields\n| Name        | Required?\
        \ | Type   | Description           | Rules |\n|-------------|-----------|--------|-----------------------|-------|\n\
        | action      | required  | string | Type of action to use |       |\n| payload\
        \     | required  | string | Payload to send       |       |\n| time_offset\
        \ | required  | string | Offset in seconds     |       |\n\n# Actions\n| Action\
        \  | Description                                           |\n|---------|-------------------------------------------------------|\n\
        | command | Sends power action                                    |\n| power\
        \   | Changes power signal - Check power route for payloads |\n| backup  |\
        \ Creates a backup                                      |\n\n<!-- RESPONSE\
        \ 200 -->\n{\n  \"object\": \"schedule_task\",\n  \"attributes\": {\n    \"\
        id\": 6,\n    \"sequence_id\": 1,\n    \"action\": \"command\",\n    \"payload\"\
        : \"say Updated Statement!?\",\n    \"time_offset\": 0,\n    \"is_queued\"\
        : false,\n    \"created_at\": \"2020-10-29T01:09:03+00:00\",\n    \"updated_at\"\
        : \"2020-10-29T01:10:30+00:00\"\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_schedules_{schedule_id}_tasks_{task_id}_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id019
      - *id020
      - *id021
      requestBody:
        content:
          application/json:
            example:
              action: command
              payload: say Updated Statement!?
              time_offset: '0'
            schema:
              allOf:
              - $ref: '#/components/schemas/scheduletaskstaskUpdatetaskRequest'
              - example:
                  action: command
                  payload: say Updated Statement!?
                  time_offset: '0'
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{schedule}/tasks/{task} ] Update task'
      tags:
      - ' Schedules'
  /client/servers/{server_id}/settings/reinstall:
    post:
      deprecated: false
      description: 'Renames the server


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_settings_reinstall_post
      parameters:
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /reinstall ] Reinstall server'
      tags:
      - ' Settings'
  /client/servers/{server_id}/settings/rename:
    post:
      deprecated: false
      description: 'Renames the server


        # Fields

        | Name | Required? | Type   | Description             | Rules |

        |------|-----------|--------|-------------------------|-------|

        | name | required  | string | New name for the server |       |


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_settings_rename_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              name: Gaming
            schema:
              allOf:
              - $ref: '#/components/schemas/renameRenameserverRequest'
              - example:
                  name: Gaming
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /rename ] Rename server'
      tags:
      - ' Settings'
  /client/servers/{server_id}/startup:
    get:
      deprecated: false
      description: "Lists all variables on the server\n\n<!-- RESPONSE 200 -->\n{\n\
        \  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\": \"egg_variable\"\
        ,\n      \"attributes\": {\n        \"name\": \"Server Jar File\",\n     \
        \   \"description\": \"The name of the server jarfile to run the server with.\"\
        ,\n        \"env_variable\": \"SERVER_JARFILE\",\n        \"default_value\"\
        : \"server.jar\",\n        \"server_value\": \"server.jar\",\n        \"is_editable\"\
        : true,\n        \"rules\": \"required|regex:\\/^([\\\\w\\\\d._-]+)(\\\\.jar)$\\\
        /\"\n      }\n    },\n    {\n      \"object\": \"egg_variable\",\n      \"\
        attributes\": {\n        \"name\": \"Server Version\",\n        \"description\"\
        : \"The version of Minecraft Vanilla to install. Use \\\"latest\\\" to install\
        \ the latest version.\",\n        \"env_variable\": \"VANILLA_VERSION\",\n\
        \        \"default_value\": \"latest\",\n        \"server_value\": \"latest\"\
        ,\n        \"is_editable\": true,\n        \"rules\": \"required|string|between:3,15\"\
        \n      }\n    }\n  ],\n  \"meta\": {\n    \"startup_command\": \"java -Xms128M\
        \ -Xmx512M -jar server.jar\",\n    \"raw_startup_command\": \"java -Xms128M\
        \ -Xmx\\{\\{ SERVER_MEMORY }}M -jar {\\{ SERVER_JARFILE }}\"\n  }\n}\n<!--\
        \ ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_startup_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List Variables'
      tags:
      - ' Startup'
  /client/servers/{server_id}/startup/variable:
    put:
      deprecated: false
      description: "Updates the specified variable\n\n<!-- RESPONSE 200 -->\n{\n \
        \ \"object\": \"egg_variable\",\n  \"attributes\": {\n    \"name\": \"Server\
        \ Jar File\",\n    \"description\": \"The name of the server jarfile to run\
        \ the server with.\",\n    \"env_variable\": \"SERVER_JARFILE\",\n    \"default_value\"\
        : \"server.jar\",\n    \"server_value\": \"server.jar\",\n    \"is_editable\"\
        : true,\n    \"rules\": \"required|regex:\\/^([\\\\w\\\\d._-]+)(\\\\.jar)$\\\
        /\"\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_startup_variable_put
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              key: SERVER_JARFILE
              value: server.jar
            schema:
              allOf:
              - $ref: '#/components/schemas/variableUpdateVariableRequest'
              - example:
                  key: SERVER_JARFILE
                  value: server.jar
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /variable ] Update Variable'
      tags:
      - ' Startup'
  /client/servers/{server_id}/users:
    get:
      deprecated: false
      description: "Lists all users added to the server, along with details about\
        \ them and their permissions\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"\
        list\",\n  \"data\": [\n    {\n      \"object\": \"server_subuser\",\n   \
        \   \"attributes\": {\n        \"uuid\": \"73f233ca-99e0-47a9-bd46-efd3296d7ad9\"\
        ,\n        \"username\": \"subuser1uxk\",\n        \"email\": \"subuser1@example.com\"\
        ,\n        \"image\": \"https:\\/\\/gravatar.com\\/avatar\\/c0da5391b64449c1ecbfd4349184377c\"\
        ,\n        \"2fa_enabled\": false,\n        \"created_at\": \"2020-06-12T23:18:43+01:00\"\
        ,\n        \"permissions\": [\n          \"control.console\",\n          \"\
        control.start\",\n          \"control.stop\",\n          \"control.restart\"\
        ,\n          \"user.create\",\n          \"user.update\",\n          \"user.delete\"\
        ,\n          \"user.read\",\n          \"file.create\",\n          \"file.read\"\
        ,\n          \"file.update\",\n          \"file.delete\",\n          \"file.archive\"\
        ,\n          \"file.sftp\",\n          \"backup.create\",\n          \"backup.read\"\
        ,\n          \"backup.delete\",\n          \"backup.update\",\n          \"\
        backup.download\",\n          \"allocation.update\",\n          \"startup.update\"\
        ,\n          \"startup.read\",\n          \"database.create\",\n         \
        \ \"database.read\",\n          \"database.update\",\n          \"database.delete\"\
        ,\n          \"database.view_password\",\n          \"schedule.create\",\n\
        \          \"schedule.read\",\n          \"schedule.update\",\n          \"\
        settings.rename\",\n          \"schedule.delete\",\n          \"settings.reinstall\"\
        ,\n          \"websocket.connect\"\n        ]\n      }\n    },\n    {\n  \
        \    \"object\": \"server_subuser\",\n      \"attributes\": {\n        \"\
        uuid\": \"60a7aec3-e17d-4aa9-abb3-56d944d204b4\",\n        \"username\": \"\
        subuser2jvc\",\n        \"email\": \"subuser2@example.com\",\n        \"image\"\
        : \"https:\\/\\/gravatar.com\\/avatar\\/3bb1c751a8b3488f4a4c70eddfe898d8\"\
        ,\n        \"2fa_enabled\": false,\n        \"created_at\": \"2020-06-12T23:31:41+01:00\"\
        ,\n        \"permissions\": [\n          \"control.console\",\n          \"\
        control.start\",\n          \"websocket.connect\"\n        ]\n      }\n  \
        \  },\n    {\n      \"object\": \"server_subuser\",\n      \"attributes\"\
        : {\n        \"uuid\": \"1287632d-9224-40c0-906e-f543423400bc\",\n       \
        \ \"username\": \"subuser3bvo\",\n        \"email\": \"subuser3@example.com\"\
        ,\n        \"image\": \"https:\\/\\/gravatar.com\\/avatar\\/8b28d32aaa64a1564450d16f71a81f65\"\
        ,\n        \"2fa_enabled\": false,\n        \"created_at\": \"2020-07-13T14:27:46+01:00\"\
        ,\n        \"permissions\": [\n          \"control.console\",\n          \"\
        control.start\",\n          \"websocket.connect\"\n        ]\n      }\n  \
        \  },\n    {\n      \"object\": \"server_subuser\",\n      \"attributes\"\
        : {\n        \"uuid\": \"2fcb6f7e-342a-423a-93a4-6111a237c0c7\",\n       \
        \ \"username\": \"geboc70057d6r\",\n        \"email\": \"geboc70057@djemail.net\"\
        ,\n        \"image\": \"https:\\/\\/gravatar.com\\/avatar\\/354d25d88e2c73b9f8d8e9bb8f1bf15e\"\
        ,\n        \"2fa_enabled\": false,\n        \"created_at\": \"2020-07-13T14:36:44+01:00\"\
        ,\n        \"permissions\": [\n          \"control.console\",\n          \"\
        control.start\",\n          \"websocket.connect\"\n        ]\n      }\n  \
        \  },\n    {\n      \"object\": \"server_subuser\",\n      \"attributes\"\
        : {\n        \"uuid\": \"b20e4e11-550f-4c52-893d-94fc8bc46a06\",\n       \
        \ \"username\": \"testidq\",\n        \"email\": \"test@example.com\",\n \
        \       \"image\": \"https:\\/\\/gravatar.com\\/avatar\\/55502f40dc8b7c769880b10874abc9d0\"\
        ,\n        \"2fa_enabled\": false,\n        \"created_at\": \"2020-07-19T13:48:38+01:00\"\
        ,\n        \"permissions\": [\n          \"control.*\",\n          \"websocket.connect\"\
        \n        ]\n      }\n    }\n  ]\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_users_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id022
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] List Users1'
      tags:
      - ' Users'
    post:
      deprecated: false
      description: "Adds a user to the server\n\n# Fields\n| Name        | Required?\
        \ | Type   | Description                        | Rules |\n|-------------|-----------|--------|------------------------------------|-------|\n\
        | email       | required  | string | Email address of the user          |\
        \       |\n| permissions | required  | object | Permissions that user is permitted\
        \ |       |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"server_subuser\"\
        ,\n  \"attributes\": {\n    \"uuid\": \"60a7aec3-e17d-4aa9-abb3-56d944d204b4\"\
        ,\n    \"username\": \"subuser2jvc\",\n    \"email\": \"subuser2@example.com\"\
        ,\n    \"image\": \"https:\\/\\/gravatar.com\\/avatar\\/3bb1c751a8b3488f4a4c70eddfe898d8\"\
        ,\n    \"2fa_enabled\": false,\n    \"created_at\": \"2020-06-12T23:31:41+01:00\"\
        ,\n    \"permissions\": [\n      \"control.console\",\n      \"control.start\"\
        ,\n      \"websocket.connect\"\n    ]\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_users_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id022
      requestBody:
        content:
          application/json:
            example:
              email: subuser2@example.com
              permissions:
              - control.console
              - control.start
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateUserRequest1'
              - example:
                  email: subuser2@example.com
                  permissions:
                  - control.console
                  - control.start
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ / ] Create User1'
      tags:
      - ' Users'
  /client/servers/{server_id}/users/{user_id}:
    delete:
      deprecated: false
      description: 'Removes the specified user from the server


        <!-- RESPONSE 204 -->

        // Successful

        <!-- ENDRESPONSE -->'
      operationId: _client_servers_{server_id}_users_{user_id}_delete
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - &id023
        description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      - &id024
        description: ''
        in: path
        name: user_id
        required: true
        schema:
          type: int
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{subuser} ] Delete user'
      tags:
      - ' Users'
    get:
      deprecated: false
      description: "Retrieves information about a specific user\n\n<!-- RESPONSE 200\
        \ -->\n{\n  \"object\": \"server_subuser\",\n  \"attributes\": {\n    \"uuid\"\
        : \"60a7aec3-e17d-4aa9-abb3-56d944d204b4\",\n    \"username\": \"subuser2jvc\"\
        ,\n    \"email\": \"subuser2@example.com\",\n    \"image\": \"https:\\/\\\
        /gravatar.com\\/avatar\\/3bb1c751a8b3488f4a4c70eddfe898d8\",\n    \"2fa_enabled\"\
        : false,\n    \"created_at\": \"2020-06-12T23:31:41+01:00\",\n    \"permissions\"\
        : [\n      \"control.console\",\n      \"control.start\",\n      \"websocket.connect\"\
        \n    ]\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_users_{user_id}_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id023
      - *id024
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{subuser} ] User details'
      tags:
      - ' Users'
    post:
      deprecated: false
      description: "Updates the specified user\n\n# Fields\n| Name        | Required?\
        \ | Type   | Description                        | Rules |\n|-------------|-----------|--------|------------------------------------|-------|\n\
        | permissions | required  | object | Permissions that user is permitted |\
        \       |\n\n<!-- RESPONSE 200 -->\n{\n  \"object\": \"server_subuser\",\n\
        \  \"attributes\": {\n    \"uuid\": \"60a7aec3-e17d-4aa9-abb3-56d944d204b4\"\
        ,\n    \"username\": \"subuser2jvc\",\n    \"email\": \"subuser2@example.com\"\
        ,\n    \"image\": \"https:\\/\\/gravatar.com\\/avatar\\/3bb1c751a8b3488f4a4c70eddfe898d8\"\
        ,\n    \"2fa_enabled\": false,\n    \"created_at\": \"2020-06-12T23:31:41+01:00\"\
        ,\n    \"permissions\": [\n      \"control.console\",\n      \"control.start\"\
        ,\n      \"websocket.connect\"\n    ]\n  }\n}\n<!-- ENDRESPONSE -->"
      operationId: _client_servers_{server_id}_users_{user_id}_post
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - *id023
      - *id024
      requestBody:
        content:
          application/json:
            example:
              permissions:
              - control.console
              - control.start
            schema:
              allOf:
              - $ref: '#/components/schemas/subuserUpdateuserRequest'
              - example:
                  permissions:
                  - control.console
                  - control.start
        description: ''
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /{subuser} ] Update user'
      tags:
      - ' Users'
  /client/servers/{server_id}/websocket:
    get:
      deprecated: false
      description: "Generates credentials to establish a websocket\n\n<!-- RESPONSE\
        \ 200 -->\n{\n  \"data\": {\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImp0aSI6Ij...\"\
        ,\n    \"socket\": \"wss:\\/\\/pterodactyl.file.properties:8080\\/api\\/servers\\\
        /{server_id}-259b-452e-8b4e-cecc464142ca\\/ws\"\n  }\n}\n<!-- ENDRESPONSE\
        \ -->\n\n## How to connect\n1. Connect to the websocket address (in this example\
        \ \"wss://pterodactyl.file.properties:8080/api/servers/{server_id}-259b-452e-8b4e-cecc464142ca/ws\"\
        )\n2. Send the token to the websocket like this: `{\"event\":\"auth\",\"args\"\
        :[\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImp0aSI6Ij...\"]}`\n\n* Tokens last\
        \ about 10-15 minutes, and the websocket will notify you once you need to\
        \ send a new token with `{\"event\":\"token expiring\"}` and `{\"event\":\"\
        token expired\"}`\n\n## Things you can send\n* `{\"event\":\"auth\",\"args\"\
        :[\"<token>\"]}` # Authenticate with websocket\n* `{\"event\":\"send stats\"\
        ,\"args\":[null]}` # Request stats\n* `{\"event\":\"send logs\",\"args\":[null]}`\
        \ # Request logs\n* `{\"event\":\"set state\",\"args\":[\"<power-action>\"\
        ]}` # Send power action\n* `{\"event\":\"send command\",\"args\":[\"<command>\"\
        ]}` # Send command\n\n## Things you'll receive\n* `{\"event\":\"auth success\"\
        }` # Upon successful websocket authentication\n* `{\"event\":\"status\",\"\
        args\":[\"offline\"]}` # Status updates of the server\n* `{\"event\":\"console\
        \ output\",\"args\":[\"[14:07:12] [Query Listener #1/INFO]: Query running\
        \ on 0.0.0.0:25565\"]}` # Logs from server\n* `{\"event\":\"stats\",\"args\"\
        :[\"{\\\"memory_bytes\\\":526626816,\\\"memory_limit_bytes\\\":588800000,\\\
        \"cpu_absolute\\\":588.815,\\\"network\\\":{\\\"rx_bytes\\\":1126,\\\"tx_bytes\\\
        \":1126},\\\"state\\\":\\\"stopping\\\",\\\"disk_bytes\\\":128118626}\"]}`\
        \ # Stats from server\n* `{\"event\":\"token expiring\"}` # Token is expiring\
        \ soon so request a new one and send it to the websocket\n* `{\"event\":\"\
        token expired\"}` # Token has expired"
      operationId: _client_servers_{server_id}_websocket_get
      parameters:
      - description: ''
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: ''
        in: path
        name: server_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema: {}
          description: ''
          headers: {}
      security:
      - bearer: []
      servers:
      - url: https://pterodactyl.file.properties/api
        variables: {}
      summary: '[ /websocket ] Console details'
      tags:
      - ' Server'
security: []
servers:
- url: https://example.com/api
  variables: {}
- url: https://example.com/api/client
  variables: {}
tags:
- description: ''
  name: '[ /{server}/databases ] Database Management'
- description: ''
  name: '[ /{nest}/eggs ] Eggs Management'
- description: ''
  name: '[ /users ] Users'
- description: ''
  name: '[ /nodes ] Nodes'
- description: ''
  name: '[ /locations ] Locations'
- description: ''
  name: '[ /servers ] Servers'
- description: ''
  name: '[ /nests ] Nests'
- description: ''
  name: '[ /databases ] Databases'
- description: ''
  name: '[ /files ] File Manager'
- description: ''
  name: '[ /schedules ] Schedules'
- description: ''
  name: '[ /network ] Network'
- description: ''
  name: '[ /backups ] Backups'
- description: ''
  name: '[ /startup ] Startup'
- description: ''
  name: '[ /settings ] Settings'
- description: ''
  name: '[ /account ] Account'
- description: ''
  name: '[ /servers/{server} ] Server'
- description: ''
  name: '[ /{node}/allocations ] Allocations'
- description: ''
  name: '[ /api/client ] Client'
- description: ''
  name: '[ /api/application] Application'
