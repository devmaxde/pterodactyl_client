"""
    Pterodactyl v1 API Reference

    Welcome to the Pterodactyl v1 API documentation. This documentation is unofficial and provided by Dashflo.  If you find any errors throughout this API reference, please [let us know](https://dashflo.net/tickets/new). A special thanks to everyone who has helped contribute!  **The legacy Pterodactyl v0.7 API documentation [can be found here](https://dashflo.net/docs/api/pterodactyl/v0.7/).** Please remember you should not be using v0.7, and should upgrade as soon as possible.  Pterodactyl Links: **[Website](https://pterodactyl.io/)** | **[GitHub](https://github.com/pterodactyl)** | **[Discord](https://discord.gg/pterodactyl)**  <!-- # API Wrappers/SDKs These wrappers can help save time while working with the API in your programming language of choice.  - [Ptero4J](https://github.com/stanjg/Ptero4J) (Java) - [Pterodactyl4J](https://github.com/mattmalec/Pterodactyl4J) (Java) - [crocgodyl](https://github.com/parkervcp/crocgodyl) (Golang) - [Nodeactyl](https://github.com/Burchard36/Nodeactyl) (Node.js) - [pterodactyl-sdk](https://github.com/hcgcloud/pterodactyl-sdk) (PHP) - [Sharpdactyl](https://github.com/KadePcGames/Sharpdactyl) (C#) - [Pydactyl](https://github.com/iamkubi/pydactyl) (Python) - [aiodactyl](https://github.com/WardPearce/aiodactyl) (Python)  If you are a developer of a Pterodactyl API wrapper that's not listed here, feel free to [contact us](https://dashflo.net/tickets/new) and we can add your API wrapper/SDK to the list. -->  # Authentication A user can generate an client API key from: https://pterodactyl.app/account/api An admin can generate an application API key from: https://pterodactyl.app/admin/api  API keys are entered as bearer tokens with all API requests. Here is an example CURL request:  ``` curl \"<endpoint>\"   -H \"Authorization: Bearer <API-Key>\"   -H \"Content-Type: application/json\" \\   -H \"Accept: Application/vnd.pterodactyl.v1+json\" \\ ```  # Ratelimits 240 requests can be made each minute. Headers are returned to show thelimit, and how many are used within minute. ``` x-ratelimit-limit: 240 x-ratelimit-remaining: 237 ```  # Docs Guide Some API routes require data input, or have additional information that can be provided. The route will include table(s) with the available parameters.   | Name                 | Description       | |----------------------|-------------------| | Include parameters   | List of parameters that can be used after adding `?include=<parameters>,<more-parameters>` to the route | | Available parameters | List of all the different parameters available such as `?example=something&example2=something` | | Filters | Filter the data to only include certain information `?filter[uuid]=something` | | Sort by | Sort the returned results `?sort=-id`. Add a `-` before the sort type to reverse the order | | Fields               | Data input fields |  You can combine multiple filters, it'll look for all matching results. For example, you could add &filter[uuid]=3387 and then it'll only return test@example.com.  ** ** [![Dashflo](https://cdn.dashflo.net/promotions/banners/service/minecraft/7u54t2qnuu8qTRv4.png?cache300620192021 =100%x100% \"Dashflo\")](https://dashflo.net/store/dedicated-servers)  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


import unittest

import pterodactyl_client
from pterodactyl_client.api.files_file_manager_api import FilesFileManagerApi  # noqa: E501


class TestFilesFileManagerApi(unittest.TestCase):
    """FilesFileManagerApi unit test stubs"""

    def setUp(self):
        self.api = FilesFileManagerApi()  # noqa: E501

    def tearDown(self):
        pass

    def test___compress_compressfile(self):
        """Test case for __compress_compressfile

        [ /compress ] Compress file  # noqa: E501
        """
        pass

    def test___contents_getfilecontents(self):
        """Test case for __contents_getfilecontents

        [ /contents ] Get file contents  # noqa: E501
        """
        pass

    def test___copy_copyfile(self):
        """Test case for __copy_copyfile

        [ /copy ] Copy file  # noqa: E501
        """
        pass

    def test___create_folder_createfolder(self):
        """Test case for __create_folder_createfolder

        [ /create-folder ] Create folder  # noqa: E501
        """
        pass

    def test___decompress_decompressfile(self):
        """Test case for __decompress_decompressfile

        [ /decompress ] Decompress file  # noqa: E501
        """
        pass

    def test___delete_deletefile(self):
        """Test case for __delete_deletefile

        [ /delete] Delete file  # noqa: E501
        """
        pass

    def test___download_downloadfile(self):
        """Test case for __download_downloadfile

        [ /download ] Download file  # noqa: E501
        """
        pass

    def test___list_listfiles(self):
        """Test case for __list_listfiles

        [ /list ] List files  # noqa: E501
        """
        pass

    def test___rename_renamefile(self):
        """Test case for __rename_renamefile

        [ /rename ] Rename file  # noqa: E501
        """
        pass

    def test___upload_uploadfile(self):
        """Test case for __upload_uploadfile

        [ /upload ] Upload file  # noqa: E501
        """
        pass

    def test___write_writefile(self):
        """Test case for __write_writefile

        [ /write ] Write file  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
